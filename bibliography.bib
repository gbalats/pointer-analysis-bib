@article{mattmight:Dybvig:1993:Macro,
    abstract = {Naive program transformations can have surprising effects due to the interaction between introduced identifier references and previously existing identifier bindings, or between introduced bindings and previously existing references. These interactions can result in inadvertent binding, or capturing, of identifiers. A further complication is that transformed programs may have little resemblance to original programs, making correlation of source and object code difficult. This article describes an efficient macro system that prevents inadvertent capturing while maintaining the correlation between source and object code. The macro system allows the programmer to define program transformations using an unrestricted, general-purpose language. Previous approaches to the capturing problem have been inadequate, overly restrictive, or inefficient, and the problem of source-object correlation has been largely unaddressed. The macro system is based on a new algorithm for implementing syntactic transformations and a new representation for syntactic expressions.},
    author = {Dybvig, Kent R. and Hieb, Robert and Bruggeman, Carl},
    citeulike-article-id = {3623282},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/BF01806308},
    citeulike-linkout-1 = {http://www.springerlink.com/content/rh4u5364r6183v52},
    date-added = {2009-10-21 16:57:29},
    journal = {LISP and Symbolic Computation},
    keywords = {macros},
    month = {December},
    number = {4},
    pages = {295--326},
    priority = {2},
    title = {Syntactic abstraction in scheme},
    volume = {5},
    x-doi = {10.1007/BF01806308},
    x-url = {http://dx.doi.org/10.1007/BF01806308},
    year = {1993}
}



@inproceedings{mattmight:Clinger:1991:Macros,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Clinger, William and Rees, Jonathan},
    booktitle = {POPL '91: Proceedings of the 18th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {1163},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=99607},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/99583.99607},
    comment = {Describes the efficicent implementation of syntax-rules hygienic macros.},
    date-added = {2009-10-21 06:24:56},
    isbn = {0-89791-419-8},
    keywords = {macros},
    location = {Orlando, Florida, United States},
    pages = {155--162},
    priority = {5},
    title = {Macros that work},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/99583.99607},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/99583.99607},
    year = {1991}
}



@inproceedings{mattmight:Kohlbecker:1986:Macro,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Kohlbecker, Eugene and Friedman, Daniel P. and Felleisen, Matthias and Duba, Bruce},
    booktitle = {LFP '86: Proceedings of the 1986 ACM Conference on LISP and Functional Programming},
    citeulike-article-id = {1345},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=319859},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/319838.319859},
    date-added = {2009-10-21 05:17:02},
    isbn = {0-89791-200-4},
    keywords = {macros},
    location = {Cambridge, Massachusetts, United States},
    pages = {151--161},
    priority = {2},
    title = {Hygienic macro expansion},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/319838.319859},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/319838.319859},
    year = {1986}
}



@inproceedings{mattmight:Kohlbecker:1987:Macro,
    abstract = {This paper presents two new developments. First, it describes a  ” macro-by-example” specification language for syntactic abstractions in Lisp and related languages. This specification language allows a more declarative specification of macros than conventional macro facilities do by giving a better treatment of iteration and mapping constructs. Second, it gives a formal semantics for the language and a derivation of a compiler from the semantics. This derivation is a practical application of semantics-directed compiler development methodology.},
    author = {Kohlbecker, Eugene E. and Wand, Mitchell},
    booktitle = {POPL '87: Proceedings of the 14th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    citeulike-article-id = {190436},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=41632},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/41625.41632},
    date-added = {2009-10-21 05:13:33},
    isbn = {0-89791-215-2},
    keywords = {macros},
    location = {Munich, West Germany},
    pages = {77--84},
    priority = {4},
    title = {Macro-by-example: Deriving syntactic transformations from their specifications},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/41625.41632},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/41625.41632},
    year = {1987}
}



@incollection{mattmight:Cousot:2006:Parsing,
    author = {Cousot, Patrick and Cousot, Radhia},
    booktitle = {Program Analysis and Compilation, Theory and Practice: Essays dedicated to Reinhard Wilhelm},
    citeulike-article-id = {5914408},
    date-added = {2009-10-09 07:05:34},
    editor = {Reps, Tom and Sagiv, Mooly and Bauer, Jorg},
    keywords = {parsing},
    month = {December},
    pages = {178--203},
    priority = {2},
    series = {LNCS 4444},
    title = {Grammar Analysis and Parsing by Abstract Interpretation, invited chapter},
    x-publisher = {Springer\\discretionary{-}{}{-}Verlag},
    year = {2006}
}



@article{mattmight:Cousot:2003:Parsing,
    author = {Cousot, Patrick and Cousot, Radhia},
    citeulike-article-id = {5914403},
    date-added = {2009-10-09 07:03:46},
    journal = {Theoretical Computer Science},
    keywords = {parsing},
    pages = {531--544},
    priority = {2},
    title = {Parsing as Abstract Interpretation of Grammar Semantics},
    volume = {290},
    year = {2003}
}



@techreport{mattmight:DeRemer:1969:LALR,
    abstract = {A context-free syntactical translator (CFST) is a machine which defines a translation from one context-free language to another. A transduction grammar is a formal system based on a context-free grammar and it specifies a context-free syntactical translation. A simple suffix transduction grammar based on a context-free grammar which is LR(k) specifies a translation which can be defined by a deterministic push-down automation (DPDA). A method is presented for automatically constructing CFSTs (DPDAs) from those simple suffix transduction grammars which are based on the LR(k) grammars. The method is developed by first considering grammatical analysis from the string-manipulation viewpoint, then converting the resulting string-manipulation.},
    author = {DeRemer, Frank L.},
    citeulike-article-id = {5914368},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=888578},
    date-added = {2009-10-09 06:41:14},
    priority = {2},
    title = {Practical Translators for LR(k) Languages},
    x-address = {Cambridge, MA, USA},
    x-publisher = {Massachusetts Institute of Technology},
    x-url = {http://portal.acm.org/citation.cfm?id=888578},
    year = {1969}
}



@article{mattmight:DeRemer:1971:SLR,
    abstract = {A class of context-free grammars, called the  ” Simple  LR ( k )” or  SLR ( k ) grammars is defined. This class has been shown to include weak precedence and simple precedence grammars as proper subsets. How to construct parsers for the  SLR ( k ) grammars is also shown. These parser-construction techniques are extendible to cover all of the  LR ( k ) grammars of Knuth; they have been implemented and by direct comparison proved to be superior to precedence techniques, not only in the range of grammars covered, but also in the speed of parser construction and in the size and speed of the resulting parsers.},
    author = {DeRemer, Franklin L.},
    citeulike-article-id = {5427240},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=362625},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/362619.362625},
    date-added = {2009-10-09 06:39:26},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {parsing},
    number = {7},
    pages = {453--460},
    priority = {2},
    title = {Simple LR(k) grammars},
    volume = {14},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/362619.362625},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/362619.362625},
    year = {1971}
}



@inproceedings{mattmight:Masaru:1984:GLR,
    abstract = {MLR, an extended LR parser, is introduced, and its application to natural language parsing is discussed. An LR parser is a shift-reduce parser which is deterministically guided by a parsing table. A parsing table can be obtained automatically from a context-free phrase structure grammar. LR parsers cannot manage ambiguous grammars such as natural language grammars, because their parsing tables would have multiply-defined entries, which precludes deterministic parsing. MLR, however, can handle multiply-defined entries, using a dynamic programming method. When an input sentence is ambiguous, the MLR parser produces all possible parse trees without parsing any part of the input sentence more than once in the same way, despite the fact that the parser does not maintain a chart as in chart parsing. Our method also provides an elegant solution to the problem of multi-part-of-speech words such as "that". The MLR parser and its parsing table generator have been implemented at Carnegie-Mellon University.},
    author = {Tomita, Masaru},
    booktitle = {ACL-22: Proceedings of the 10th International Conference on Computational Linguistics and 22nd annual meeting on Association for Computational Linguistics},
    citeulike-article-id = {5914351},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=980564},
    citeulike-linkout-1 = {http://dx.doi.org/10.3115/980431.980564},
    date-added = {2009-10-09 06:35:10},
    keywords = {parsing},
    location = {Stanford, California},
    pages = {354--357},
    priority = {2},
    title = {LR parsers for natural languages},
    x-address = {Morristown, NJ, USA},
    x-doi = {10.3115/980431.980564},
    x-publisher = {Association for Computational Linguistics},
    x-url = {http://dx.doi.org/10.3115/980431.980564},
    year = {1984}
}



@article{mattmight:Earley:1970:Parsing,
    abstract = {A parsing algorithm which seems to be the most efficient general context-free algorithm known is described. It is similar to both Knuth's LR( k ) algorithm and the familiar top-down algorithm. It has a time bound proportional to  n 3  (where  n  is the length of the string being parsed) in general; it has an  n 2  bound for unambiguous grammars; and it runs in linear time on a large class of grammars, which seems to include most practical context-free programming language grammars. In an empirical comparison it appears to be superior to the top-down and bottom-up algorithms studied by Griffiths and Petrick.},
    author = {Earley, Jay},
    citeulike-article-id = {5914341},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=362035},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/362007.362035},
    date-added = {2009-10-09 06:31:38},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {parsing},
    number = {2},
    pages = {94--102},
    priority = {2},
    title = {An efficient context-free parsing algorithm},
    volume = {13},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/362007.362035},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/362007.362035},
    year = {1970}
}



@techreport{mattmight:Cocke:1970:CYK,
    author = {Cocke, John and Schwartz, Jacob T.},
    citeulike-article-id = {5914339},
    date-added = {2009-10-09 06:28:24},
    institution = {Courant Institute of Mathematical Sciences, New York University},
    keywords = {parsing},
    priority = {2},
    title = {Programming languages and their compilers: Preliminary notes},
    x-address = {New York, NY},
    year = {1970}
}



@techreport{mattmight:Kasami:1965:CYK,
    author = {An efficient recognition and syntax-analysis algorithm for context-free languages},
    citeulike-article-id = {5914335},
    date-added = {2009-10-09 06:26:26},
    institution = {Air Force Cambridge Research Lab},
    priority = {2},
    title = {Tadao Kasami},
    x-address = {Bedford, MA},
    year = {1965}
}



@article{mattmight:Younger:1967:CYK,
    author = {Younger, Daniel H.},
    citeulike-article-id = {5914327},
    date-added = {2009-10-09 06:23:37},
    journal = {Information and Control},
    keywords = {parsing},
    number = {2},
    pages = {189--208},
    priority = {2},
    title = {Recognition and parsing of context-free languages in time n3},
    volume = {10},
    year = {1967}
}



@article{mattmight:Knuth:1965:LR,
    author = {Knuth, Donald},
    citeulike-article-id = {5914311},
    date-added = {2009-10-09 06:17:47},
    journal = {Information and Control},
    keywords = {parsing},
    pages = {607--639},
    priority = {2},
    title = {On the Translation of Languages from Left to Right},
    volume = {8},
    year = {1965}
}



@article{mattmight:Floyd:1963:Syntactic,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Floyd, Robert W.},
    citeulike-article-id = {1730732},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=321179},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/321172.321179},
    date-added = {2009-10-09 06:11:05},
    issn = {0004-5411},
    journal = {Journal of the ACM},
    keywords = {parsing},
    month = {July},
    number = {3},
    pages = {316--333},
    priority = {2},
    title = {Syntactic Analysis and Operator Precedence},
    volume = {10},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/321172.321179},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/321172.321179},
    year = {1963}
}



@article{mattmight:Floyd:1964:Bounded,
    abstract = {Certain phase structure grammars define languages in which the phrasehood and structure of a substring of a sentence may be determined by consideration of only a bounded context of the substring. It is possible to determine, for any specified bound on the number of contextual characters considered, whether a given grammar is such a  bounded context grammar . Such grammars are free from syntactic ambiguity. Syntactic analysis of sentences in a bounded context language may be performed by a standard process and requires a number of operations proportional to the length of sentence analyzed.   Bounded context grammars form models for most languages used in computer programming, and many methods of syntactic analysis, including analysis by operator precedence, are special cases of bounded context analysis.},
    author = {Floyd, Robert W.},
    citeulike-article-id = {5427196},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=363921.363927},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/363921.363927},
    date-added = {2009-10-09 06:07:02},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {parsing},
    number = {2},
    pages = {62--67},
    priority = {2},
    title = {Bounded context syntactic analysis},
    volume = {7},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/363921.363927},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/363921.363927},
    year = {1964}
}



@book{mattmight:Chomsky:2002:Structures,
    abstract = {JANUA LINGUARUM / Paperback / 117 pages / Syntactic Structures},
    author = {Chomsky, Noam},
    citeulike-article-id = {3158752},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/3110172798},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/3110172798},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/3110172798},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/3110172798},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/3110172798/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/3110172798},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/3110172798},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN3110172798},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=3110172798\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/3110172798},
    date-added = {2009-10-09 06:05:04},
    edition = {2nd},
    howpublished = {Paperback},
    isbn = {3110172798},
    keywords = {context-free-grammars, grammars, parsing},
    month = {December},
    priority = {2},
    title = {Syntactic Structures},
    x-publisher = {Walter de Gruyter},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/3110172798},
    year = {2002}
}



@inproceedings{mattmight:Pratt:1973:TopDown,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Pratt, Vaughan R.},
    booktitle = {POPL '73: Proceedings of the 1st annual ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    citeulike-article-id = {1609132},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=512931},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/512927.512931},
    date-added = {2009-10-09 05:57:37},
    keywords = {parsing},
    location = {Boston, Massachusetts},
    pages = {41--51},
    priority = {2},
    title = {Top down operator precedence},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/512927.512931},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/512927.512931},
    year = {1973}
}



@book{mattmight:Dijkstra:1982:ShuntingYard,
    author = {Dijkstra, Edsger W.},
    citeulike-article-id = {1458676},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0387906525},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0387906525},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0387906525},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0387906525},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0387906525/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0387906525},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0387906525},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0387906525},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0387906525\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0387906525},
    date-added = {2009-10-09 05:53:15},
    howpublished = {Hardcover},
    isbn = {0387906525},
    keywords = {parsing},
    month = {October},
    priority = {2},
    title = {Selected Writings on Computing: A Personal Perspective},
    x-publisher = {Springer},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0387906525},
    year = {1982}
}



@book{mattmight:Wirth:1996:CompilerConstruction,
    author = {Wirth, Niklaus},
    citeulike-article-id = {5914226},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0201403536},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0201403536},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0201403536},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201403536},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201403536/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201403536},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201403536},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201403536},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201403536\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201403536},
    date-added = {2009-10-09 05:45:53},
    edition = {Pap/Dsk},
    howpublished = {Paperback},
    isbn = {0201403536},
    keywords = {compilers},
    priority = {2},
    title = {Compiler Construction (International Computer Science Series)},
    x-publisher = {Addison-Wesley Pub (Sd)},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201403536}
}



@inproceedings{mattmight:Ford:2002:Packrat,
    abstract = {Packrat parsing is a novel technique for implementing parsers in a lazy functional programming language. A packrat parser provides the power and flexibility of top-down parsing with backtracking and unlimited lookahead, but nevertheless guarantees linear parse time. Any language defined by an LL(k) or LR(k) grammar can be recognized by a packrat parser, in addition to many languages that conventional linear-time algorithms do not support. This additional power simplifies the handling of common...},
    author = {Ford, Bryan},
    booktitle = {Proceedings of the 2002 International Conference on Functional Programming},
    citeulike-article-id = {3219},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.1175},
    date-added = {2009-10-09 03:20:51},
    keywords = {parsing},
    month = {Oct},
    priority = {2},
    title = {Packrat Parsing: Simple, Powerful, Lazy, Linear Time},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.1175},
    year = {2002}
}



@inproceedings{mattmight:Blanchet:1998:Escape,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Blanchet, Bruno},
    booktitle = {POPL '98: Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5908472},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=268949},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/268946.268949},
    date-added = {2009-10-08 04:31:05},
    isbn = {0-89791-979-3},
    keywords = {abstract-interpretation, escape-analysis, static-analysis},
    location = {San Diego, California, United States},
    pages = {25--37},
    priority = {2},
    title = {Escape analysis: Correctness proof, implementation and experimental results},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/268946.268949},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/268946.268949},
    year = {1998}
}



@inproceedings{mattmight:Bravenboer:2009:Exceptions,
    abstract = {Exception analysis and points-to analysis are typically done in complete separation. Past algorithms for precise exception analysis (e.g., pairing throw clauses with catch statements) use pre-computed points-to information. Past points-to analyses either unsoundly ignore exceptions, or conservatively compute a crude approximation of exception throwing (e.g., considering an exception throw as an assignment to a global variable, accessible from any catch clause). We show that this separation results in significant slowdowns or vast imprecision. The two kinds of analyses are interdependent: neither can be performed accurately without the other. The interdependency leads us to propose a joint handling for performance and precision. We show that our exception analysis is expressible highly elegantly in a declarative form, and can apply to points-to analyses of varying precision. In fact, our specification of exception analysis is "fully precise", as it models closely the Java exception handling semantics. The necessary approximation is provided only through whichever abstractions are used for contexts and objects in the base points-to analysis. Our combined approach achieves similar precision relative to exceptions (exception-catch links) as the best past precise exception analysis, with a runtime of seconds instead of tens of minutes. At the same time, our analysis achieves much higher precision of points-to information (an average of half as many values for each reachable variable for most of the DaCapo benchmarks) than points-to analyses that treat exceptions conservatively, all at a fraction of the execution time.},
    author = {Bravenboer, Martin and Smaragdakis, Yannis},
    booktitle = {ISSTA '09: Proceedings of the Eighteenth International Symposium on Software Testing and Analysis},
    citeulike-article-id = {5908454},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1572272.1572274},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1572272.1572274},
    date-added = {2009-10-08 04:14:22},
    isbn = {978-1-60558-338-9},
    keywords = {alias-analysis, exceptions},
    location = {Chicago, IL, USA},
    pages = {1--12},
    priority = {4},
    title = {Exception analysis and points-to analysis: Better together},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1572272.1572274},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1572272.1572274},
    year = {2009}
}



@article{mattmight:Cousot:1999:ModelChecking,
    author = {Cousot, Patrick and Cousot, Radhia},
    citeulike-article-id = {5908422},
    date-added = {2009-10-08 03:57:20},
    journal = {Automated Software Engineering},
    keywords = {abstract-interpretation},
    number = {1},
    pages = {69--95},
    priority = {2},
    title = {Refining Model Checking by Abstract Interpretation},
    volume = {6},
    year = {1999}
}



@article{mattmight:Cousot:1992:Frameworks,
    author = {Cousot, Patrick and Cousot, Radhia},
    citeulike-article-id = {5908413},
    date-added = {2009-10-08 03:54:00},
    journal = {Journal of Logic and Computation},
    keywords = {abstract-interpretation},
    number = {4},
    pages = {511--547},
    priority = {0},
    title = {Abstract Interpretation Frameworks},
    volume = {2},
    x-publisher = {Oxford University Press, Oxford, UK},
    year = {1992}
}



@inproceedings{mattmight:Might:2009:Dependence,
    author = {Might, Matthew and Prabhu, Tarun},
    booktitle = {Proceedings of the 2009 Workshop on Scheme and Functional Programming},
    citeulike-article-id = {5906649},
    citeulike-linkout-0 = {http://matt.might.net/},
    date-added = {2009-10-07 17:29:07},
    keywords = {cfa, dependence, parallelization},
    priority = {0},
    title = {Interprocedural dependence analysis of higher-order programs via stack reachability},
    x-address = {Boston, Massachussetts, USA},
    x-url = {http://matt.might.net/},
    year = {2009}
}



@techreport{mattmight:Henglein:1992:ClosureAnalysis,
    author = {Henglein, Fritz},
    citeulike-article-id = {5906626},
    date-added = {2009-10-07 17:22:24},
    institution = {Department of Computer Science, University of Copenhagen (DIKU)},
    keywords = {cfa},
    month = {March},
    priority = {0},
    title = {Simple Closure Analysis},
    year = {1992}
}



@article{mattmight:R5RS,
    abstract = {Programming languages should be designed not by piling feature on top of feature, but by removing the weaknesses and restrictions that make additional features appear necessary. Scheme demonstrates that a very small number of rules for forming expressions, with no restrictions on how they are composed, suffice to form a practical and efficient programming language that is flexible enough to support most of the major programming paradigms in use today.},
    author = {Kelsey, Richard and Clinger, William and Editors, Jonathan R.},
    citeulike-article-id = {4855},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.4808},
    date-added = {2009-10-07 17:16:28},
    editor = {Kelsey, Richard and Clinger, William and Rees, Jonathan},
    journal = {ACM SIGPLAN Notices},
    keywords = {r5rs, scheme},
    number = {9},
    pages = {26--76},
    priority = {0},
    title = {Fifth Revised Report on the Algorithmic Language Scheme},
    volume = {33},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.4808},
    year = {1998}
}



@misc{mattmight:McBride:2001:Derivative,
    abstract = {Polymorphic regular types are tree-like datatypes generated by polynomial type expressions over a set of free variables and closed under least fixed point. The `equality types' of Core ML can be expressed in this form. Given such a type expression T with x free, this paper shows a way to represent the one-hole contexts for elements of x within elements of T , together with an operation which will plug an element of x into the hole of such a context. One-hole contexts are given as inhabitants of ...},
    author = {McBride, Conor},
    citeulike-article-id = {3318},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.22.8611},
    date-added = {2009-10-07 17:09:43},
    keywords = {derivative, type-theory},
    priority = {2},
    title = {The derivative of a regular type is its type of one-hole contexts},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.22.8611},
    year = {2001}
}



@misc{mattmight:Comon:2007:TATA,
    author = {Comon, H. and Dauchet, M. and Gilleron, R. and L\"{o}ding, C. and Jacquemard, F. and Lugiez, D. and Tison, S. and Tommasi, M.},
    citeulike-article-id = {5906243},
    comment = {release October, 12th 2007},
    date-added = {2009-10-07 17:03:49},
    howpublished = {Available on: {\tt http://www.grappa.univ-lille3.fr/tata}},
    keywords = {tree-automata},
    priority = {2},
    title = {Tree Automata Techniques and Applications},
    year = {2007}
}



@phdthesis{mattmight:Felleisen:1987:Dissertation,
    author = {Felleisen, Matthias},
    citeulike-article-id = {5906226},
    date-added = {2009-10-07 16:58:55},
    keywords = {cek},
    priority = {2},
    school = {Indiana University},
    title = {The Calculi of Lambda-v-CS Conversion: A Syntactic Theory of Control and State in Imperative Higher-Order Programming Languages},
    year = {1987}
}



@inproceedings{mattmight:Felleisen:1986:CEK,
    author = {Felleisen, Matthias and Friedman, Daniel P.},
    booktitle = {3rd Working Conference on the Formal Description of Programming Concepts},
    citeulike-article-id = {5906202},
    date-added = {2009-10-07 16:53:00},
    keywords = {cek},
    month = {August},
    priority = {2},
    title = {Control operators, the SECD-machine, and the lambda-calculus},
    year = {1986}
}



@inproceedings{mattmight:Midtgaard:2009:CFA,
    abstract = {We derive a control-flow analysis that approximates the interprocedural control-flow of both function calls and returns in the presence of first-class functions and tail-call optimization. In addition to an abstract environment, our analysis computes for each expression an abstract control stack, effectively approximating where function calls return across optimized tail calls. The analysis is systematically calculated by abstract interpretation of the stack-based CaEK abstract machine of Flanagan et al. using a series of Galois connections. Abstract interpretation provides a unifying setting in which we 1) prove the analysis equivalent to the composition of a continuation-passing style (CPS) transformation followed by an abstract interpretation of a stack-less CPS machine, and 2) extract an equivalent constraint-based formulation, thereby providing a rational reconstruction of a constraint-based control-flow analysis from abstract interpretation principles.},
    author = {Midtgaard, Jan and Jensen, Thomas P.},
    booktitle = {ICFP '09: Proceedings of the 14th ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5904200},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1596550.1596592},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1596550.1596592},
    date-added = {2009-10-07 03:27:09},
    isbn = {978-1-60558-332-7},
    keywords = {abstract-interpretation, cfa, control-flow-analysis},
    location = {Edinburgh, Scotland},
    pages = {287--298},
    priority = {0},
    title = {Control-flow analysis of function calls and returns by abstract interpretation},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1596550.1596592},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1596550.1596592},
    year = {2009}
}



@inproceedings{mattmight:Warth:2008:PEG,
    abstract = {Packrat parsing offers several advantages over other parsing techniques, such as the guarantee of linear parse times while supporting backtracking and unlimited look-ahead. Unfortunately, the limited support for left recursion in packrat parser implementations makes them difficult to use for a large class of grammars (Java's, for example). This paper presents a modification to the memoization mechanism used by packrat parser implementations that makes it possible for them to support (even indirectly or mutually) left-recursive rules. While it is possible for a packrat parser with our modification to yield super-linear parse times for some left-recursive grammars, our experimentsshow that this is not the case for typical uses of left recursion.},
    author = {Warth, Alessandro and Douglass, James R. and Millstein, Todd},
    booktitle = {PEPM '08: Proceedings of the 2008 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation},
    citeulike-article-id = {4140249},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1328408.1328424},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1328408.1328424},
    date-added = {2009-09-22 23:43:12},
    isbn = {978-1-59593-977-7},
    keywords = {compilers, parsing, peg},
    location = {San Francisco, California, USA},
    pages = {103--110},
    priority = {2},
    title = {Packrat parsers can support left recursion},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1328408.1328424},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1328408.1328424},
    year = {2008}
}



@article{mattmight:Owens:2009:Derivative,
    abstract = {Regular-expression derivatives are an old, but elegant, technique for compiling regular expressions to deterministic finite-state machines. It easily supports extending the regular-expression operators with boolean operations, such as intersection and complement. Unfortunately, this technique has been lost in the sands of time and few computer scientists are aware of it. In this paper, we reexamine regular-expression derivatives and report on our experiences in the context of two different functional-language implementations. The basic implementation is simple and we show how to extend it to handle large character sets (e.g., Unicode). We also show that the derivatives approach leads to smaller state machines than the traditional algorithm given by McNaughton and Yamada.},
    author = {Owens, Scott and Reppy, John and Turon, Aaron},
    citeulike-article-id = {5794072},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1520288},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/S0956796808007090},
    date-added = {2009-09-17 06:41:14},
    issn = {0956-7968},
    journal = {Journal of Functional Programming},
    keywords = {lexing},
    number = {2},
    pages = {173--190},
    priority = {2},
    title = {Regular-expression derivatives re-examined},
    volume = {19},
    x-address = {New York, NY, USA},
    x-doi = {10.1017/S0956796808007090},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/10.1017/S0956796808007090},
    year = {2009}
}



@article{mattmight:Shannon:1948:Communication,
    author = {Shannon, Claude E.},
    citeulike-article-id = {5671619},
    date-added = {2009-08-29 14:40:29},
    journal = {The Bell Systems Technical Journal},
    keywords = {information-theory},
    month = {July},
    pages = {379--423},
    priority = {4},
    title = {A Mathematical Theory of Communication},
    volume = {27},
    year = {1948}
}



@article{mattmight:Jones:2008:SizeChange,
    author = {Jones, Neil D. and Bohr, Nina},
    citeulike-article-id = {5666342},
    citeulike-linkout-0 = {http://www.lmcs-online.org/ojs/viewarticle.php?id=333\&\#38;layout=abstract},
    date-added = {2009-08-29 04:23:52},
    journal = {Logical Methods in Computer Science},
    number = {1},
    pages = {1--39},
    priority = {4},
    title = {Call-by-value termination in the untyped lambda-calculus},
    volume = {4},
    x-url = {http://www.lmcs-online.org/ojs/viewarticle.php?id=333\&\#38;layout=abstract},
    year = {2008}
}



@inproceedings{mattmight:Jones:1981:LambdaFlow,
    author = {Jones, Neil D.},
    booktitle = {Proceedings of the 8th Colloquium on Automata, Languages and Programming},
    citeulike-article-id = {5666324},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=682702},
    date-added = {2009-08-29 04:20:13},
    isbn = {3-540-10843-2},
    keywords = {abstract-interpretation, cfa, control-flow-analysis, static-analysis},
    pages = {114--128},
    priority = {2},
    title = {Flow Analysis of Lambda Expressions (Preliminary Version)},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=682702},
    year = {1981}
}



@inproceedings{mattmight:Jagannathan:1998:Single,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Jagannathan, Suresh and Thiemann, Peter and Weeks, Stephen and Wright, Andrew},
    booktitle = {POPL '98: Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5666257},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=268973},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/268946.268973},
    date-added = {2009-08-29 04:00:34},
    isbn = {0-89791-979-3},
    keywords = {constraint-solving},
    location = {San Diego, California, United States},
    pages = {329--341},
    priority = {0},
    title = {Single and loving it: must-alias analysis for higher-order languages},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/268946.268973},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/268946.268973},
    year = {1998}
}



@inproceedings{mattmight:Gulwani:2008:Quantified,
    abstract = {We describe a general technique for building abstract interpreters over powerful  universally quantified  abstract domains that leverage existing quantifier-free domains. Our quantified abstract domain can represent universally quantified facts like ∀ i (0 ≤  i  <  n  ⇒ a[ i ] = 0). The principal challenge in this effort is that, while most domains supply over-approximations of operations like join, meet, and variable elimination, working with the guards of quantified facts requires  under -approximation. We present an automatic technique to convert the standard over-approximation operations provided with all domains into sound under-approximations. We establish the correctness of our abstract interpreters by identifying two lattices---one that establishes the soundness of the abstract interpreter and another that defines its precision, or completeness. Our experiments on a variety of programs using arrays and pointers (including several sorting algorithms) demonstrate the feasibility of the approach on challenging examples.},
    author = {Gulwani, Sumit and {Mccloskey}, Bill and Tiwari, Ashish},
    booktitle = {POPL '08: Proceedings of the 35th annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5665539},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1328468},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1328438.1328468},
    date-added = {2009-08-29 02:50:43},
    isbn = {978-1-59593-689-9},
    keywords = {abstract-interpretation},
    location = {San Francisco, California, USA},
    pages = {235--246},
    priority = {0},
    title = {Lifting abstract interpreters to quantified logical domains},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1328438.1328468},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1328438.1328468},
    year = {2008}
}



@inproceedings{mattmight:Schmidt:1997:SmallStep,
    author = {Schmidt, David A.},
    booktitle = {Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages},
    citeulike-article-id = {5665466},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=710955},
    date-added = {2009-08-29 02:42:27},
    isbn = {3-540-62503-8},
    keywords = {abstract-interpretation, static-analysis},
    pages = {76--99},
    priority = {2},
    title = {Abstract Interpretation of Small-Step Semantics},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=710955},
    year = {1997}
}



@article{mattmight:Cousot:1991:HigherOrder,
    abstract = {We propose a method for the separate static analysis of higher-order functions and procedures using relational abstract domains as opposed to the abstraction of functions by functions on abstract values (as in minimal function graphs).},
    author = {Cousot, Patrick and Cousot, Radhia},
    citeulike-article-id = {5664368},
    date-added = {2009-08-28 21:12:37},
    journal = {BIGRE},
    keywords = {abstract-interpretation},
    pages = {33--36},
    priority = {2},
    title = {Relational abstract interpretation of higher-order functional programs. {JTASPEFL'91}, {B}ordeaux},
    volume = {74},
    x-publisher = {IRISA, Rennes, France},
    year = {1991}
}



@inproceedings{mattmight:Cousot:1994:HigherOrder,
    abstract = {The original formulation of abstract interpretation represents program properties by sets. A property is understood as the set of semantic values satisfying it. Strongest program properties are defined by the collecting semantics which extends the standard semantics to powersets of semantic values. The approximation relation corresponding to the logical implication of program properties is subset inclusion. This was expressed using set and lattice theory in the context of transition systems. Some applications of abstract interpretation, such as strictness analysis for lazy functional languages, require infinite behaviours of higher-order functions to be taken into account. We solve the problem by returning to the sources of abstract interpretation, which consists in considering collecting semantics. By using Galois connections, properties of the standard semantics naturally transfer to the collecting and then to the abstract semantics. This set-theoretic abstract interpretation framework is formulated in a way which is independent of both the programming language and the method used to specify its semantics. It is illustrated for a higher-order monomorphically typed lazy functional language starting from its standard denotational semantics},
    author = {Cousot, Patrick and Cousot, Radhia},
    booktitle = {Proceedings of the 1994 International Conference on Computer Languages},
    citeulike-article-id = {5664358},
    citeulike-linkout-0 = {http://www.di.ens.fr/\~{}cousot/COUSOTpapers/ICCL94.shtml},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/ICCL.1994.288389},
    date-added = {2009-08-28 21:10:57},
    keywords = {abstract-interpretation},
    location = {Toulouse, France},
    pages = {95--112},
    priority = {2},
    title = {Higher-order abstract interpretation (and application to comportment analysis generalizing strictness, termination, projection and PER analysis of functional languages)},
    x-doi = {10.1109/ICCL.1994.288389},
    x-publisher = {IEEE Computer Society Press},
    x-url = {http://dx.doi.org/10.1109/ICCL.1994.288389},
    year = {1994}
}



@inproceedings{mattmight:Kidd:2009:Random,
    abstract = {This paper describes the methods used in  Empire , a tool to detect concurrency-related bugs, namely atomic-set serializability violations in Java programs. The correctness criterion is based on  atomic sets  of memory locations, which share a consistency property, and  units of work , which preserve consistency when executed sequentially.  Empire  checks that, for each atomic set, its units of work are serializable. This notion subsumes data races (single-location atomic sets), and serializability (all locations in one atomic set).},
    author = {Kidd, Nicholas and Reps, Thomas and Dolby, Julian and Vaziri, Mandana},
    booktitle = {VMCAI '09: Proceedings of the 10th International Conference on Verification, Model Checking, and Abstract Interpretation},
    citeulike-article-id = {5663689},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1505383},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-540-93900-9\_18},
    date-added = {2009-08-28 16:30:37},
    isbn = {978-3-540-93899-6},
    location = {Savannah, GA},
    pages = {198--213},
    priority = {2},
    title = {Finding Concurrency-Related Bugs Using Random Isolation},
    x-address = {Berlin, Heidelberg},
    x-doi = {10.1007/978-3-540-93900-9\_18},
    x-publisher = {Springer-Verlag},
    x-url = {http://dx.doi.org/10.1007/978-3-540-93900-9\_18},
    year = {2009}
}



@inproceedings{mattmight:Dimoulas:2009:Aggregate,
    abstract = {We present a multi-pass interprocedural analysis and transformation for the functional aggregate update problem. Our solution handles untyped programs, including unrestricted closures and nested arrays. Also, it can handle programs that contain a mix of functional and destructive updates. Correctness of all the analyses and of the transformation itself is proved.},
    author = {Dimoulas, Christos and Wand, Mitchell},
    booktitle = {VMCAI '09: Proceedings of the 10th International Conference on Verification, Model Checking, and Abstract Interpretation},
    citeulike-article-id = {5663680},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1505373},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-540-93900-9\_8},
    date-added = {2009-08-28 16:24:27},
    isbn = {978-3-540-93899-6},
    keywords = {cfa, control-flow-analysis, static-analysis},
    location = {Savannah, GA},
    pages = {44--58},
    priority = {2},
    title = {The Higher-Order Aggregate Update Problem},
    x-address = {Berlin, Heidelberg},
    x-doi = {10.1007/978-3-540-93900-9\_8},
    x-publisher = {Springer-Verlag},
    x-url = {http://dx.doi.org/10.1007/978-3-540-93900-9\_8},
    year = {2009}
}



@phdthesis{mattmight:Sestoft:1991:Dissertation,
    abstract = {machines and implementations : : : : : : : : : : : : : : : : : : : 7
1.4 Optimized implementation : : : : : : : : : : : : : : : : : : : : : : : : : : : 9
1.5 Plan of the report : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 10
2 Semantics-Based Program Analysis 12
2.1 Semantics and program analysis : : : : : : : : : : : : : : : : : : : : : : : : 12
2.2 Abstract interpretation : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 12
2.3 Semantic analysis information : : : :...},
    author = {Sestoft, Peter},
    citeulike-article-id = {1541919},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.8.7762},
    date-added = {2009-08-28 16:22:05},
    keywords = {cfa, control-flow-analysis, static-analysis},
    month = {Oct},
    priority = {2},
    school = {University of Copenhagen},
    title = {Analysis and efficient implementation of functional programs},
    x-address = {Denmark},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.8.7762},
    year = {1991}
}



@inproceedings{mattmight:Wand:1994:Lightweight,
    abstract = {We consider the problem of selective and lightweight closure conversion, in which multiple procedure-calling protocols may coexist in the same code. Flow analysis is used to match the protocol expected by each procedure and the protocol used at each of its possible call sites. We formulate the flow analysis as the solution of a set of constraints, and show that any solution to the constraints justifies the resulting transformation. Some of the techniques used are suggested by those of abstract interpretation, but others arise out of alternative approaches.},
    author = {Wand, Mitchell and Steckler, Paul},
    booktitle = {POPL '94: Proceedings of the 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5663668},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=178044},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/174675.178044},
    date-added = {2009-08-28 16:19:00},
    isbn = {0-89791-636-0},
    keywords = {cfa, environment-analysis, static-analysis},
    location = {Portland, Oregon, United States},
    pages = {435--445},
    priority = {2},
    title = {Selective and lightweight closure conversion},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/174675.178044},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/174675.178044},
    year = {1994}
}



@inproceedings{mattmight:Chase:1990:Analysis,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Chase, David R. and Wegman, Mark and Zadeck, F. Kenneth},
    booktitle = {PLDI '90: Proceedings of the ACM SIGPLAN 1990 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {741317},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=93585},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/93542.93585},
    date-added = {2009-08-28 16:11:22},
    isbn = {0-89791-364-7},
    keywords = {alias-analysis, pointer-analysis, shape-analysis, static-analysis},
    location = {White Plains, New York, United States},
    pages = {296--310},
    priority = {0},
    title = {Analysis of pointers and structures},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/93542.93585},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/93542.93585},
    year = {1990}
}



@inproceedings{mattmight:DallaPreda:2007:Malware,
    abstract = {Malware detection is a crucial aspect of software security. Current malware detectors work by checking for "signatures," which attempt to capture (syntactic) characteristics of the machine-level byte sequence of the malware. This reliance on a syntactic approach makes such detectors vulnerable to code obfuscations, increasingly used by malware writers, that alter syntactic properties of the malware byte sequence without significantly affecting their execution behavior.This paper takes the position that the key to malware identification lies in their semantics. It proposes a semantics-based framework for reasoning about malware detectors and proving properties such as soundness and completeness of these detectors. Our approach uses a trace semantics to characterize the behaviors of malware as well as the program being checked for infection, and uses abstract interpretation to "hide" irrelevant aspects of these behaviors. As a concrete application of our approach, we show that the semantics-aware malware detector proposed by Christodorescu  et al.  is complete with respect to a number of common obfuscations used by malware writers.},
    author = {Preda, Mila D. and Christodorescu, Mihai and Jha, Somesh and Debray, Saumya},
    booktitle = {POPL '07: Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {2630382},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1190216.1190270},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1190216.1190270},
    date-added = {2009-08-18 06:09:05},
    isbn = {1-59593-575-4},
    keywords = {security},
    location = {Nice, France},
    pages = {377--388},
    priority = {5},
    title = {A semantics-based approach to malware detection},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1190216.1190270},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1190216.1190270},
    year = {2007}
}



@article{mattmight:Necula:2005:CCured,
    author = {Necula, George C. and Condit, Jeremy and Harren, Matthew and Mcpeak, Scott and Weimer, Westley},
    citeulike-article-id = {716333},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1065892},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1065887.1065892},
    date-added = {2009-08-18 05:50:16},
    issn = {0164-0925},
    journal = {ACM Transactions on Programming Languages and Systems},
    keywords = {security},
    month = {May},
    number = {3},
    pages = {477--526},
    priority = {2},
    title = {{CCured}: Type-safe retrofitting of legacy software},
    volume = {27},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1065887.1065892},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/10.1145/1065887.1065892},
    year = {2005}
}



@inproceedings{mattmight:Jim:2002:Cyclone,
    abstract = {Cyclone is a safe dialect of C. It has been designedfrom the ground up to prevent the bu\#er overflows,format string attacks, and memory management errorsthat are common in C programs, while retainingC's syntax and semantics. This paper examinessafety violations enabled by C's design, and showshow Cyclone avoids them, without giving up C'shallmark control over low-level details such as datarepresentation and memory management.},
    author = {Jim, Trevor and Morrisett, Greg and Grossman, Dan and Hicks, Michael and Cheney, James and Wang, Yanling},
    booktitle = {USENIX Annual Technical Conference},
    citeulike-article-id = {257826},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.5.4986},
    date-added = {2009-08-18 03:03:29},
    keywords = {security},
    month = {June},
    priority = {2},
    title = {Cyclone: A safe dialect of {C}},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.5.4986},
    year = {2002}
}



@misc{mattmight:UCombinator,
    author = {Might, Matthew},
    citeulike-article-id = {5446071},
    citeulike-linkout-0 = {http://www.ucombinator.org/},
    date-added = {2009-08-17 02:04:02},
    howpublished = {http://www.ucombinator.org/},
    institution = {University of Utah},
    keywords = {ucombinator},
    organization = {U Combinator},
    priority = {0},
    title = {A Research Group for Static Analysis of Higher-Order Languages},
    x-address = {Salt Lake City, Utah},
    x-url = {http://www.ucombinator.org/}
}



@unpublished{mattmight:Lawson:2008:ChinaCisco,
    author = {Lawson, Stephen and Mcmillan, Robert},
    citeulike-article-id = {5445980},
    citeulike-linkout-0 = {http://www.infoworld.com/d/security-central/fbi-worried-dod-sold-counterfeit-cisco-gear-266},
    date-added = {2009-08-17 01:46:09},
    howpublished = {http://www.infoworld.com/d/security-central/fbi-worried-dod-sold-counterfeit-cisco-gear-266},
    keywords = {security},
    month = {May},
    organization = {InfoWorld},
    priority = {0},
    title = {{FBI} worried as {DoD} sold counterfeit {Cisco} gear: By tampering with networking equipment, spies could open up a back door to sensitive military systems},
    x-url = {http://www.infoworld.com/d/security-central/fbi-worried-dod-sold-counterfeit-cisco-gear-266},
    year = {2008}
}



@unpublished{mattmight:Behar:2008:Satyam,
    author = {Behar, Richard},
    citeulike-article-id = {5445978},
    citeulike-linkout-0 = {http://www.foxnews.com/story/0,2933,435681,00.html},
    date-added = {2009-08-17 01:42:41},
    howpublished = {http://www.foxnews.com/story/0,2933,435681,00.html},
    keywords = {security},
    month = {October},
    priority = {0},
    title = {World Bank Under Cyber Siege in `Unprecedented Crisis'},
    x-publisher = {FOX News},
    x-url = {http://www.foxnews.com/story/0,2933,435681,00.html},
    year = {2008}
}



@techreport{mattmight:DoD:2007:ForeignInfluence,
    author = {Lucky, Robert},
    citeulike-article-id = {5445733},
    date-added = {2009-08-16 21:12:44},
    institution = {Department of Defense},
    keywords = {dod, malware, security},
    priority = {0},
    title = {Mission Impact of Foreign Influence  
on DoD Software},
    x-address = {Washington, D.C.},
    year = {2007}
}



@inproceedings{mattmight:Derrin:2009:seL4,
    abstract = {Complete formal verification is the only way to guarantee that a system is free of programming errors.

We present ent our experience in performing the formal, machine-checked verification of the seL4 microkernel from an abstract specification down to its C implementation. We assume correctness of compiler, assembly code, and hardware, and we used a unique design approach that fuses formal and operating systems techniques. To our knowledge, this is the first formal proof of functional correctness of a complete, general-purpose operating-system kernel. Functional correctness means here that the implementation always strictly follows our high-level abstract specification of kernel behaviour. This encompasses traditional design and implementation safety properties such as the kernel will never crash, and it will never perform an unsafe operation. It also proves much more: we can predict precisely how the kernel will behave in every possible situation.

seL4, a third-generation microkernel of L4 provenance, comprises 8,700 lines of C code and 600 lines of assembler. Its performance is comparable to other high-performance L4 kernels.},
    author = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
    booktitle = {SOSP 2009: Proceedings of the 22nd ACM Symposium on Operating Systems Principles},
    citeulike-article-id = {5445596},
    date-added = {2009-08-16 17:28:37},
    keywords = {verification},
    month = {October},
    organization = {ACM},
    priority = {2},
    title = {seL4: Formal verification of an OS kernel},
    x-address = {Big Sky, Montana},
    year = {2009}
}



@article{mattmight:Levenshtein:1966:Correcting,
    abstract = {Not Available},
    author = {Levenshtein, Vladimir I.},
    citeulike-article-id = {1667643},
    citeulike-linkout-0 = {http://adsabs.harvard.edu/cgi-bin/nph-bib\_query?bibcode=1966SPhD...10..707L},
    date-added = {2009-08-16 15:37:30},
    journal = {Soviet Physics Doklady},
    keywords = {error-correcting-codes},
    month = {February},
    number = {8},
    pages = {707--710},
    priority = {2},
    title = {Binary Codes Capable of Correcting Deletions, Insertions and Reversals},
    volume = {10},
    x-url = {http://adsabs.harvard.edu/cgi-bin/nph-bib\_query?bibcode=1966SPhD...10..707L},
    year = {1966}
}



@inproceedings{mattmight:Rehof:2001:TypeBased,
    abstract = {We present a novel approach to scalable implementation of type-based flow analysis with polymorphic subtyping. Using a new presentation of polymorphic subytping with instantiation constraints, we are able to apply context-free language (CFL) reachability techniques to type-based flow analysis. We develop a CFL-based algorithm for computing flow-information in time O( n \&sup3;), where  n  is the size of the typed program. The algorithm substantially improves upon the best previously known algorithm for flow analysis based on polymorphic subtyping with complexity O( n 8 ). Our technique also yields the first demand-driven algorithm for polymorphic subtype-based flow-computation. It works directly on higher-order programs with structured data of finite type (unbounded data structures are incorporated via finite approximations), supports context-sensitive, global flow summariztion and includes polymorphic recursion.},
    author = {Rehof, Jakob and F\"{a}hndrich, Manuel},
    booktitle = {POPL '01: Proceedings of the 28th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5442196},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=360204.360208},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/360204.360208},
    date-added = {2009-08-15 05:13:36},
    isbn = {1-58113-336-7},
    keywords = {cfa, control-flow-analysis, type-based-analysis},
    location = {London, United Kingdom},
    pages = {54--66},
    priority = {2},
    title = {Type-based flow analysis: From polymorphic subtyping to CFL-reachability},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/360204.360208},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/360204.360208},
    year = {2001}
}



@article{mattmight:Brzozowski:1964:Derivative,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Brzozowski, Janusz A.},
    citeulike-article-id = {341515},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=321249},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/321239.321249},
    date-added = {2009-08-14 02:33:11},
    issn = {0004-5411},
    journal = {Journal of the ACM},
    keywords = {compiler, lexing, regular-expressions},
    month = {October},
    number = {4},
    pages = {481--494},
    priority = {0},
    title = {Derivatives of Regular Expressions},
    volume = {11},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/321239.321249},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/321239.321249},
    year = {1964}
}



@inproceedings{mattmight:Nielson:1997:Infinitary,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Nielson, Flemming and Nielson, Hanne R.},
    booktitle = {POPL '97: Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5406388},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=263745},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/263699.263745},
    date-added = {2009-08-10 22:39:26},
    isbn = {0-89791-853-3},
    keywords = {cfa, control-flow-analysis, static-analysis},
    location = {Paris, France},
    pages = {332--345},
    priority = {0},
    title = {Infinitary control flow analysis: a collecting semantics for closure analysis},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/263699.263745},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/263699.263745},
    year = {1997}
}



@inproceedings{mattmight:Jagannathan:1995:Unified,
    abstract = {We describe a framework for flow analysis in higher-order languages. It is both a synthesis and extension of earlier work in this area, most notably [20, 22] The framework makes explicit use of  flow graphs  for modeling control and data flow properties of untyped higher-order programs. The framework is parameterized, and can express a hierarchy of analyses with different cost/accuracy tradeoffs. The framework is also amenable to a direct, efficient implementation. We develop several instantiations of the framework, and prove their running-time complexity. In addition, we use the simplest instantiation to demonstrate the equivalence of a 0CFA style analysis and the set-based analysis of [8].},
    author = {Jagannathan, Suresh and Weeks, Stephen},
    booktitle = {POPL '95: Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5406327},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=199536},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/199448.199536},
    date-added = {2009-08-10 22:19:52},
    isbn = {0-89791-692-1},
    keywords = {cfa, control-flow-analysis, static-analysis},
    location = {San Francisco, California, United States},
    pages = {393--407},
    priority = {0},
    title = {A unified treatment of flow analysis in higher-order languages},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/199448.199536},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/199448.199536},
    year = {1995}
}



@techreport{mattmight:Kelsey:1997:PreScheme,
    abstract = {Pre-Scheme is a statically typed dialect of Scheme that gives the programmer the efficiency and low-level machine access of C while retaining many of the desirable features of Scheme. The Pre-Scheme compiler makes use of type inference, partial evaluation and Scheme and Lisp compiler technology to compile the problematic features of Scheme, such as closures, into C code without significant run-time overhead. Use of such features in Pre-Scheme programs is restricted to those cases that can be compiled into efficient code. Type reconstruction is done using a modified Hindley/Milner algorithm that allows overloaded user-defined functions. All top-level forms in Pre-Scheme programs are evaluated at compile time, which gives the user additional control over the compiler's partial evaluation of a program. Pre-Scheme has been implemented and used to write a byte-code interpreter and associated support code for a complete Scheme implementation.},
    author = {Kelsey, Richard A.},
    citeulike-article-id = {5398076},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.4031},
    date-added = {2009-08-08 16:45:45},
    institution = {NEC Research Institute},
    keywords = {compiler, scheme},
    priority = {4},
    title = {Pre-Scheme: A Scheme Dialect for Systems Programming},
    x-address = {Princeton, NJ},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.3.4031},
    year = {1997}
}



@article{mattmight:Moss:2001:Benchmarking,
    abstract = {Every designer of a new data structure wants to know how well it performs in comparison with others. But finding, coding and testing applications as benchmarks can be tedious and time-consuming. Besides, how a benchmark uses a data structure may considerably affect its apparent efficiency, so the choice of applications may bias the results. We address these problems by developing a tool for  inductive benchmarking . This tool,  Auburn , can generate benchmarks across a wide distribution of uses. We precisely define 'the use of a data structure', upon which we build the core algorithms of Auburn: how to generate a benchmark from a description of use, and how to extract a description of use from an application. We then apply inductive classification techniques to obtain decision trees for the choice between competing data structures. We test Auburn by benchmarking several implementations of three common data structures: queues, random-access lists and heaps. These and other results show Auburn to be a useful and accurate tool, but they also reveal some limitations of the approach.},
    author = {Moss, Graeme E. and Runciman, Colin},
    citeulike-article-id = {5382955},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=968439},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/S0956796801004063},
    date-added = {2009-08-06 16:29:25},
    issn = {0956-7968},
    journal = {Journal of Functional Programming},
    keywords = {benchmarking, functional-programming},
    number = {5},
    pages = {525--556},
    priority = {2},
    title = {Inductive benchmarking for purely functional data structures},
    volume = {11},
    x-address = {New York, NY, USA},
    x-doi = {10.1017/S0956796801004063},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/10.1017/S0956796801004063},
    year = {2001}
}



@inproceedings{mattmight:Sridharan:2006:Refinement,
    author = {Sridharan, Manu and Bodik, Rastislav},
    booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation},
    citeulike-article-id = {1865431},
    citeulike-linkout-0 = {http://dx.doi.org/10.1145/1133981.1134027},
    date-added = {2009-08-03 22:04:12},
    issn = {0362-1340},
    keywords = {alias-analysis, pointer-analysis},
    pages = {387--400},
    priority = {0},
    title = {Refinement-based context-sensitive points-to analysis for Java},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1133981.1134027},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1133981.1134027},
    year = {2006}
}



@phdthesis{mattmight:Feeley:1993:Future,
    author = {Feeley, Marc},
    citeulike-article-id = {5292261},
    date-added = {2009-07-28 16:38:32},
    keywords = {lambda-calculus, parallelization},
    month = {April},
    priority = {0},
    school = {Brandeis University},
    title = {An Efficient and General Implementation of Futures on Large Scale Shared-Memory Multiprocessors},
    year = {1993}
}



@inproceedings{mattmight:Flanagan:1995:Future,
    abstract = {The  future  annotations of MultiLisp provide a simple method for taming the implicit parallelism of functional programs. Past research concerning  future s has focused on implementation issues. In this paper, we present a series of operational semantics for an idealized functional language with  future s with varying degrees of intensionality. We develop a set-based analysis algorithm from the most intensional semantics, and use that algorithm to perform  touch  optimization on programs. Experiments with the Gambit compiler indicates that this optimization substantially reduces program execution times.},
    author = {Flanagan, Cormac and Felleisen, Matthias},
    booktitle = {POPL '95: Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {4158},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=199484},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/199448.199484},
    date-added = {2009-07-28 16:31:26},
    isbn = {0-89791-692-1},
    keywords = {parallelization},
    location = {San Francisco, California, United States},
    pages = {209--220},
    priority = {2},
    title = {The semantics of future and its use in program optimization},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/199448.199484},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/199448.199484},
    year = {1995}
}



@article{mattmight:Igarashi:2001:Java,
    abstract = {Several recent studies have introduced lightweight versions of Java: reduced languages in which complex features like threads and reflection are dropped to enable rigorous arguments about key properties such as type safety. We carry this process a step further, omitting almost all features of the full language (including interfaces and even assignment) to obtain a small calculus, Featherweight Java, for which rigorous proofs are not only possible but easy. Featherweight Java bears a similar relation to Java as the lambda-calculus does to languages such as ML and Haskell. It offers a similar computational "feel," providing classes, methods, fields, inheritance, and dynamic typecasts with a semantics closely following Java's. A proof of type safety for Featherweight Java thus illustrates many of the interesting features of a safety proof for the full language, while remaining pleasingly compact. The minimal syntax, typing rules, and operational semantics of Featherweight Java make it a handy tool for studying the consequences of extensions and variations. As an illustration of its utility in this regard, we extend Featherweight Java with  generic classes  in the style of GJ (Bracha, Odersky, Stoutamire, and Wadler) and give a detailed proof of type safety. The extended system formalizes for the first time some of the key features of GJ.},
    author = {Igarashi, Atsushi and Pierce, Benjamin C. and Wadler, Philip},
    citeulike-article-id = {3425305},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=503505},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/503502.503505},
    date-added = {2009-07-21 06:31:41},
    issn = {0164-0925},
    journal = {ACM Transactions on Programming Languages and Systems},
    keywords = {java},
    number = {3},
    pages = {396--450},
    priority = {2},
    title = {Featherweight Java: A minimal core calculus for Java and {GJ}},
    volume = {23},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/503502.503505},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/503502.503505},
    year = {2001}
}



@inproceedings{mattmight:Blanchet:2003:ASTREE,
    author = {Blanchet, Bruno and Cousot, Patrick and Cousot, Radhia and Feret, J\'{e}rome and Mauborgne, Laurent and Min\'{e}, Antoine and Monniaux, David and Rival, Xavier},
    booktitle = {PLDI '03: Proceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {2353363},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=781153},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/781131.781153},
    citeulike-linkout-2 = {http://citeseer.ist.psu.edu/561514.html},
    date-added = {2009-07-17 04:15:58},
    isbn = {1581136625},
    keywords = {abstract-interpretation, static-analysis},
    pages = {196--207},
    priority = {2},
    title = {A static analyzer for large safety-critical software},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/781131.781153},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/781131.781153},
    year = {2003}
}



@article{mattmight:Holzmann:1997:SPIN,
    abstract = {Abstract—SPIN is an efficient verification system for models of distributed software systems. It has been used to detect design errors in applications ranging from high-level descriptions of distributed algorithms to detailed code for controlling telephone exchanges. This paper gives an overview of the design and structure of the verifier, reviews its theoretical foundation, and gives an overview of significant practical applications. Index Terms—Formal methods, program verification, design verification, model checking, distributed systems, concurrency.},
    author = {Holzmann, Gerard J.},
    citeulike-article-id = {3276363},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.14.8056},
    date-added = {2009-07-17 04:10:21},
    journal = {IEEE Transactions on Software Engineering},
    keywords = {model-checking, static-analysis},
    pages = {279--295},
    priority = {2},
    title = {The model checker SPIN},
    volume = {23},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.14.8056},
    year = {1997}
}



@inproceedings{mattmight:Ball:2001:PredicateAbstraction,
    author = {Ball, Thomas and Majumdar, Rupak and Millstein, Todd and Rajamani, Sriram K.},
    booktitle = {PLDI '01: Proceedings of the ACM SIGPLAN 2001 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {1376607},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=378795.378846},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/378795.378846},
    date-added = {2009-07-17 03:59:59},
    issn = {0362-1340},
    keywords = {abstract-interpretation, predicate-abstraction, static-analysis},
    pages = {203--213},
    priority = {2},
    title = {Automatic predicate abstraction of C programs},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/378795.378846},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/10.1145/378795.378846},
    year = {2001}
}



@incollection{mattmight:Clarke:2008:ModelChecking,
    abstract = { ” When the time is ripe for certain things, these things appear in different places in the manner of violets coming to light in early spring.” (Wolfgang Bolyai to his son Johann in urging him to claim the invention of non- Euclidean geometry without delay [Vit88]).},
    author = {Clarke, Edmund},
    booktitle = {25 Years of Model Checking},
    citeulike-article-id = {3372907},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1423536},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-540-69850-0\_1},
    date-added = {2009-07-17 03:51:28},
    journal = {25 Years of Model Checking},
    keywords = {model-checking, static-analysis},
    pages = {1--26},
    priority = {2},
    title = {The Birth of Model Checking},
    x-doi = {10.1007/978-3-540-69850-0\_1},
    x-url = {http://dx.doi.org/10.1007/978-3-540-69850-0\_1},
    year = {2008}
}



@article{mattmight:Kam:1977:Monotone,
    abstract = {We consider a generalization of Kildall's lattice theoretic approach to data flow analysis, which we call monotone data flow analysis frameworks. Many flow analysis problems which appear in practice meet the monotonicity condition but not Kildall's condition called distributivity. We show that the maximal fixed point solution exists for every instance of every monotone framework, and that it can be obtained by Kildall's algorithm. However, whenever the framework is monotone but not distributive, there are instances in which the desired solution—the  ” meet over all paths solution” — differs from the maximal fixed point. Finally, we show the nonexistence of an algorithm to compute the meet over all paths solution for monotone frameworks.},
    author = {Kam, John B. and Ullman, Jeffrey D.},
    citeulike-article-id = {4066051},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/BF00290339},
    citeulike-linkout-1 = {http://www.springerlink.com/content/k4160428k4200pm7},
    date-added = {2009-07-17 03:45:53},
    journal = {Acta Informatica},
    keywords = {data-flow-analysis, static-analysis},
    number = {3},
    pages = {305--317},
    priority = {2},
    title = {Monotone data flow analysis frameworks},
    volume = {7},
    x-doi = {10.1007/BF00290339},
    x-url = {http://dx.doi.org/10.1007/BF00290339},
    year = {1977}
}



@inproceedings{mattmight:Kildall:1973:DFA,
    author = {Kildall, Gary A.},
    booktitle = {POPL '73: Proceedings of the 1st Annual ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    citeulike-article-id = {1127705},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=512945},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/512927.512945},
    date-added = {2009-07-17 03:44:45},
    keywords = {data-flow-analysis, static-analysis},
    pages = {194--206},
    priority = {0},
    title = {A unified approach to global program optimization},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/512927.512945},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/10.1145/512927.512945},
    year = {1973}
}



@inproceedings{mattmight:Hudak:1985:Sharing,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Hudak, Paul},
    booktitle = {LFP '86: Proceedings of the 1986 ACM Conference on LISP and Functional Programming},
    citeulike-article-id = {350023},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=319838.319876},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/319838.319876},
    date-added = {2009-07-16 22:21:01},
    isbn = {0-89791-200-4},
    keywords = {abstract-counting, abstract-interpretation, static-analysis},
    location = {Cambridge, Massachusetts, United States},
    pages = {351--363},
    priority = {0},
    title = {A semantic model of reference counting and its abstraction},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/319838.319876},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/319838.319876},
    year = {1986}
}



@book{mattmight:Seacord:2008:CERT-C,
    abstract = {\_ ” I'm an enthusiastic supporter of the CERT Secure Coding Initiative.
Programmers have lots of sources of advice on correctness, clarity,
maintainability, performance, and even safety. Advice on how specific language
features affect security has been missing. \_The CERT® C Secure

Coding Standard\_ fills this need.”

\_—Randy Meyers, Chairman of ANSI C\_



 ” For years we have relied upon the CERT/CC to publish advisories documenting
an endless stream of security problems. Now CERT has embodied the advice of
leading technical experts to give programmers and managers the practical
guidance needed to avoid those problems in new  applications and to help
secure legacy systems. Well done!”\_

—Dr. Thomas Plum, founder of Plum Hall, Inc.


\_ ” Connectivity has sharply increased the need for secure, hacker-safe
applications. By combining this CERT standard with other safety guidelines,
customers gain all-round protection and approach the goal of zero-defect
software.”\_

—Chris Tapp, Field Applications Engineer, LDRA Ltd.


\_ ” I've found this standard to be an indispensable collection of expert
information on exactly how modern software systems fail in practice. It is the
perfect place to start for establishing internal secure coding guidelines. You
won't find this information elsewhere, and, when it comes to software
security, what you don't know is often exactly what hurts you.”\_

—John McDonald, coauthor of \_The Art of Software Security Assessment\_



Software security has major implications for the operations and assets of
organizations, as well as for the welfare of individuals. To create secure
software, developers must know where the dangers lie. Secure programming in C
can be more difficult than even many experienced  programmers believe.


This book is an essential desktop reference documenting the first official
release of  **\_The CERT® C Secure Coding Standard\_**. The standard itemizes
those coding errors that are the root causes of software vulnerabilities in C
and prioritizes them by severity, likelihood of exploitation, and remediation
costs. Each guideline provides examples of insecure code as well as secure,
alternative implementations. If uniformly applied, these guidelines will
eliminate the critical coding errors that lead to buffer overflows, format
string vulnerabilities, integer  overflow, and other common software
vulnerabilities.},
    author = {Seacord, Robert C.},
    citeulike-article-id = {5161149},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0321563212},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0321563212},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0321563212},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321563212},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321563212/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0321563212},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321563212},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321563212},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321563212\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321563212},
    date-added = {2009-07-15 19:36:00},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321563212},
    keywords = {security},
    month = {October},
    priority = {4},
    title = {The CERT C Secure Coding Standard (SEI Series in Software Engineering)},
    x-publisher = {Addison-Wesley Professional},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0321563212},
    year = {2008}
}



@article{mattmight:Boyer:1975:BoyerMoore,
    author = {Boyer, Robert S. and Moore, J. Strother},
    citeulike-article-id = {2081202},
    citeulike-linkout-0 = {http://dx.doi.org/10.1145/321864.321875},
    date-added = {2009-07-15 18:04:49},
    issn = {0004-5411},
    journal = {Journal of the ACM},
    keywords = {theorem-proving, verification},
    month = {January},
    number = {1},
    pages = {129--144},
    priority = {2},
    title = {Proving Theorems about LISP Functions},
    volume = {22},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/321864.321875},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/321864.321875},
    year = {1975}
}



@inproceedings{mattmight:Gordon:1991:HOL,
    author = {Gordon, Mike},
    booktitle = {HOL Theorem Proving System and Its Applications, 1991., International Workshop on the},
    citeulike-article-id = {2478943},
    citeulike-linkout-0 = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=596265},
    date-added = {2009-07-15 18:01:50},
    journal = {HOL Theorem Proving System and Its Applications, 1991., International Workshop on the},
    keywords = {theorem-proving, verification},
    pages = {2--3},
    priority = {2},
    title = {Introduction To The Hol System},
    x-url = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=596265},
    year = {1991}
}



@unpublished{mattmight:Yves:2008:Coq,
    abstract = {These notes provide a quick introduction to the Coq system and show how itcan be used to define logical concepts and functions and reason about them. Itis designed as a tutorial, so that readers can quickly start their ownexperiments, learning only a few of the capabilities of the system. A much morecomprehensive study is provided in [1], which also provides an extensivecollection of exercises to train on.},
    archivePrefix = {arXiv},
    author = {Bertot, Yves},
    citeulike-article-id = {3501167},
    citeulike-linkout-0 = {http://arxiv.org/abs/cs/0603118},
    citeulike-linkout-1 = {http://arxiv.org/pdf/cs/0603118},
    date-added = {2009-07-15 18:00:06},
    eprint = {cs/0603118},
    keywords = {coq, theorem-proving},
    month = {Nov},
    priority = {2},
    title = {Coq in a Hurry},
    x-url = {http://arxiv.org/abs/cs/0603118},
    year = {2008}
}



@inproceedings{mattmight:Abraham:2009:Culture,
    abstract = {The effect of cultural differences is often overlooked or neglected when analysing attractive, cost-effective options for software development. This papers aims to highlight people issues that arise out of cultural differences between interacting software development teams, particularly between Indians and non-Indians. The author's intent is to merely bring out the differences and not to provide solutions or recommendations or to identify root causes for the behavior. This is an experience paper, mostly based on observations and sharing of personal experiences from various colleagues and coworkers.},
    author = {Abraham, Lavanya R.},
    booktitle = {ISEC '09: Proceeding of the 2nd annual conference on India software engineering conference},
    citeulike-article-id = {5160153},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1506234},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1506216.1506234},
    date-added = {2009-07-15 17:28:15},
    isbn = {978-1-60558-426-3},
    keywords = {software-engineering},
    location = {Pune, India},
    pages = {95--100},
    priority = {2},
    title = {Cultural differences in software engineering},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1506216.1506234},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1506216.1506234},
    year = {2009}
}



@article{mattmight:Church:1936:LambdaCalculus,
    author = {Church, Alonzo},
    citeulike-article-id = {126966},
    citeulike-linkout-0 = {http://www.jstor.org/stable/2269326},
    date-added = {2009-07-15 05:37:05},
    journal = {Journal of Symbolic Logic},
    keywords = {lambda-calculus},
    number = {1},
    pages = {40--41},
    priority = {2},
    title = {A Note on the Entscheidungsproblem},
    volume = {1},
    x-url = {http://www.jstor.org/stable/2269326},
    year = {1936}
}



@inproceedings{mattmight:Siek:2006:Gradual,
    abstract = {Static and dynamic type systems have well-known strengths and weaknesses, and each is better suited for different programming tasks. There have been many efforts to integrate static and dynamic typing and thereby combine the benefits of both typing disciplines in the same language. The flexibility of static typing can be improved by adding a type Dynamic and a typecase form. The safety and performance of dynamic typing can be improved by adding optional type annotations or by performing type...},
    author = {Siek, Jeremy G. and Taha, Walid},
    booktitle = {Scheme and Functional Programming Workshop},
    citeulike-article-id = {2841470},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.61.8890},
    date-added = {2009-07-15 05:33:35},
    keywords = {type-theory},
    month = {September},
    priority = {2},
    title = {Gradual typing for functional languages},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.61.8890},
    year = {2006}
}



@inproceedings{mattmight:Xi:1998:Dependent,
    abstract = {We present a type-based approach to eliminating array bound checking and list tag checking by conservatively extending Standard ML with a restricted form of dependent types. This enables the programmer to capture more invariants through types while type-checking remains decidable in theory and can still be performed efficiently in practice. We illustrate our approach through concrete examples and present the result of our preliminary experiments which support support the feasibility and effectiveness of our approach.},
    author = {Xi, Hongwei and Pfenning, Frank},
    booktitle = {PLDI '98: Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {1262431},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=277650.277732},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/277650.277732},
    date-added = {2009-07-15 05:28:36},
    isbn = {0-89791-987-4},
    issn = {0362-1340},
    keywords = {dependent-types, type-theory},
    location = {Montreal, Quebec, Canada},
    pages = {249--257},
    priority = {2},
    title = {Eliminating array bound checking through dependent types},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/277650.277732},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/277650.277732},
    year = {1998}
}



@inproceedings{mattmight:Kobayashi:2009:HORS,
    abstract = {We propose a new verification method for temporal properties of higher-order functional programs, which takes advantage of Ong's recent result on the decidability of the model-checking problem for higher-order recursion schemes (HORS's). A program is transformed to an HORS that generates a tree representing all the possible event sequences of the program, and then the HORS is model-checked. Unlike most of the previous methods for verification of higher-order programs, our verification method is sound and complete. Moreover, this new verification framework allows a smooth integration of abstract model checking techniques into verification of higher-order programs. We also present a type-based verification algorithm for HORS's. The algorithm can deal with only a fragment of the properties expressed by modal mu-calculus, but the algorithm and its correctness proof are (arguably) much simpler than those of Ong's game-semantics-based algorithm. Moreover, while the HORS model checking problem is n-EXPTIME in general, our algorithm is linear in the size of HORS, under the assumption that the sizes of types and specification formulas are bounded by a constant.},
    author = {Kobayashi, Naoki},
    booktitle = {POPL '09: Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5154855},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1480881.1480933},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1480881.1480933},
    date-added = {2009-07-15 05:17:36},
    isbn = {978-1-60558-379-2},
    keywords = {static-analysis, verification},
    location = {Savannah, GA, USA},
    pages = {416--428},
    priority = {0},
    title = {Types and higher-order recursion schemes for verification of higher-order programs},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1480881.1480933},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1480881.1480933},
    year = {2009}
}



@misc{mattmight:GCC,
    citeulike-article-id = {5154844},
    date-added = {2009-07-15 05:15:50},
    organization = {Free Software Foundation},
    priority = {2},
    title = {GNU C Compiler},
    x-address = {http://gcc.gnu.org/}
}



@inproceedings{mattmight:Lattner:2003:LLVM,
    abstract = {This paper presents a design and implementation of a whole-program interprocedural optimizer built in the GCC framework. Through the introduction of a new language-independent intermediate representation, we extend the current GCC architecture to include a powerful mid-level optimizer and add link-time interprocedural analysis and optimization capabilities. This intermediate representation is an SSA-based, low-level, strongly-typed, representation which is designed to support both efficient...},
    author = {Lattner, Chris and Adve, Vikram},
    booktitle = {Proceedings of the First Annual GCC Developers' Summit},
    citeulike-article-id = {481259},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.13.9621},
    date-added = {2009-07-15 05:12:23},
    keywords = {compiler, llvm, ssa},
    month = {May},
    priority = {2},
    title = {Architecture for a Next-Generation GCC},
    x-address = {Ottawa, Canada},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.13.9621},
    year = {2003}
}



@inproceedings{mattmight:Balakrishnan:2006:Recency,
    abstract = {In this paper, we present an abstraction for heap-allocated storage, called the recency-abstraction, that allows abstract-interpretation algorithms to recover some non-trivial information for heap-allocated data objects. As an application of the recency-abstraction, we show how it can resolve virtual-function calls in stripped executables (i.e., executables from which debugging information has been removed). This approach succeeded in resolving 55\% of virtual-function call-sites, whereas previous tools for analyzing executables fail to resolve any of the virtual-function call-sites.},
    author = {Balakrishnan, Gogul and Reps, Thomas},
    booktitle = {SAS '06: Static Analysis Symposium},
    citeulike-article-id = {5154774},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/11823230\_15},
    citeulike-linkout-1 = {http://www.springerlink.com/content/g857n7xn2751624q},
    date-added = {2009-07-15 05:06:29},
    journal = {Static Analysis},
    keywords = {shape-analysis, static-analysis},
    pages = {221--239},
    priority = {0},
    title = {Recency-Abstraction for Heap-Allocated Storage},
    x-doi = {10.1007/11823230\_15},
    x-publisher = {Springer-Verlag},
    x-url = {http://dx.doi.org/10.1007/11823230\_15},
    year = {2006}
}



@inproceedings{mattmight:Chang:2008:Relational,
    abstract = {Shape analyses are concerned with precise abstractions of the heap to capture detailed structural properties. To do so, they need to build and decompose summaries of disjoint memory regions. Unfortunately, many data structure invariants require relations be tracked across disjoint regions, such as intricate numerical data invariants or structural invariants concerning back and cross pointers. In this paper, we identify issues inherent to analyzing relational structures and design an abstract domain that is parameterized both by an abstract domain for pure data properties and by user-supplied specifications of the data structure invariants to check. Particularly, it supports hybrid invariants about shape and data and features a generic mechanism for materializing summaries at the beginning, middle, or end of inductive structures. Around this domain, we build a shape analysis whose interesting components include a pre-analysis on the user-supplied specifications that guides the abstract interpretation and a widening operator over the combined shape and data domain. We then demonstrate our techniques on the proof of preservation of the red-black tree invariants during insertion.},
    author = {Chang, Bor-Yuh E. and Rival, Xavier},
    booktitle = {POPL '08: Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5154749},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1328469},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1328438.1328469},
    date-added = {2009-07-15 05:03:40},
    isbn = {978-1-59593-689-9},
    keywords = {shape-analysis, static-analysis},
    location = {San Francisco, California, USA},
    pages = {247--260},
    priority = {2},
    title = {Relational inductive shape analysis},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1328438.1328469},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1328438.1328469},
    year = {2008}
}



@inproceedings{mattmight:Cherem:2007:Shape,
    abstract = {This paper presents a novel shape analysis algorithm with local reasoning that is designed to analyze heap structures with structural invariants, such as doubly-linked lists. The algorithm abstracts and analyzes one single heap cell at a time. In order to maintain the structural invariants, the analysis uses a local heap abstraction that models the sub-heap consisting of one cell and its immediate neighbors. The proposed algorithm can successfully analyze standard doubly-linked list manipulations.},
    author = {Cherem, Sigmund and Rugina, Radu},
    booktitle = {In VMCAI '07: Verification, Model Checking, and Abstract Interpretation},
    citeulike-article-id = {5153481},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-540-69738-1\_17},
    citeulike-linkout-1 = {http://www.springerlink.com/content/a285820353w614w3},
    date-added = {2009-07-15 02:07:53},
    journal = {Verification, Model Checking, and Abstract Interpretation},
    keywords = {shape-analysis, static-analysis},
    pages = {234--250},
    priority = {2},
    title = {Maintaining Doubly-Linked List Invariants in Shape Analysis with Local Reasoning},
    x-address = {Nice, France},
    x-doi = {10.1007/978-3-540-69738-1\_17},
    x-publisher = {Springer-Verlag},
    x-url = {http://dx.doi.org/10.1007/978-3-540-69738-1\_17},
    year = {2007}
}







@inproceedings{mattmight:Cousot:2007:ASTREE,
    abstract = {We explain the design of the interpretation-based static analyzer ASTR\'{E}E and its use to prove the absence of run-time errors in safety-critical codes.},
    author = {Cousot, Patrick},
    booktitle = {EMSOFT '07: Proceedings of the 7th ACM and IEEE International Conference on Embedded Software},
    citeulike-article-id = {5153445},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1289932},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1289927.1289932},
    date-added = {2009-07-15 02:01:58},
    isbn = {978-1-59593-825-1},
    keywords = {abstract-interpretation, static-analysis},
    location = {Salzburg, Austria},
    pages = {7--9},
    priority = {2},
    title = {Proving the absence of run-time errors in safety-critical avionics code},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1289927.1289932},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1289927.1289932},
    year = {2007}
}



@article{mattmight:Reps:1998:CFL,
    abstract = {This paper describes how a number of program-analysis problems can be solved by transforming them to graph-reachability problems. Some of the program-analysis problems that are amenable to this treatment include program slicing, certain dataflow-analysis problems, one version of the problem of approximating the possible "shapes" that heap-allocated structures in a program can take on, and flow-insensitive points-to analysis. Relationships between graph reachability and other approaches to program analysis are described. Some techniques that go beyond pure graph reachability are also discussed.},
    author = {Reps, Thomas},
    citeulike-article-id = {1864450},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/S0950-5849(98)00093-7},
    citeulike-linkout-1 = {http://www.sciencedirect.com/science/article/B6V0B-3W1PXRV-C/2/c2a7f356bd45876f8d74fcd259f1ee8e},
    date-added = {2009-07-15 01:58:21},
    journal = {Information and Software Technology},
    keywords = {cfl, static-analysis},
    month = {December},
    number = {11-12},
    pages = {701--726},
    priority = {2},
    title = {Program analysis via graph reachability},
    volume = {40},
    x-doi = {10.1016/S0950-5849(98)00093-7},
    x-url = {http://dx.doi.org/10.1016/S0950-5849(98)00093-7},
    year = {1998}
}



@inproceedings{mattmight:Cook:2006:Termination,
    abstract = {Program termination is central to the process of ensuring that systems code can always react. We describe a new program termination prover that performs a path-sensitive and context-sensitive program analysis and provides capacity for large program fragments (i.e. more than 20,000 lines of code) together with support for programming language features such as arbitrarily nested loops, pointers, function-pointers, side-effects, etc.We also present experimental results on device driver dispatch routines from theWindows operating system. The most distinguishing aspect of our tool is how it shifts the balance between the two tasks of constructing and respectively checking the termination argument. Checking becomes the hard step. In this paper we show how we solve the corresponding challenge of checking with binary reachability analysis.},
    author = {Cook, Byron and Podelski, Andreas and Rybalchenko, Andrey},
    booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation},
    citeulike-article-id = {3042545},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1134029},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1133981.1134029},
    date-added = {2009-07-15 01:54:14},
    isbn = {1-59593-320-4},
    keywords = {static-analysis, termination},
    location = {Ottawa, Ontario, Canada},
    pages = {415--426},
    priority = {2},
    title = {Termination proofs for systems code},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1133981.1134029},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1133981.1134029},
    year = {2006}
}



@inproceedings{mattmight:Yong:1999:Pointer,
    abstract = {Type casting allows a program to access an object as if it had a type different from its declared type. This complicates the design of a pointer-analysis algorithm that treats structure fields as separate objects; therefore, some previous pointer-analysis algorithms "collapse" a structure into a single variable. The disadvantage of this approach is that it can lead to very imprecise points-to information. Other algorithms treat each field as a separate object based on its offset and size. While this approach leads to more precise results, the results are not portable because the memory layout of structures is implementation dependent.This paper first describes the complications introduced by type casting, then presents a tunable pointer-analysis framework for handling structures in the presence of casting. Different instances of this framework produce algorithms with different levels of precision, portability, and efficiency. Experimental results from running our implementations of four instances of this framework show that (i) it is important to distinguish fields of structures in pointer analysis, but (ii) making conservative approximations when casting is involved usually does not cost much in terms of time, space, or the precision of the results.},
    author = {Yong, Suan H. and Horwitz, Susan and Reps, Thomas},
    booktitle = {PLDI '99: Proceedings of the ACM SIGPLAN 1999 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {2681070},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=301618.301647},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/301618.301647},
    date-added = {2009-07-15 00:17:10},
    isbn = {1-58113-094-5},
    keywords = {alias-analysis, static-analysis},
    location = {Atlanta, Georgia, United States},
    pages = {91--103},
    priority = {2},
    title = {Pointer analysis for programs with structures and casting},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/301618.301647},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/301618.301647},
    year = {1999}
}



@inproceedings{mattmight:Mine:2006:FieldSensitive,
    abstract = {We propose a memory abstraction able to lift existing numerical static analyses to C programs containing union types, pointer casts, and arbitrary pointer arithmetics. Our framework is that of a combined points-to and data-value analysis. We abstract the contents of compound variables in a field-sensitive way, whether these fields contain numeric or pointer values, and use stock numerical abstract domains to find an overapproximation of all possible memory states---with the ability to discover relationships between variables. A main novelty of our approach is the dynamic mapping scheme we use to associate a flat collection of abstract cells of scalar type to the set of accessed memory locations, while taking care of byte-level aliases--- i.e.,  C variables with incompatible types allocated in overlapping memory locations. We do not rely on static type information which can be misleading in C programs as it does not account for all the uses a memory zone may be put to.Our work was incorporated within the A str\'{e}e  static analyzer that checks for the absence of run-time-errors in embedded, safety-critical, numerical-intensive software. It replaces the former memory domain limited to well-typed, union-free, pointer-cast free data-structures. Early results demonstrate that this abstraction allows analyzing a larger class of C programs, without much cost overhead.},
    author = {Min\'{e}, Antoine},
    booktitle = {LCTES '06: Proceedings of the 2006 ACM SIGPLAN/SIGBED conference on Language, Compilers, and Tool Support for Embedded Systems},
    citeulike-article-id = {5152312},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1134650.1134659},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1134650.1134659},
    date-added = {2009-07-15 00:12:13},
    isbn = {1-59593-362-X},
    keywords = {alias-analysis, static-analysis},
    location = {Ottawa, Ontario, Canada},
    pages = {54--63},
    priority = {2},
    title = {Field-sensitive value analysis of embedded C programs with union types and pointer arithmetics},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1134650.1134659},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1134650.1134659},
    year = {2006}
}



@article{mattmight:Kozen:1983:MuCalculus,
    abstract = {In this paper we define and study a propositional μ-calculus  L μ, which consists essentially of propositional modal logic with a least fixpoint operator.  L μ is syntactically simpler yet strictly more expressive than Propositional Dynamic Logic (PDL). For a restricted version we give an exponential-time decision procedure, small model property, and complete deductive system, theory subsuming the corresponding results for PDL.},
    author = {Kozen, Dexter},
    citeulike-article-id = {2924303},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/0304-3975(82)90125-6},
    citeulike-linkout-1 = {http://linkinghub.elsevier.com/retrieve/pii/0304-3975(82)90125-6},
    citeulike-linkout-2 = {http://www.sciencedirect.com/science/article/B6V1G-45TK9RG-T/1/ef3e449e6e7a1b5d604db549e096af9c},
    date-added = {2009-07-15 00:08:51},
    issn = {03043975},
    journal = {Theoretical Computer Science},
    keywords = {model-checking, verification},
    number = {3},
    pages = {333--354},
    priority = {2},
    title = {Results on the propositional μ-calculus},
    volume = {27},
    x-doi = {10.1016/0304-3975(82)90125-6},
    x-url = {http://dx.doi.org/10.1016/0304-3975(82)90125-6},
    year = {1983}
}



@inproceedings{mattmight:VanHorn:2008:EXPTIME,
    abstract = {We give an exact characterization of the computational complexity of the  k CFA hierarchy. For any  k  > 0, we prove that the control flow decision problem is complete for deterministic exponential time. This theorem validates empirical observations that such control flow analysis is intractable. It also provides more general insight into the complexity of abstract interpretation.},
    author = {Van Horn, David and Mairson, Harry G.},
    booktitle = {ICFP '08: Proceeding of the 13th ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5152280},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1411243},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1411204.1411243},
    date-added = {2009-07-15 00:06:32},
    isbn = {978-1-59593-919-7},
    keywords = {cfa},
    location = {Victoria, BC, Canada},
    pages = {275--282},
    priority = {2},
    title = {Deciding k-CFA is complete for EXPTIME},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1411204.1411243},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1411204.1411243},
    year = {2008}
}

@inproceedings{mattmight:Nanevski:2006:HTT,
    abstract = {In previous work, we proposed a  Hoare Type Theory  (HTT) which combines effectful higher-order functions, dependent types and Hoare Logic specifications into a unified framework. However, the framework did not support polymorphism, and ailed to provide a modular treatment of state in specifications. In this paper, we address these shortcomings by showing that the addition of polymorphism alone is sufficient for capturing modular state specifications in the style of Separation Logic. Furthermore, we argue that polymorphism is an essential ingredient of the extension, as the treatment of higher-order functions requires operations not encodable via the spatial connectives of Separation Logic.},
    author = {Nanevski, Aleksandar and Morrisett, Greg and Birkedal, Lars},
    booktitle = {ICFP '06: Proceedings of the Eleventh ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5151789},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1159803.1159812},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1159803.1159812},
    date-added = {2009-07-14 23:05:36},
    isbn = {1-59593-309-3},
    keywords = {dependent-types, hoare-logic, type-theory, verification},
    location = {Portland, Oregon, USA},
    pages = {62--73},
    priority = {2},
    title = {Polymorphism and separation in hoare type theory},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1159803.1159812},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1159803.1159812},
    year = {2006}
}



@inproceedings{mattmight:Nanevski:2008:Ynot,
    abstract = {We describe an axiomatic extension to the Coq proof assistant, that supports writing, reasoning about, and extracting higher-order, dependently-typed programs with  side-effects . Coq already includes a powerful functional language that supports dependent types, but that language is limited to pure, total functions. The key contribution of our extension, which we call Ynot, is the added support for computations that may have effects such as non-termination, accessing a mutable store, and throwing/catching exceptions.},
    author = {Nanevski, Aleksandar and Morrisett, Greg and Shinnar, Avraham and Govereau, Paul and Birkedal, Lars},
    booktitle = {ICFP '08: Proceeding of the 13th ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {3390918},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1411204.1411237},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1411204.1411237},
    date-added = {2009-07-14 23:01:55},
    isbn = {978-1-59593-919-7},
    keywords = {dependent-types, type-theory},
    location = {Victoria, BC, Canada},
    pages = {229--240},
    priority = {2},
    title = {Ynot: Dependent types for imperative programs},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1411204.1411237},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1411204.1411237},
    year = {2008}
}



@inproceedings{mattmight:Cartwright:1991:SoftTyping,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Cartwright, Robert and Fagan, Mike},
    booktitle = {PLDI '91: Proceedings of the ACM SIGPLAN 1991 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {2792466},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=113445.113469},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/113445.113469},
    date-added = {2009-07-14 22:55:46},
    isbn = {0-89791-428-7},
    keywords = {type-theory},
    location = {Toronto, Ontario, Canada},
    pages = {278--292},
    priority = {2},
    title = {Soft typing},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/113445.113469},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/113445.113469},
    year = {1991}
}



@inproceedings{mattmight:Flanagan:1993:ANF,
    abstract = {In order to simplify the compilation process, many compilers for higher-order languages use the continuation-passing style (CPS) transformation in a first phase to generate an intermediate representation of the source program. The salient aspect of this intermediate form is that all procedures take an argument that represents the rest of the computation (the  ” continuation”). Since the nai¨ve CPS transformation considerably increases the size of programs, CPS compilers perform reductions to produce a more compact intermediate representation. Although often implemented as a part of the CPS transformation, this step is conceptually a second phase. Finally, code generators for typical CPS compilers treat continuations specially in order to optimize the interpretation of continuation parameters.   A thorough analysis of the abstract machine for CPS terms show that the actions of the code generator  invert  the nai¨ve CPS translation step. Put differently, the combined effect of the three phases is equivalent to a source-to-source transformation that simulates the compaction phase. Thus, fully developed CPS compilers do not need to employ the CPS transformation but can achieve the same results with a simple source-level transformation.},
    author = {Flanagan, Cormac and Sabry, Amr and Duba, Bruce F. and Felleisen, Matthias},
    booktitle = {PLDI '93: Proceedings of the ACM SIGPLAN 1993 conference on Programming Language Design and Implementation},
    citeulike-article-id = {190446},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=155113},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/155090.155113},
    date-added = {2009-07-14 22:50:09},
    isbn = {0-89791-598-4},
    keywords = {anf},
    location = {Albuquerque, New Mexico, United States},
    month = {June},
    number = {6},
    pages = {237--247},
    priority = {2},
    title = {The essence of compiling with continuations},
    volume = {28},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/155090.155113},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/155090.155113},
    year = {1993}
}



@inproceedings{mattmight:Fahndrich:2007:NonNull,
    abstract = {Mainstream object-oriented languages such as C\# and Java provide an initialization model for objects that does not guarantee programmer controlled initialization of fields. Instead, all fields are initialized to default values (0 for scalars and  null  for non-scalars) on allocation. This is in stark contrast to functional languages, where all parts of an allocation are initialized to programmer-provided values. These choices have a direct impact on two main issues: 1) the prevalence of  null  in object oriented languages (and its general absence in functional languages), and 2) the ability to initialize circular data structures. This paper explores connections between these differing approaches and proposes a fresh look at initialization. Delayed types are introduced to express and formalize prevalent initialization patterns in object-oriented languages.},
    author = {Fahndrich, Manuel and Xia, Songtao},
    booktitle = {OOPSLA '07: Proceedings of the 22nd Annual ACM SIGPLAN Conference on Object-oriented programming systems and applications},
    citeulike-article-id = {4636352},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1297027.1297052},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1297027.1297052},
    date-added = {2009-07-14 22:47:00},
    isbn = {978-1-59593-786-5},
    keywords = {non-nullability, type-theory},
    location = {Montreal, Quebec, Canada},
    pages = {337--350},
    priority = {2},
    title = {Establishing object invariants with delayed types},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1297027.1297052},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1297027.1297052},
    year = {2007}
}



@inproceedings{mattmight:Fahndrich:2003:NonNull,
    author = {F\"{a}hndrich, Manuel and Rustan},
    booktitle = {OOPSLA '03: Proceedings of the 18th Annual ACM SIGPLAN Conference on Object-oriented programing, systems, languages, and applications},
    citeulike-article-id = {5151648},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/949305.949332},
    date-added = {2009-07-14 22:45:07},
    keywords = {non-nullability, type-theory},
    location = {Anaheim, California, USA},
    pages = {302--312},
    priority = {0},
    title = {Declaring and checking non-null types in an object-oriented language},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/949305.949332},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/949305.949332},
    year = {2003}
}



@book{mattmight:Martin-Lof:1984:Intuitionistic,
    author = {Martin-L\"{o}f, Per},
    citeulike-article-id = {2425748},
    citeulike-linkout-0 = {http://www.ams.org/mathscinet-getitem?mr=769301},
    date-added = {2009-07-14 22:36:04},
    keywords = {type-theory},
    mrnumber = {MR769301},
    priority = {2},
    series = {Studies in Proof Theory},
    title = {Intuitionistic type theory},
    volume = {1},
    x-address = {Naples},
    x-publisher = {Bibliopolis},
    x-url = {http://www.ams.org/mathscinet-getitem?mr=769301},
    year = {1984}
}



@inproceedings{mattmight:Andersen:1992:PartialEvaluation,
    author = {Andersen, Lars O.},
    booktitle = {CC '92: Proceedings of the 4th International Conference on Compiler Construction},
    citeulike-article-id = {5151532},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=727274},
    date-added = {2009-07-14 22:30:58},
    isbn = {3-540-55984-1},
    keywords = {partial-evaluation, static-analysis},
    pages = {251--257},
    priority = {2},
    title = {Partial Evaluation of C and Automatic Compiler Generation (Extended Abstract)},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=727274},
    year = {1992}
}



@techreport{mattmight:Steele:1978:Rabbit,
    abstract = {We have developed a compiler for the lexically-scoped dialect of LISP known as SCHEME. The compiler knows relatively little about specific data manipulation primitives such as arithmetic operators, but concentrates on general issues of environment and control. Rather than having specialized knowledge about a large variety of control and environment constructs, the compiler handles only a small basis set which reflects the semantics of lambda-calculus. All of the traditional imperative constructs, such as sequencing, assignment, looping, GO TO, as well as many standard LISP constructs such as AND, OR and COND, are expressed as macros in terms of the applicative basis set. A small number of optimization techniques, coupled with the treatment of function calls as GO TO statements, serves to produce code as good as that produced by more traditional compilers.},
    author = {Steele, Guy L.},
    citeulike-article-id = {82938},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=889478},
    date-added = {2009-07-14 22:29:27},
    institution = {Massachusetts Institute of Technology},
    keywords = {compiler, cps, lambda-calculus, scheme},
    priority = {2},
    title = {Rabbit: A Compiler for Scheme},
    x-address = {Cambridge, MA, USA},
    x-publisher = {Massachusetts Institute of Technology},
    x-url = {http://portal.acm.org/citation.cfm?id=889478},
    year = {1978}
}



@inproceedings{mattmight:Heintze:1997:Cubic,
    abstract = {We prove that certain data-flow and control-flow problems are 2NPDA-complete. This means that these problems are in the class 2NPDA and that they are hard for that class. The fact that they are in 2NPDA demonstrates the richness of the class. The fact that they are hard for 2NPDA can be interpreted as evidence they can not be solved in sub-cubic time --- the cubic time decision procedure for an arbitrary 2NPDA problem has not been improved since its discovery in 1968.},
    author = {Heintze, Nevin and Mcallester, David},
    booktitle = {LICS '97: Proceedings of the 12th Annual IEEE Symposium on Logic in Computer Science},
    citeulike-article-id = {5151505},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=788876},
    date-added = {2009-07-14 22:27:05},
    isbn = {0-8186-7925-5},
    pages = {342+},
    priority = {2},
    title = {On the Cubic Bottleneck in Subtyping and Flow Analysis},
    x-address = {Washington, DC, USA},
    x-publisher = {IEEE Computer Society},
    x-url = {http://portal.acm.org/citation.cfm?id=788876},
    year = {1997}
}



@inproceedings{mattmight:Gulwani:2009:SPEED,
    abstract = {This paper describes an inter-procedural technique for computing symbolic bounds on the number of statements a procedure executes in terms of its scalar inputs and user-defined quantitative functions of input data-structures. Such computational complexity bounds for even simple programs are usually disjunctive, non-linear, and involve numerical properties of heaps. We address the challenges of generating these bounds using two novel ideas.},
    author = {Gulwani, Sumit and Mehra, Krishna K. and Chilimbi, Trishul},
    booktitle = {POPL '09: Proceedings of the 36th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5151481},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1480881.1480898},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1480881.1480898},
    date-added = {2009-07-14 22:23:10},
    isbn = {978-1-60558-379-2},
    keywords = {abstract-interpretation, static-analysis, wcet},
    location = {Savannah, GA, USA},
    pages = {127--139},
    priority = {2},
    title = {SPEED: Precise and efficient static estimation of program computational complexity},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1480881.1480898},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1480881.1480898},
    year = {2009}
}



@article{mattmight:Hoare:1969:HoareLogic,
    abstract = {In this paper an attempt is made to explore the logical foundations of computer programming by use of techniques which were first applied in the study of geometry and have later been extended to other branches of mathematics. This involves the elucidation of sets of axioms and rules of inference which can be used in proofs of the properties of computer programs. Examples are given of such axioms and rules, and a formal proof of a simple theorem is displayed. Finally, it is argued that important advantage, both theoretical and practical, may follow from a pursuance of these topics.},
    author = {Hoare, C. A. R.},
    citeulike-article-id = {163708},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=363259},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/363235.363259},
    date-added = {2009-07-14 22:15:46},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {hoare-logic, verification},
    month = {October},
    number = {10},
    pages = {576--580},
    priority = {2},
    title = {An axiomatic basis for computer programming},
    volume = {12},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/363235.363259},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/363235.363259},
    year = {1969}
}



@inproceedings{mattmight:Damas:1982:Type,
    abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.},
    author = {Damas, Luis and Milner, Robin},
    booktitle = {POPL '82: Proceedings of the 9th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {370442},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=582176},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/582153.582176},
    date-added = {2009-07-11 23:56:32},
    isbn = {0-89791-065-6},
    keywords = {damas-milner, ml, type-inference, type-theory},
    location = {Albuquerque, New Mexico},
    pages = {207--212},
    priority = {2},
    title = {Principal type-schemes for functional programs},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/582153.582176},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/582153.582176},
    year = {1982}
}



@inproceedings{mattmight:Grove:1997:OOCFA,
    abstract = {Interprocedural analyses enable optimizing compilers to more precisely model the effects of non-inlined procedure calls, potentially resulting in substantial increases in application performance. Applying interprocedural analysis to programs written in object-oriented or functional languages is complicated by the difficulty of constructing an accurate program call graph. This paper presents a parameterized algorithmic framework for call graph construction in the presence of message sends and/or first class functions. We use this framework to describe and to implement a number of well-known and new algorithms. We then empirically assess these algorithms by applying them to a suite of medium-sized programs written in Cecil and Java, reporting on the relative cost of the analyses, the relative precision of the constructed call graphs, and the impact of this precision on the effectiveness of a number of interprocedural optimizations.},
    author = {Grove, David and Defouw, Greg and Dean, Jeffrey and Chambers, Craig},
    booktitle = {OOPSLA '97: Proceedings of the 12th ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
    citeulike-article-id = {277250},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=264352},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/263698.264352},
    date-added = {2009-07-11 23:19:42},
    isbn = {0-89791-908-4},
    issn = {0362-1340},
    keywords = {cfa, control-flow-analysis},
    location = {Atlanta, Georgia, United States},
    month = {October},
    number = {10},
    pages = {108--124},
    priority = {2},
    title = {Call graph construction in object-oriented languages},
    volume = {32},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/263698.264352},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/263698.264352},
    year = {1997}
}



@inproceedings{mattmight:Agesen:1995:CPA,
    author = {Agesen, Ole},
    booktitle = {ECOOP '95: Proceedings of the 9th European Conference on Object-Oriented Programming},
    citeulike-article-id = {5121259},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=646153.679533},
    date-added = {2009-07-11 23:15:25},
    isbn = {3-540-60160-0},
    keywords = {cfa, control-flow-analysis, static-analysis},
    pages = {2--26},
    priority = {0},
    title = {The Cartesian Product Algorithm: Simple and Precise Type Inference Of Parametric Polymorphism},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=646153.679533},
    year = {1995}
}



@article{mattmight:Wright:1998:Polymorphic,
    abstract = {This article describes a general-purpose program analysis that  computes global control-flow and data-flow information for  higher-order, call-by-value languages.  The analysis employs a  novel form of polyvariance called polymorhic splitting that uses  let-expressions as syntactic clues to gain precision. The information  derived from the analysis is used both to eliminate run-time checks and to inline procedure. The analysis and optimizations have been  applied to a suite of Scheme programs. Experimental results obtained  from the prototype implementation indicate that the analysis is  extremely precise and has reasonable cost. Compared to monovariant flow analyses such as 0CFA, or analyses based on type inference such as  soft typing, the analysis eliminates significantly more    run-time checks. Run-time check elimination and inlining together typically yield a 20 to 40\% performance improvement for the benchmark suite, with some programs running four times as fast.},
    author = {Wright, Andrew K. and Jagannathan, Suresh},
    citeulike-article-id = {4884},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=271523},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/271510.271523},
    date-added = {2009-07-11 22:55:47},
    issn = {0164-0925},
    journal = {ACM Transactions on Programming Languages and Systems},
    keywords = {cfa, constraint-solving, control-flow-analysis, static-analysis},
    month = {January},
    number = {1},
    pages = {166--207},
    priority = {0},
    title = {Polymorphic splitting: An effective polyvariant flow analysis},
    volume = {20},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/271510.271523},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/271510.271523},
    year = {1998}
}



@article{mattmight:Palsberg:1995:CFA,
    abstract = {Flow analyses of untyped higher-order functional programs have in the past decade been presented by Ayers, Bondorf, Consel, Jones, Heintze, Sestoft, Shivers, Steckler, Wand, and others. The analyses are usually defined as abstract interpretations and are used for rather different tasks such as type recovery, globalization, and binding-time analysis. The analyses all contain a global  closure analysis  that computes information about higher-order control-flow. Sestoft proved in 1989 and 1991 that closure analysis is correct with respect to call-by-name and call-by-value semantics, but it remained open if correctness holds for arbitrary beta-reduction. This article answers the question; both closure analysis and others are correct with respect to arbitrary beta-reduction. We also prove a subject-reduction result: closure information is still valid after beta-reduction. The core of our proof technique is to define closure analysis using a constraint system. The constraint system is equivalent to the closure analysis of Bondorf, which in turn is based on Sestoft's.},
    author = {Palsberg, Jens},
    citeulike-article-id = {4157},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=201001},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/200994.201001},
    date-added = {2009-07-11 22:37:15},
    issn = {0164-0925},
    journal = {ACM Transactions on Programming Languages and Systems},
    keywords = {cfa, constraint-solving, control-flow-analysis, static-analysis},
    month = {January},
    number = {1},
    pages = {47--62},
    priority = {2},
    title = {Closure analysis in constraint form},
    volume = {17},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/200994.201001},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/200994.201001},
    year = {1995}
}



@inproceedings{mattmight:Gulwani:2006:Combining,
    author = {Gulwani, Sumit and Tiwari, Ashish},
    booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation},
    citeulike-article-id = {3091102},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1133981.1134026},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1133981.1134026},
    date-added = {2009-06-28 21:31:36},
    isbn = {1595933204},
    keywords = {abstract-interpretation},
    location = {Ottawa, Ontario, Canada},
    pages = {376--386},
    priority = {4},
    title = {Combining abstract interpreters},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1133981.1134026},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1133981.1134026},
    year = {2006}
}



@inproceedings{mattmight:Reps:1995:Precise,
    abstract = {The paper shows how a large class of interprocedural dataflow-analysis problems can be solved precisely in polynomial time by transforming them into a special kind of graph-reachability problem. The only restrictions are that the set of dataflow facts must be a finite set, and that the dataflow functions must distribute over the confluence operator (either union or intersection). This class of probable problems includes\&mdash;but is not limited to\&mdash;the classical separable problems (also known as \&ldquo;gen/kill\&rdquo; or \&ldquo;bit-vector\&rdquo; problems)\&mdash; e.g. , reaching definitions, available expressions, and live variables. In addition, the class of problems that our techniques handle includes many non-separable problems, including truly-live variables, copy constant propagation, and possibly-uninitialized variables. Results are reported from a preliminary experimental study of C programs (for the problem of finding possibly-uninitialized variables).},
    author = {Reps, Thomas and Horwitz, Susan and Sagiv, Mooly},
    booktitle = {POPL '95: Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {778826},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=199462},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/199448.199462},
    date-added = {2009-06-26 20:16:37},
    isbn = {0-89791-692-1},
    keywords = {graph-reachability, pushdown-analysis},
    location = {San Francisco, California, United States},
    pages = {49--61},
    priority = {3},
    title = {Precise interprocedural dataflow analysis via graph reachability},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/199448.199462},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/199448.199462},
    year = {1995}
}



@article{mattmight:Anderson:2009:Harmful,
    abstract = {This paper develops a model of computer systems research to help prospective authors understand the often obscure workings of conference program committees. We present data to show that the variability between reviewers is often the dominant factor as to whether a paper is accepted. We argue that paper merit is likely to be zipf distributed, making it inherently difficult for program committees to distinguish between most papers. We use game theory to show that with noisy reviews and zipf merit, authors have an incentive to submit papers too early and too often. These factors make conference reviewing, and systems research as a whole, less efficient and less effective. We describe some recent changes in conference design to address these issues, and we suggest some further potential improvements.},
    author = {Anderson, Thomas},
    citeulike-article-id = {4959554},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1531793.1531815},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1531793.1531815},
    date-added = {2009-06-25 18:59:16},
    issn = {0163-5980},
    journal = {SIGOPS Operating Systems Review},
    keywords = {peer-review},
    number = {2},
    pages = {108--116},
    priority = {4},
    title = {Conference reviewing considered harmful},
    volume = {43},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1531793.1531815},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1531793.1531815},
    year = {2009}
}



@inproceedings{mattmight:Walton:2007:Resource,
    abstract = {The software that runs on a typical wireless sensor network node must address a variety of constraints that are imposed by its purpose and implementation platform. Examples of such constraints include real-time behavior, highly limited RAM and ROM, and other scarce resources. These constraints lead to crosscutting concerns for the implementations of sensor network software: that is, all parts of the software must be carefully written to respect its resource constraints. Neither traditional languages (such as C) nor component-based languages (such as nesC) for implementing sensor network software allow programmers to deal with crosscutting resource constraints in a modular fashion.},
    author = {Walton, Sean and Eide, Eric},
    booktitle = {PLOS '07: Proceedings of the 4th Workshop on Programming Languages and Operating Systems},
    citeulike-article-id = {4014035},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1376789.1376796},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1376789.1376796},
    date-added = {2009-06-22 00:13:22},
    isbn = {978-1-59593-922-7},
    keywords = {operating-systems, sensor-nets},
    location = {Stevenson, Washington},
    pages = {1--5},
    priority = {2},
    title = {Resource management aspects for sensor network software},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1376789.1376796},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1376789.1376796},
    year = {2007}
}



@inproceedings{mattmight:Diatchki:2008:House,
    abstract = {Current practices for developing systems software usually rely on fairly low-level programming languages and tools. As an alternative, our group has been investigating the possibility of using a high-level functional language, Haskell, for kernel and device driver construction, with the hope that it will allow us to produce more reliable and secure software. In this paper, we describe our experience developing a prototype operating system, House, in which the kernel, device drivers, and even a simple GUI, are all written in Haskell. The House system demonstrates that it is indeed possible to construct systems software in a functional language. However, it also suggests some ideas for a new Haskell dialect with features that target specific needs in this domain, including strongly typed support for low-level data structures and facilities for explicit memory accounting.},
    author = {Diatchki, Iavor S. and Hallgren, Thomas and Jones, Mark P. and Leslie, Rebekah and Tolmach, Andrew},
    booktitle = {PLOS '07: Proceedings of the 4th Workshop on Programming Languages and Operating Systems},
    citeulike-article-id = {4920595},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1376789.1376791},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1376789.1376791},
    date-added = {2009-06-22 00:11:24},
    isbn = {978-1-59593-922-7},
    keywords = {haskell, operating-systems},
    location = {Stevenson, Washington},
    pages = {1--5},
    priority = {2},
    title = {Writing systems software in a functional language: {An} experience report},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1376789.1376791},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1376789.1376791},
    year = {2007}
}



@inproceedings{mattmight:Might:2007:ModelChecking,
    abstract = {We present and discuss techniques for performing and improving the model-checking of higher-order, functional programs based upon abstract interpretation [4]. We use continuation-passing-style conversion to produce an abstractable state machine, and then utilize abstract garbage collection and abstract counting [9] to indirectly prune false branches in the abstract state-to-state transition graph. In the process, we generalize abstract garbage collection to conditional garbage collection; that is, we collect values which an ordinary reaching-based collector would have deemed live when it is provable that such values will never be referenced. In addition, we enhance abstract counting, and then exploit it to more precisely evaluate conditions in the abstract.},
    author = {Might, Matthew and Chambers, Benjamin and Shivers, Olin},
    booktitle = {Verification, Model Checking, and Abstract Interpretation},
    citeulike-article-id = {4915352},
    citeulike-linkout-0 = {http://matt.might.net/},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-540-69738-1\_4},
    date-added = {2009-06-20 06:43:41},
    keywords = {abstract-garbage-collection, abstract-interpretation, gamma-cfa, model-checking},
    location = {Nice, France},
    month = {January},
    pages = {59--73},
    priority = {0},
    title = {Model Checking via {Gamma-CFA}},
    x-doi = {10.1007/978-3-540-69738-1\_4},
    x-url = {http://dx.doi.org/10.1007/978-3-540-69738-1\_4},
    year = {2007}
}



@article{mattmight:Harrison:1989:Parallelization,
    abstract = {Lisp and its descendants are among the most important and widely used of programming languages. At the same time, parallelism in the architecture of computer systems is becoming commonplace. There is a pressing need to extend the technology of automatic parallelization that has become available to Fortran programmers of parallel machines, to the realm of Lisp programs and symbolic computing. In this paper we present a comprehensive approach to the compilation of Scheme programs for shared-memory multiprocessors. Our strategy has two principal components:interprocedural analysis andprogram restructuring. We introduceprocedure strings andstack configurations as a framework in which to reason about interprocedural side-effects and object lifetimes, and develop a system of interprocedural analysis, using abstract interpretation, that is used in the dependence analysis and memory management of Scheme programs. We introduce the transformations ofexit-loop translation andrecursion splitting to treat the control structures of iteration and recursion that arise commonly in Scheme programs. We propose an alternative representation for s-expressions that facilitates the parallel creation and access of lists. We have implemented these ideas in a parallelizing Scheme compiler and run-time system, and we complement the theory of our work with  ” snapshots” of programs during the restructuring process, and some preliminary performance results of the execution of object codes produced by the compiler.},
    author = {Harrison, Williams L.},
    citeulike-article-id = {3623280},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/BF01808954},
    citeulike-linkout-1 = {http://www.springerlink.com/content/w06452201433576m},
    date-added = {2009-06-20 04:26:11},
    journal = {LISP and Symbolic Computation},
    keywords = {continuation, dissertation, lambda-calculus, parallelization},
    month = {October},
    number = {3},
    pages = {179--396},
    priority = {0},
    title = {The interprocedural analysis and automatic parallelization of Scheme programs},
    volume = {2},
    x-doi = {10.1007/BF01808954},
    x-url = {http://dx.doi.org/10.1007/BF01808954},
    year = {1989}
}



@phdthesis{mattmight:Shivers:1991:CFA,
    abstract = {Programs written in powerful, higher-order languages like Scheme, ML, and Common Lisp should run as fast as their FORTRAN and C counterparts. They should, but they don't. A major reason is the level of optimisation applied to these two classes of languages. Many FORTRAN and C compilers employ an arsenal of sophisticated global optimisations that depend upon data-ﬂow analysis: common-subexpression elimination, loop-invariant detection, induction-variable elimination, and many, many more. Compilers for higher- order languages do not provide these optimisations. Without them, Scheme, LISP and ML compilers are doomed to produce code that runs slower than their FORTRAN and C counterparts. The problem is the lack of an explicit control-ﬂow graph at compile time, something which traditional data-ﬂow analysis techniques require. In this dissertation, I present a technique for recovering the control-ﬂow graph of a Scheme program at compile time. I give examples of how this information can be used to perform several data-ﬂow analysis optimisations, including copy propagation, induction-variable elimination, useless-variable elimination, and type recovery. The analysis is deﬁned in terms of a non-standard semantic interpretation. The denotational semantics is carefully developed, and several theorems establishing the correctness of the semantics and the implementing algorithms are proven.},
    author = {Shivers, Olin G.},
    citeulike-article-id = {82936},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=124950},
    date-added = {2009-06-20 04:16:00},
    keywords = {abstract-interpretation, cfa, control-flow-analysis, cps, dissertation, static-analysis},
    priority = {0},
    school = {Carnegie Mellon University},
    title = {Control-Flow Analysis of Higher-Order Languages},
    x-publisher = {Carnegie Mellon University},
    x-url = {http://portal.acm.org/citation.cfm?id=124950},
    year = {1991}
}



@inproceedings{mattmight:Shivers:1988:CFA,
    abstract = {Traditional flow analysis techniques, such as the ones typically employed by optimizing Fortran compilers, do not work for Scheme-like languages. This paper presents a flow analysis technique —  control flow analysis  — which is applicable to Scheme-like languages. As a demonstration application, the information gathered by control flow analysis is used to perform a traditional flow analysis problem, induction variable elimination. Extensions and limitations are discussed.   The techniques presented in this paper are backed up by working code. They are applicable not only to Scheme, but also to related languages, such as Common Lisp and ML.},
    author = {Shivers, Olin},
    booktitle = {Proceedings of the ACM SIGPLAN 1988 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {1354},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=54007},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/53990.54007},
    date-added = {2009-06-20 04:08:28},
    isbn = {0-89791-269-1},
    keywords = {cfa, continuation-passing-style, control-flow-analysis, cps, static-analysis},
    location = {Atlanta, Georgia, United States},
    month = {July},
    number = {7},
    pages = {164--174},
    priority = {0},
    title = {Control flow analysis in {Scheme}},
    volume = {23},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/53990.54007},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/53990.54007},
    year = {1988}
}



@inproceedings{mattmight:SMLNJ,
    abstract = {The Standard ML of New Jersey compiler has been under development for five years now. We have developed a robust and complete environment for Standard ML that supports the implementation of large software systems and generates efficient code. The compiler has also served as a laboratory for developing novel implementation techniques for a sophisticated type and module system, continuation based code generation, efficient pattern matching, and concurrent programming features.},
    author = {Appel, Andrew W. and Macqueen, David B.},
    booktitle = {Proceedings of the Third International Symposium on Programming Language Implementation and Logic Programming},
    citeulike-article-id = {342292},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.55.9444},
    date-added = {2009-06-20 03:48:31},
    editor = {Maluszynski, J. and Wirsing, M.},
    keywords = {ml, sml},
    number = {528},
    pages = {1--13},
    priority = {2},
    title = {Standard {ML} of {New} {Jersey}},
    x-publisher = {Springer Verlag},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.55.9444},
    year = {1991}
}



@book{mattmight:SML:1997,
    abstract = {{Standard ML is a general-purpose programming language designed for large projects. This book provides a formal definition of Standard ML for the benefit of all concerned with the language, including users and implementers. Because computer programs are increasingly required to withstand rigorous analysis, it is all the more important that the language in which they are written be defined with full rigor.<br /> <br /> One purpose of a language definition is to establish a theory of meanings upon which the understanding of particular programs may rest. To properly define a programming language, it is necessary to use some form of notation other than a programming language. Given a concern for rigor, mathematical notation is an obvious choice. The authors have defined their semantic objects in mathematical notation that is completely independent of Standard ML.<br /> <br /> In defining a language one must also define the rules of evaluation precisely--that is, define what meaning results from evaluating any phrase of the language. The definition thus constitutes a formal specification for an implementation. The authors have developed enough of their theory to give sense to their rules of evaluation.<br /> <br /> <I>The Definition of Standard ML</I> is the essential point of reference for Standard ML. Since its publication in 1990, the implementation technology of the language has advanced enormously and the number of users has grown. The revised edition includes a number of new features, omits little-used features, and corrects mistakes of definition.}},
    author = {Milner, Robin and Tofte, Mads and Harper, Robert and Macqueen, David},
    citeulike-article-id = {113339},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0262631814},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0262631814},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0262631814},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0262631814},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0262631814/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0262631814},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0262631814},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0262631814},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0262631814\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0262631814},
    date-added = {2009-06-20 03:44:09},
    howpublished = {Paperback},
    isbn = {0262631814},
    keywords = {ml, sml, specification},
    month = {May},
    priority = {0},
    title = {The Definition of Standard ML - Revised},
    x-publisher = {The MIT Press},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0262631814},
    year = {1997}
}



@inproceedings{mattmight:Wadler:1990:Linear,
    abstract = {The linear logic of J.-Y. Girard suggests a new type system for functional  languages, one which supports operations that "change the world". Values belonging  to a linear type must be used exactly once: like the world, they cannot be  duplicated or destroyed. Such values require no reference counting or garbage collection, and safely admit destructive array update. Linear types extend Schmidt's  notion of single threading; provide an alternative to Hudak and Bloss' update  analysis; and offer a practical complement to Lafont and Holmstr\"{o}m's elegant linear languages.},
    author = {Wadler, Philip},
    booktitle = {Programming Concepts and Methods},
    citeulike-article-id = {4914025},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.5002},
    date-added = {2009-06-20 03:34:59},
    keywords = {linear-type, type-theory},
    month = {April},
    priority = {2},
    title = {Linear Types Can Change the World!},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.31.5002},
    year = {1990}
}



@article{mattmight:Hannan:1998:Escape,
    abstract = {An important issue faced by implementors of higher-order functional programming languages is the allocation and deallocation of storage for variables. The possibility of variables escaping their scope during runtime makes traditional stack allocation inadequate. We consider the problem of detecting when variables in such languages do not escape their scope, and thus can have their bindings allocated in an efficient manner. We use an annotated type system to infer information about the use of variables in a higher-order, strict functional language and combine this system with a translation to an annotated language which explicitly indicates which variables do not escape. The type system uses a notion of annotated types which extends the traditional simple type system with information about the extent of variables. To illustrate the use of this information we define an operational semantics for the annotated language which supports both stack and environment allocation of variable bindings. Only the stack allocated bindings need follow the protocol for stacks: their extent may not exceed their scope. Environment allocated bindings can have any extent, and their allocation has no impact on the stack allocated ones. We prove the analysis and translation correct with respect to this operational semantics by adapting a traditional type consistency proof to our setting. We have encoded the proof into the Elf programming language and typechecked it, providing a partially machine-checked proof.},
    author = {Hannan, John},
    citeulike-article-id = {4913926},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=969609},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/S0956796898003025},
    date-added = {2009-06-20 03:26:00},
    issn = {0956-7968},
    journal = {Journal of Functional Programming},
    keywords = {escape-analysis, static-analysis, type-based-analysis, type-theory},
    number = {3},
    pages = {239--273},
    priority = {0},
    title = {A type-based escape analysis for functional languages},
    volume = {8},
    x-address = {New York, NY, USA},
    x-doi = {10.1017/S0956796898003025},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/10.1017/S0956796898003025},
    year = {1998}
}



@book{mattmight:Scala:2008,
    abstract = {Programming in Scala is the definitive book on Scala, the new language for theJava Platform that blends object-oriented and functional programming conceptsinto a unique and powerful tool for developers.Coauthored by the designer of the Scala language, this authoritative book willteach you, one step at a time, the Scala language and the ideas behind it.The book is carefully crafted to help you learn. The first few chapters willgive you enough of the basics that you can already start using Scala forsimple tasks. The entire book is organized so that each new concept builds onconcepts that came before - a series of steps that promises to help you masterthe Scala language and the important ideas about programming that Scalaembodies.A comprehensive tutorial and reference for Scala, this book covers the entirelanguage and important libraries.},
    author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
    citeulike-article-id = {4913791},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0981531601},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0981531601},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0981531601},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0981531601},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0981531601/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0981531601},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0981531601},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0981531601},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0981531601\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0981531601},
    date-added = {2009-06-20 03:02:37},
    edition = {1st},
    howpublished = {Paperback},
    isbn = {0981531601},
    keywords = {scala, specification},
    month = {November},
    priority = {0},
    title = {Programming in Scala: A Comprehensive Step-by-step Guide},
    x-publisher = {Artima Inc},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0981531601},
    year = {2008}
}



@article{mattmight:Milner:1978:Polymorphism,
    abstract = {The aim of this work is largely a practical one. A widely employed style of programming, particularly in structure-processing languages which impose no discipline of types, entails defining procedures which work well on objects of a wide variety. We present a formal type discipline for such polymorphic procedures in the context of a simple programming language, and a compile time type-checking algorithm  which enforces the discipline. A Semantic Soundness Theorem (based on a formal semantics for the language) states that well-type programs cannot "go wrong" and a Syntactic Soundness Theorem states that if  accepts a program then it is well typed. We also discuss extending these results to richer languages; a type-checking algorithm based on  is in fact already implemented and working, for the metalanguage ML in the Edinburgh LCF system.},
    author = {Milner, Robin},
    citeulike-article-id = {134009},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/0022-0000(78)90014-4},
    citeulike-linkout-1 = {http://www.sciencedirect.com/science/article/B6WJ0-4B4YSKG-2D/2/64deca1176fc1a45585d3442521fec04},
    date-added = {2009-06-20 02:47:05},
    journal = {Journal of Computer and System Sciences},
    keywords = {ml, type-theory},
    month = {December},
    number = {3},
    pages = {348--375},
    priority = {0},
    title = {A theory of type polymorphism in programming},
    volume = {17},
    x-doi = {10.1016/0022-0000(78)90014-4},
    x-url = {http://dx.doi.org/10.1016/0022-0000(78)90014-4},
    year = {1978}
}



@inproceedings{mattmight:GHC:1993,
    abstract = {We give an overview of the Glasgow Haskell compiler, focusing especially on way in which we have been able to exploit the rich theory of functional languages to give very practical improvements in the compiler. The compiler is portable, modular, generates good code, and is freely available. 1 Introduction Computer Science is both a scientific and an engineering discipline. As a scientific discipline, it seeks to establish generic principles and theories that can be used to explain or underpin a ...},
    author = {Peyton-Jones, Simon L. and Hall, Cordelia V. and Hammond, Kevin and Partain, Will and Wadler, Philip},
    booktitle = {Proc. UK Joint Framework for Information Technology (JFIT) Technical Conference},
    citeulike-article-id = {313740},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.47.6555},
    comment = {GHC is the de facto standard for Haskell.},
    date-added = {2009-06-20 01:23:04},
    keywords = {compiler, ghc, haskell},
    priority = {2},
    title = {The {Glasgow} {Haskell} Compiler: A Technical Overview},
    x-url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.47.6555},
    year = {93}
}



@misc{mattmight:MLton,
    author = {Weeks, Stephen and Fluet, Matthew and Cejtin, Henry and Jagannathan, Suresh},
    citeulike-article-id = {4913099},
    citeulike-linkout-0 = {http://mlton.org/},
    comment = {MLton produces extremely efficient executables for SML code.},
    date-added = {2009-06-20 01:17:23},
    howpublished = {http://www.mlton.org/},
    keywords = {compiler, mlton, sml},
    priority = {0},
    title = {The {MLton} Compiler},
    x-url = {http://mlton.org/}
}



@book{mattmight:C:1988,
    abstract = {{Just about every C programmer I respect learned C from this book. Unlike many of the 1,000 page doorstops stuffed with CD-ROMs that have become popular, this volume is concise and powerful (if somewhat dangerous) -- like C itself. And it was written by Kernighan himself. Need we say more?}},
    author = {Kernighan, Brian W. and Ritchie, Dennis M.},
    citeulike-article-id = {167576},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0131103628},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0131103628},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0131103628},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131103628},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131103628/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0131103628},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131103628},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131103628},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131103628\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131103628},
    date-added = {2009-06-19 17:05:39},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0131103628},
    keywords = {c, specification},
    location = {Englewood Cliffs, NJ},
    month = {March},
    priority = {0},
    title = {C Programming Language (2nd Edition)},
    x-publisher = {Prentice Hall},
    x-url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0131103628},
    year = {1988}
}



@article{mattmight:King:1976:Symbolic,
    author = {King, James C.},
    citeulike-article-id = {80858},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=360252},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/360248.360252},
    date-added = {2009-06-17 22:47:32},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {symbolic-execution},
    month = {July},
    number = {7},
    pages = {385--394},
    priority = {3},
    title = {Symbolic execution and program testing},
    volume = {19},
    x-doi = {10.1145/360248.360252},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/10.1145/360248.360252},
    year = {1976}
}



@article{mattmight:Reps:2005:Weighted-PDA,
    abstract = {Recently, pushdown systems (PDSs) have been extended to weighted PDSs, in which each transition is labeled with a value, and the goal is to determine the meet-over-all-paths value (for paths that meet a certain criterion). This paper shows how weighted PDSs yield new algorithms for certain classes of interprocedural dataflow-analysis problems.},
    author = {Reps, Thomas and Schwoon, Stefan and Jha, Somesh and Melski, David},
    citeulike-article-id = {4848916},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1115650},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/j.scico.2005.02.009},
    date-added = {2009-06-14 23:42:48},
    issn = {0167-6423},
    journal = {Science of Computer Programming},
    keywords = {pda, pushdown-automata, static-analysis},
    number = {1-2},
    pages = {206--263},
    priority = {2},
    title = {Weighted pushdown systems and their application to interprocedural dataflow analysis},
    volume = {58},
    x-address = {Amsterdam, The Netherlands, The Netherlands},
    x-doi = {10.1016/j.scico.2005.02.009},
    x-publisher = {Elsevier North-Holland, Inc.},
    x-url = {http://dx.doi.org/10.1016/j.scico.2005.02.009},
    year = {2005}
}



@inproceedings{mattmight:Bouajjani:1997:PDA-Reachability,
    author = {Bouajjani, Ahmed and Esparza, Javier and Maler, Oded},
    booktitle = {CONCUR '97: Proceedings of the 8th International Conference on Concurrency Theory},
    citeulike-article-id = {4848905},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=701281},
    date-added = {2009-06-14 23:40:58},
    isbn = {3-540-63141-0},
    keywords = {model-checking, pushdown-automata, reachability-analysis, static-analysis},
    pages = {135--150},
    priority = {4},
    title = {Reachability Analysis of Pushdown Automata: Application to Model-Checking},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=701281},
    year = {1997}
}



@phdthesis{mattmight:Might:2007:Dissertation,
    author = {Might, Matthew},
    citeulike-article-id = {4847895},
    citeulike-linkout-0 = {http://matt.might.net/},
    date-added = {2009-06-14 20:10:41},
    keywords = {abstract-interpretation, cfa, dissertation, environment-analysis, static-analysis},
    month = {June},
    priority = {0},
    school = {Georgia Institute of Technology},
    title = {Environment Analysis of Higher-Order Languages},
    x-url = {http://matt.might.net/},
    year = {2007}
}



@inproceedings{mattmight:Cousot:1979:Galois,
    author = {Cousot, Patrick and Cousot, Radhia},
    booktitle = {POPL '79: Proceedings of the 6th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    citeulike-article-id = {225306},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=567778},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/567752.567778},
    date-added = {2009-06-13 21:01:58},
    keywords = {abstract-interpretation, galois-connection},
    pages = {269--282},
    priority = {0},
    title = {Systematic design of program analysis frameworks},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/567752.567778},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/10.1145/567752.567778},
    year = {1979}
}



@inproceedings{mattmight:Might:2009:APosteriori,
    abstract = {An abstract interpretation's resource-allocation policy ( e.g. , one heap summary node per allocation site) largely determines both its speed and precision. Historically, context has driven allocation policies, and as a result, these policies are said to determine the "context-sensitivity" of the analysis. This work gives analysis designers newfound freedom to manipulate speed and precision by severing the link between allocation policy and context-sensitivity: abstract allocation policies may be unhinged not only from context, but also from even a predefined correspondence with a concrete allocation policy. We do so by proving that abstract allocation policies can be made non-deterministic without sacrificing correctness; this non-determinism permits precision-guided allocation policies previously assumed to be unsafe. To prove correctness, we introduce the notion of  a posteriori  soundness for an analysis. A proof of  a posteriori  soundness differs from a standard proof of soundness in that the abstraction maps used in an  a posteriori  proof cannot be constructed until  after  an analysis has been run. Delaying construction allows them to be built so as to justify the decisions made by non-determinism. The crux of the  a posteriori  soundness theorem is to demonstrate that a justifying abstraction map can  always  be constructed.},
    author = {Might, Matthew and Manolios, Panagiotis},
    booktitle = {VMCAI '09: Proceedings of the 10th International Conference on Verification, Model Checking, and Abstract Interpretation},
    citeulike-article-id = {4838377},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1505362.1505387},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-540-93900-9\_22},
    date-added = {2009-06-13 20:52:21},
    isbn = {978-3-540-93899-6},
    keywords = {abstract-interpretation, existential-cfa, static-analysis},
    location = {Savannah, GA},
    pages = {260--274},
    priority = {0},
    title = {A Posteriori Soundness for Non-deterministic Abstract Interpretations},
    x-address = {Berlin, Heidelberg},
    x-doi = {10.1007/978-3-540-93900-9\_22},
    x-publisher = {Springer-Verlag},
    x-url = {http://dx.doi.org/10.1007/978-3-540-93900-9\_22},
    year = {2009}
}



@article{mattmight:Might:2007:DeltaCFA,
    abstract = {Reasoning about program behaviour in programming languages based on the lambda calculus requires reasoning in a unified way about control, data and environment structure. Previous analysis work has done an inadequate job on the environment component of this task. We develop a new analytic framework,  Δ CFA, which is based on a new abstraction: frame strings, an enriched variant of procedure strings that can be used to model both control flow and environment allocation. This abstraction enables new environment-sensitive analyses and transformations that have not been previously attainable. We state the critical theorems needed to establish correctness of the entire technology suite, with their proofs.},
    author = {Might, Matthew and Shivers, Olin},
    citeulike-article-id = {4838326},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.tcs.2006.12.031},
    citeulike-linkout-1 = {http://linkinghub.elsevier.com/retrieve/pii/S0304397506009200},
    date-added = {2009-06-13 20:44:50},
    issn = {03043975},
    journal = {Theoretical Computer Science},
    keywords = {cfa, control-flow-analysis, delta-cfa, environment-analysis, frame-strings},
    month = {May},
    number = {1-3},
    pages = {137--168},
    priority = {0},
    title = {Analyzing the environment structure of higher-order languages using frame strings},
    volume = {375},
    x-doi = {10.1016/j.tcs.2006.12.031},
    x-url = {http://dx.doi.org/10.1016/j.tcs.2006.12.031},
    year = {2007}
}



@article{mattmight:Might:2008:Exploiting,
    abstract = {We present two complementary improvements for abstract-interpretation-based flow analysis of higher-order languages: (1) abstract garbage collection and (2) abstract counting. garbage collection is an analog to its concrete counterpart: the analysis determines when an abstract resource has become unreachable, and then, re-allocates it as fresh. This prevents flow sets from joining during abstract interpretation, which has two immediate effects: (1) the precision of the interpretation increases and (2) its running time often falls. In abstract counting, the analysis tracks how many times an abstract resource has been allocated. A count of one implies that the abstract resource momentarily represents only one concrete resource. This knowledge, in turn, drives environment analysis, expanding the kind (rather than just the degree) of optimization available to the compiler.},
    author = {Might, Matthew and Shivers, Olin},
    citeulike-article-id = {4838293},
    citeulike-linkout-0 = {http://journals.cambridge.org/action/displayAbstract?fromPage=online\&aid=2519936},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/S0956796808006941},
    date-added = {2009-06-13 20:40:21},
    journal = {Journal of Functional Programming},
    keywords = {abstract-counting, abstract-garbage-collection, abstract-interpretation, gamma-cfa},
    number = {Special Double Issue 5-6},
    pages = {821--864},
    priority = {0},
    title = {Exploiting reachability and cardinality in higher-order flow analysis},
    volume = {18},
    x-doi = {10.1017/S0956796808006941},
    x-url = {http://dx.doi.org/10.1017/S0956796808006941},
    year = {2008}
}



@inproceedings{mattmight:Shivers:2006:Continuations,
    abstract = {On-line transducers are an important class of computational agent; we construct and compose together many software systems using them, such as stream processors, layered network protocols, DSP networks and graphics pipelines. We show an interesting use of continuations, that, when taken in a CPS setting, exposes the control flow of these systems. This enables a CPS-based compiler to optimise systems composed of these transducers, using only standard, known analyses and optimisations. Critically, the analysis permits optimisation across the composition of these transducers, allowing efficient construction of systems in a hierarchical way.},
    author = {Shivers, Olin and Might, Matthew},
    booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN Conference on Programming Language Design and Implementation},
    citeulike-article-id = {2601605},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1134016},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1133981.1134016},
    date-added = {2009-06-13 19:04:28},
    isbn = {1595933204},
    keywords = {continuation, coroutine, coroutine-fusion, super-beta, transducer-fusion},
    pages = {295--307},
    priority = {0},
    title = {Continuations and transducer composition},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1133981.1134016},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1133981.1134016},
    year = {2006}
}



@inproceedings{mattmight:Cousot:1977:AI,
    abstract = {A program denotes computations in some universe of objects. Abstract interpretation of programs consists in using that denotation to describe computations in another universe of abstract objects, so that the resulta of abstract execution give some informations on the actual computations. An intuitive example (which we borrow from Sintzoff [72]) is the rule of signs. The text -1515*17 may be undestood to denote computations on the abstract universe {(+), (-), (+-)} where the semantics of arithmetic operators is defined by the rule of signs. The abstract execution -1515*17 ==> -(+)*(+) ==> (-)*(+) ==> (-), proves that -1515+17 is a negative number. Abstract interpretation is concerned by a particlar underlying structure of the usual universe of computations (the sign, in our example). It gives a summay of some facets of the actual executions of a program. In general this summary is simple to obtain but inacurrate (e.g. -1515+17 ==> -(+)+(+) ==> (-)+(+) ==> (+-)). Despite its fundamental incomplete results abstract interpretation allows the programmer or the compiler to answer questions which do not need full knowledge of program executions or which tolerate an imprecise answer (e.g. partial correctness proofs of programs ignoring the termination problems, type checking, program optimizations which are not carried in the absence of certainty about their feasibility, ...).

Section 3 describes the syntax and mathematical semantics of a simple flowchart language, Scott and Strachey[71]. This mathematical semantics is used in section 4 to built a more abstract model of the semantics of programs, in that it ignores the sequencing of control flow. This model is taken to be the most concrete of the abstract interpretations of programs. Section 5 gives the formal definition of the abstract interpretations of a program. Abstract program properties are modeled by a complete semilattice, Birkoff[61]. Elementary program constructs are locally interpreted by order-preserving functions which are used to associate a system of equations with a program. The program global properties are then defined as one of the extreme fixpoints of that system, Tarski[55]. The abstraction process is defined in section 6. It is shown that the program properties obtained by an abstract interpretation of a program are consistent with those obtained by a more refined interpretation of that program. In particular, an abstract interpretation may be shown to be consistent with the formal semantics of the language. Levels of abstraction are formalized by showing that consistent abstract interpretations form a lattice (section 7). Section 8 gives a constructive definition of abstract properties of programs based on constructive definitions of fixpoints. It shows that various classical algorithms such as Kildall[73], Wegbreit[75], compute program properties as limits of finite Kleene[52]'s sequences. Section 9 introduces finite fixpoint approximation methods to be used when Kleene's sequences are infinite, Cousot[76]. They are shown to be consistent with the abstraction process. Practical examples illustrate the various sections. The conclusion points out that the abstract interpretation of programs is a unified approach to apparently unrelated program analysis techniques.},
    author = {Cousot, Patrick and Cousot, Radhia},
    booktitle = {Conference Record of the Fourth ACM Symposium on Principles of Programming Languages},
    citeulike-article-id = {1314814},
    date-added = {2009-06-13 18:59:38},
    keywords = {abstract-interpretation},
    pages = {238--252},
    priority = {0},
    title = {Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints},
    x-address = {New York, NY, USA},
    x-publisher = {ACM Press},
    year = {1977}
}



@inproceedings{mattmight:Might:2006:GammaCFA,
    abstract = {We present two independent and complementary improvements for flow-based analysis of higher-order languages: (1)  abstract garbage collection  and (2) abstract counting , collectively titled Gamma-CFA.  Abstract garbage collection is an analog to its concrete counterpart: we determine when an abstract resource has become unreachable, and then reallocate it as fresh. This prevents flow sets from merging in the abstract, which has two immediate effects: (1) the precision of the analysis is increased, and (2) the running time of the analysis is frequently reduced. In some nontrivial cases, we achieve an order of magnitude improvement in precision and time  simultaneously .In abstract counting, we track how many times an abstract resource has been allocated. A count of one implies that the abstract resource momentarily represents only one concrete resource. This, in turn, allows us to perform environment analysis and to expand the kinds (rather than just the degree) of optimizations available to the compiler.},
    author = {Might, Matthew and Shivers, Olin},
    booktitle = {ICFP '06: Proceedings of the Eleventh ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {4837509},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1159803.1159807},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1159803.1159807},
    date-added = {2009-06-13 18:52:37},
    isbn = {1-59593-309-3},
    keywords = {abstract-counting, abstract-garbage-collection, abstract-interpretation, gamma-cfa},
    location = {Portland, Oregon, USA},
    pages = {13--25},
    priority = {0},
    title = {Improving flow analyses via Gamma-CFA: Abstract garbage collection and counting},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1159803.1159807},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1159803.1159807},
    year = {2006}
}



@inproceedings{mattmight:Might:2006:DeltaCFA,
    abstract = {We describe a new program-analysis framework, based on CPS and procedure-string abstractions, that can handle critical analyses which the  k-CFA framework cannot. We present the main theorems concerning correctness, show an application analysis, and describe a running implementation.},
    author = {Might, Matthew and Shivers, Olin},
    booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {4837404},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1111037.1111049},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1111037.1111049},
    date-added = {2009-06-13 18:40:49},
    isbn = {1-59593-027-2},
    keywords = {abstract-interpretation, delta-cfa, environment-analysis, frame-strings, static-analysis},
    location = {Charleston, South Carolina, USA},
    pages = {127--140},
    priority = {0},
    title = {Environment analysis via Delta-CFA},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1111037.1111049},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1111037.1111049},
    year = {2006}
}



@inproceedings{mattmight:Might:2007:LFA,
    abstract = {This work presents a framework for fusing flow analysis and theorem proving called logic-flow analysis (LFA). The framework itself is the reduced product of two abstract interpretations: (1) an abstract state machine and (2) a set of propositions in a restricted first-order logic. The motivating application for LFA is the safe removal of implicit array-bounds checks without type information, user interaction or program annotation. LFA achieves this by delegating a given task to either the prover or the flow analysis depending on which is best suited to discharge it. Described within are a concrete semantics for continuation-passing style; a restricted, first-order logic; a woven product of two abstract interpretations; proofs of correctness; and a worked example.},
    author = {Might, Matthew},
    booktitle = {POPL '07: Proceedings of the 34th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {2402753},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1190216.1190247},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1190216.1190247},
    date-added = {2009-06-13 17:39:21},
    isbn = {1595935754},
    keywords = {abstract-interpretation, lfa, logic-flow-analysis, predicate-abstraction},
    pages = {185--198},
    priority = {0},
    title = {Logic-flow analysis of higher-order programs},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1190216.1190247},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1190216.1190247},
    year = {2007}
}




@inproceedings{dvanhorn:Might:2006:DeltaCFA,
    abstract = {We describe a new program-analysis framework, based on CPS and procedure-string abstractions, that can handle critical analyses which the  k-CFA framework cannot. We present the main theorems concerning correctness, show an application analysis, and describe a running implementation.},
    author = {Might, Matthew and Shivers, Olin},
    booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {4837404},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1111037.1111049},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1111037.1111049},
    date-added = {2009-11-20 04:00:25},
    isbn = {1-59593-027-2},
    location = {Charleston, South Carolina, USA},
    pages = {127--140},
    priority = {2},
    title = {Environment analysis via \(\Delta\)-CFA},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1111037.1111049},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1111037.1111049},
    year = {2006}
}



@inproceedings{dvanhorn:Gustavsson:PADO01,
    author = {Gustavsson, J\"{o}rgen and Svenningsson, Josef},
    booktitle = {PADO '01: Proceedings of the Second Symposium on Programs as Data Objects},
    citeulike-article-id = {6171563},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=668111},
    date-added = {2009-11-20 03:15:26},
    isbn = {3-540-42068-1},
    pages = {63--83},
    priority = {2},
    title = {Constraint Abstractions},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    x-url = {http://portal.acm.org/citation.cfm?id=668111},
    year = {2001}
}



@inproceedings{dvanhorn:Rehof:POPL01,
    abstract = {We present a novel approach to scalable implementation of type-based flow analysis with polymorphic subtyping. Using a new presentation of polymorphic subytping with instantiation constraints, we are able to apply context-free language (CFL) reachability techniques to type-based flow analysis. We develop a CFL-based algorithm for computing flow-information in time O( n \&sup3;), where  n  is the size of the typed program. The algorithm substantially improves upon the best previously known algorithm for flow analysis based on polymorphic subtyping with complexity O( n 8 ). Our technique also yields the first demand-driven algorithm for polymorphic subtype-based flow-computation. It works directly on higher-order programs with structured data of finite type (unbounded data structures are incorporated via finite approximations), supports context-sensitive, global flow summariztion and includes polymorphic recursion.},
    author = {Rehof, Jakob and F\"{a}hndrich, Manuel},
    booktitle = {POPL '01: Proceedings of the 28th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5442196},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=360204.360208},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/360204.360208},
    date-added = {2009-11-20 02:56:17},
    isbn = {1-58113-336-7},
    location = {London, United Kingdom},
    pages = {54--66},
    priority = {2},
    title = {Type-base flow analysis: from polymorphic subtyping to CFL-reachability},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/360204.360208},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/360204.360208},
    year = {2001}
}



@phdthesis{dvanhorn:Lhotak:PhD:2006,
    author = {Lhot\'{a}k, Ond\v{r}ej},
    citeulike-article-id = {6127600},
    date-added = {2009-11-16 20:21:44},
    month = {January},
    priority = {2},
    school = {McGill University},
    title = {Program Analysis using Binary Decision Diagrams},
    year = {2006}
}

@article{dvanhorn:Igarashi:TOPLAS:2001,
    abstract = {Several recent studies have introduced lightweight versions of Java: reduced languages in which complex features like threads and reflection are dropped to enable rigorous arguments about key properties such as type safety. We carry this process a step further, omitting almost all features of the full language (including interfaces and even assignment) to obtain a small calculus, Featherweight Java, for which rigorous proofs are not only possible but easy. Featherweight Java bears a similar relation to Java as the lambda-calculus does to languages such as ML and Haskell. It offers a similar computational "feel," providing classes, methods, fields, inheritance, and dynamic typecasts with a semantics closely following Java's. A proof of type safety for Featherweight Java thus illustrates many of the interesting features of a safety proof for the full language, while remaining pleasingly compact. The minimal syntax, typing rules, and operational semantics of Featherweight Java make it a handy tool for studying the consequences of extensions and variations. As an illustration of its utility in this regard, we extend Featherweight Java with  generic classes  in the style of GJ (Bracha, Odersky, Stoutamire, and Wadler) and give a detailed proof of type safety. The extended system formalizes for the first time some of the key features of GJ.},
    author = {Igarashi, Atsushi and Pierce, Benjamin C. and Wadler, Philip},
    citeulike-article-id = {3425305},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=503505},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/503502.503505},
    date-added = {2009-10-26 15:00:29},
    issn = {0164-0925},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {java},
    number = {3},
    pages = {396--450},
    priority = {2},
    title = {Featherweight {J}ava: a minimal core calculus for {J}ava and {GJ}},
    volume = {23},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/503502.503505},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/503502.503505},
    year = {2001}
}



@book{dvanhorn:Neilson:1999,
    author = {Nielson, Flemming and Nielson, Hanne R. and Hankin, Chris},
    citeulike-article-id = {558744},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=555142},
    date-added = {2009-10-25 15:33:43},
    isbn = {3540654100},
    keywords = {cfa},
    priority = {0},
    title = {Principles of Program Analysis},
    x-address = {Secaucus, NJ, USA},
    x-publisher = {Springer-Verlag New York, Inc.},
    x-url = {http://portal.acm.org/citation.cfm?id=555142},
    year = {1999}
}



@article{dvanhorn:Skalka-Smith-VanHorn:AIOOL05,
    abstract = {This paper describes a flexible type and effect inference system for Featherweight Java (FJ). The effect terms generated by static type and effect inference embody the abstract interpretation of pro- gram event sequences. Flexibility in the analysis is obtained by post-processing of inferred effects, allowing a modular adaptation to extensions of the language. Several example transformations are discussed, including how inferred effects can be transformed to reflect the impact of exceptions on FJ control flow.},
    author = {Skalka, Christian and Smith, Scott and Van Horn, David},
    citeulike-article-id = {5395202},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.entcs.2005.01.027},
    citeulike-linkout-1 = {http://linkinghub.elsevier.com/retrieve/pii/S1571066105002628},
    date-added = {2009-08-07 21:51:31},
    issn = {15710661},
    journal = {Electronic Notes in Theoretical Computer Science},
    month = {May},
    pages = {111--124},
    priority = {0},
    title = {A Type and Effect System for Flexible Abstract Interpretation of Java (Extended Abstract)},
    volume = {131},
    x-doi = {10.1016/j.entcs.2005.01.027},
    x-url = {http://dx.doi.org/10.1016/j.entcs.2005.01.027},
    year = {2005}
}



@article{dvanhorn:Skalka-Smith-VanHorn:JFP08,
    abstract = {This paper shows how type effect systems can be combined with model-checking techniques to produce powerful, automatically verifiable program logics for higher order programs. The properties verified are based on the ordered sequence of events that occur during program execution, so-called event traces. Our type and effect systems infer conservative approximations of the event traces arising at run-time, and model-checking techniques are used to verify logical properties of these histories. Our language model is based on the λ-calculus. Technical results include a type inference algorithm for a polymorphic type effect system, and a method for applying known model-checking techniques to the trace effects inferred by the type inference algorithm, allowing static enforcement of history- and stack-based security mechanisms. A type safety result is proven for both unification and subtyping constraint versions of the type system, ensuring that statically well-typed programs do not contain trace event checks that can fail at run-time.},
    author = {Skalka, Christian and Smith, Scott and Van Horn, David},
    citeulike-article-id = {5395173},
    citeulike-linkout-0 = {http://journals.cambridge.org/action/displayAbstract?fromPage=online\&aid=1695700},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/S0956796807006466},
    date-added = {2009-08-07 21:46:03},
    journal = {Journal of Functional Programming},
    number = {02},
    pages = {179--249},
    priority = {0},
    title = {Types and trace effects of higher order programs},
    volume = {18},
    x-doi = {10.1017/S0956796807006466},
    x-url = {http://dx.doi.org/10.1017/S0956796807006466},
    year = {2008}
}



@inproceedings{dvanhorn:VanHorn-Mairson:ICFP07,
    author = {Van{ }Horn, David and Mairson, Harry G.},
    booktitle = {ICFP '07: Proceedings of the 12th ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {2784124},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1291151.1291166},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1291151.1291166},
    date-added = {2009-08-07 21:42:15},
    isbn = {9781595938152},
    pages = {85--96},
    priority = {0},
    title = {Relating complexity and precision in control flow analysis},
    x-address = {New York, NY, USA},
    x-doi = {10.1145/1291151.1291166},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/10.1145/1291151.1291166},
    year = {2007}
}



@inproceedings{dvanhorn:VanHorn-Mairson:SAS08,
    abstract = {Flow analysis is a ubiquitous and much-studied component of compiler technology—and its variations abound. Amongst the most well known is Shivers' 0CFA; however, the best known algorithm for 0CFA requires time cubic in the size of the analyzed program and is unlikely to be improved. Consequently, several analyses have been designed to approximate 0CFA by trading precision for faster computation. Henglein's simple closure analysis, for example, forfeits the notion of directionality in flows and enjoys an  ” almost linear” time algorithm. But in making trade-offs between precision and complexity, what has been given up and what has been gained? Where do these analyses differ and where do they coincide? We identify a core language—the linear λ-calculus—where 0CFA, simple closure analysis, and many other known approximations or restrictions to 0CFA are rendered identical. Moreover, for this core language, analysis corresponds with (instrumented) evaluation. Because analysis faithfully captures evaluation, and because the linear λ-calculus is complete for ptime, we derive ptime-completeness results for all of these analyses.},
    author = {Van{ }Horn, David and Mairson, Harry},
    booktitle = {The 15th International Static Analysis Symposium (SAS 2008)},
    citeulike-article-id = {5141450},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-540-69166-2\_17},
    citeulike-linkout-1 = {http://www.springerlink.com/content/x1n1193817682237},
    date-added = {2009-08-07 21:39:57},
    journal = {Static Analysis},
    pages = {255--269},
    priority = {0},
    title = {Flow Analysis, Linearity, and PTIME},
    x-doi = {10.1007/978-3-540-69166-2\_17},
    x-url = {http://dx.doi.org/10.1007/978-3-540-69166-2\_17},
    year = {2008}
}



@inproceedings{dvanhorn:DBLP:conf/rta/2006,
    booktitle = {RTA},
    citeulike-article-id = {5395154},
    date-added = {2009-08-07 21:29:29},
    editor = {Pfenning, Frank},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Term Rewriting and Applications, 17th International Conference, RTA 2006, Seattle, WA, USA, August 12-14, 2006, Proceedings},
    volume = {4098},
    x-publisher = {Springer},
    year = {2006}
}



@inproceedings{dvanhorn:giesl-etal-rta06,
    author = {Giesl, J{\"{u}}rgen and Swiderski, Stephan and Kamp, Peter S. and Thiemann, Ren{\'{e}}},
    booktitle = {RTA},
    citeulike-article-id = {5395153},
    date-added = {2009-08-07 21:29:28},
    editor = {Pfenning, Frank},
    keywords = {file-import-09-08-07},
    pages = {297--312},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Automated Termination Analysis for Haskell: From Term Rewriting to Programming Languages},
    volume = {4098},
    x-publisher = {Springer},
    year = {2006}
}



@inproceedings{dvanhorn:biswas-popl97,
    author = {Biswas, Sandip K.},
    booktitle = {POPL '97: Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395152},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/263699.263753},
    date-added = {2009-08-07 21:29:28},
    key = {POPL 1997},
    keywords = {file-import-09-08-07},
    location = {Paris, France},
    pages = {372--385},
    priority = {2},
    title = {A demand-driven set-based analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/263699.263753},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/263699.263753},
    year = {1997}
}



@article{dvanhorn:palsberg-schwarzbach-ic95,
    author = {Palsberg, Jens and Schwartzbach, Michael I.},
    citeulike-article-id = {5395151},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1006/inco.1995.1058},
    date-added = {2009-08-07 21:29:28},
    journal = {Inf. Comput.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {128--141},
    priority = {2},
    title = {Safety analysis versus type inference},
    volume = {118},
    x-address = {Duluth, MN, USA},
    x-doi = {http://dx.doi.org/10.1006/inco.1995.1058},
    x-publisher = {Academic Press, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1006/inco.1995.1058},
    year = {1995}
}



@phdthesis{dvanhorn:ayers-phd93,
    author = {Ayers, Andrew E.},
    citeulike-article-id = {5395150},
    date-added = {2009-08-07 21:29:28},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Abstract analysis and optimization of scheme},
    x-address = {Cambridge, MA, USA},
    x-publisher = {Massachusetts Institute of Technology},
    year = {1993}
}



@inproceedings{dvanhorn:diwan-etal-oopsla96,
    author = {Diwan, Amer and Eliot and Mckinley, Kathryn S.},
    booktitle = {OOPSLA '96: Proceedings of the 11th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
    citeulike-article-id = {5395149},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/236337.236367},
    date-added = {2009-08-07 21:29:28},
    keywords = {file-import-09-08-07},
    location = {San Jose, California, United States},
    pages = {292--305},
    priority = {2},
    title = {Simple and effective analysis of statically-typed object-oriented programs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/236337.236367},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/236337.236367},
    year = {1996}
}



@inproceedings{dvanhorn:graver-johnson-popl90,
    author = {Graver, Justin O. and Johnson, Ralph E.},
    booktitle = {POPL '90: Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395148},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96722},
    date-added = {2009-08-07 21:29:28},
    key = {POPL 1990},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {136--150},
    priority = {2},
    title = {A type system for Smalltalk},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/96709.96722},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96722},
    year = {1990}
}



@inproceedings{dvanhorn:johnson-etal-oopsla88,
    author = {Johnson, Ralph E. and Graver, Justin O. and Zurawski, Laurance W.},
    booktitle = {OOPSLA '88: Conference proceedings on Object-oriented programming systems, languages and applications},
    citeulike-article-id = {5395147},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/62083.62086},
    date-added = {2009-08-07 21:29:28},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, United States},
    pages = {18--26},
    priority = {2},
    title = {{TS}: An optimizing compiler for {S}malltalk},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/62083.62086},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/62083.62086},
    year = {1988}
}

@inproceedings{dvanhorn:chambers-ungar-pldi90,
    author = {Chambers, Craig and Ungar, David},
    booktitle = {PLDI '90: Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation},
    citeulike-article-id = {5395145},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/93542.93562},
    date-added = {2009-08-07 21:29:28},
    keywords = {file-import-09-08-07},
    location = {White Plains, New York, United States},
    pages = {150--164},
    priority = {2},
    title = {Interactive type analysis and extended message splitting; optimizing dynamically-typed object-oriented programs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/93542.93562},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/93542.93562},
    year = {1990}
}



@article{dvanhorn:spoto-jensen-toplas03,
    author = {Spoto, Fausto and Jensen, Thomas},
    citeulike-article-id = {5395144},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/937563.937565},
    date-added = {2009-08-07 21:29:27},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {5},
    pages = {578--630},
    priority = {2},
    title = {Class analyses as abstract interpretations of trace semantics},
    volume = {25},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/937563.937565},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/937563.937565},
    year = {2003}
}



@inproceedings{dvanhorn:jagannathan-wright-pldi96,
    author = {Jagannathan, Suresh and Wright, Andrew},
    booktitle = {PLDI '96: Proceedings of the ACM SIGPLAN 1996 conference on Programming language design and implementation},
    citeulike-article-id = {5395143},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/231379.231417},
    date-added = {2009-08-07 21:29:27},
    keywords = {file-import-09-08-07},
    location = {Philadelphia, Pennsylvania, United States},
    pages = {193--205},
    priority = {2},
    title = {Flow-directed inlining},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/231379.231417},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/231379.231417},
    year = {1996}
}



@inproceedings{dvanhorn:palsberg-schwartzbach-oopsla91,
    author = {Palsberg, Jens and Schwartzbach, Michael I.},
    booktitle = {OOPSLA '91: Conference proceedings on Object-oriented programming systems, languages, and applications},
    citeulike-article-id = {5395142},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/117954.117965},
    date-added = {2009-08-07 21:29:27},
    keywords = {file-import-09-08-07},
    location = {Phoenix, Arizona, United States},
    pages = {146--161},
    priority = {2},
    title = {Object-oriented type inference},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/117954.117965},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/117954.117965},
    year = {1991}
}



@article{dvanhorn:chakaravarthy-horwitz-ai02,
    author = {Chakaravarthy, Venkatesan T. and Horwitz, Susan},
    citeulike-article-id = {5395141},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1007/s00236-002-0081-8},
    date-added = {2009-08-07 21:29:27},
    journal = {Acta Informatica},
    keywords = {file-import-09-08-07},
    month = {July},
    number = {8},
    pages = {587--598},
    priority = {2},
    title = {On the Non-Approximability of Points-to Analysis},
    volume = {38},
    x-doi = {http://dx.doi.org/10.1007/s00236-002-0081-8},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1007/s00236-002-0081-8},
    year = {2002}
}



@inproceedings{dvanhorn:vitek-etal-cc92,
    author = {Vitek, Jan and Horspool, R. Nigel and Uhl, James S.},
    booktitle = {CC '92: Proceedings of the 4th International Conference on Compiler Construction},
    citeulike-article-id = {5395140},
    date-added = {2009-08-07 21:29:27},
    keywords = {file-import-09-08-07},
    pages = {236--250},
    priority = {2},
    title = {Compile-Time Analysis of Object-Oriented Programs},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1992}
}



@inproceedings{dvanhorn:oxhoj-etal-ecoop92,
    author = {{J}, Nicholas {.} and Palsberg, Jens and Schwartzbach, Michael I.},
    booktitle = {ECOOP '92: Proceedings of the European Conference on Object-Oriented Programming},
    citeulike-article-id = {5395139},
    date-added = {2009-08-07 21:29:27},
    keywords = {file-import-09-08-07},
    pages = {329--349},
    priority = {2},
    title = {Making Type Inference Practical},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1992}
}



@phdthesis{dvanhorn:hofmann-hab98,
    author = {Hofmann, Martin},
    citeulike-article-id = {5395138},
    comment = {Habilitation Thesis},
    date-added = {2009-08-07 21:29:27},
    keywords = {file-import-09-08-07},
    priority = {2},
    school = {TU Darmstadt},
    title = {Type Systems for Polynomial-Time Computation},
    year = {1998}
}



@article{dvanhorn:kristiansen-tcs04,
    author = {Kristiansen, L. and Niggl, K. H.},
    citeulike-article-id = {5395137},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/j.tcs.2003.10.016},
    date-added = {2009-08-07 21:29:27},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    number = {1-2},
    pages = {139--161},
    priority = {2},
    title = {On the computational complexity of imperative programming languages},
    volume = {318},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/j.tcs.2003.10.016},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/j.tcs.2003.10.016},
    year = {2004}
}



@inproceedings{dvanhorn:leivant-popl93,
    author = {Leivant, Daniel},
    booktitle = {POPL '93: Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395136},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/158511.158659},
    date-added = {2009-08-07 21:29:27},
    key = {POPL 1993},
    keywords = {file-import-09-08-07},
    location = {Charleston, South Carolina, United States},
    pages = {325--333},
    priority = {2},
    title = {Stratified functional programs and computational complexity},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/158511.158659},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/158511.158659},
    year = {1993}
}



@article{dvanhorn:hofmann-ic03,
    author = {Hofmann, Martin},
    citeulike-article-id = {5395135},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/S0890-5401(03)00009-9},
    date-added = {2009-08-07 21:29:27},
    journal = {Inf. Comput.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {57--85},
    priority = {2},
    title = {Linear types and non-size-increasing polynomial time computation},
    volume = {183},
    x-address = {Duluth, MN, USA},
    x-doi = {http://dx.doi.org/10.1016/S0890-5401(03)00009-9},
    x-publisher = {Academic Press, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/S0890-5401(03)00009-9},
    year = {2003}
}



@article{dvanhorn:wells-etal-jfp02,
    author = {Wells, J. B. and Dimock, Allyn and Muller, Robert and Turbak, Franklyn},
    citeulike-article-id = {5395134},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796801004245},
    date-added = {2009-08-07 21:29:26},
    journal = {J. Funct. Program.},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {183--227},
    priority = {2},
    title = {A calculus with polymorphic and polyvariant flow types},
    volume = {12},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0956796801004245},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796801004245},
    year = {2002}
}



@inproceedings{dvanhorn:amtoft-turbak-esop00,
    author = {Amtoft, Torben and Turbak, Franklyn A.},
    booktitle = {ESOP '00: Proceedings of the 9th European Symposium on Programming Languages and Systems},
    citeulike-article-id = {5395133},
    date-added = {2009-08-07 21:29:26},
    keywords = {file-import-09-08-07},
    pages = {26--40},
    priority = {2},
    title = {Faithful Translations between Polyvariant Flows and Polymorphic Types},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {2000}
}



@inproceedings{dvanhorn:bravenboer-smaragdakis-oopsla09,
    author = {Bravenboer, Martin and Smaragdakis, Yannis},
    booktitle = {OOPSLA '09: Proceedings of the 24th annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
    citeulike-article-id = {5395132},
    comment = {To appear.},
    date-added = {2009-08-07 21:29:26},
    keywords = {file-import-09-08-07},
    month = {October},
    priority = {2},
    title = {Strictly Declarative Specification of Sophisticated Points-to Analyses},
    year = {2009}
}



@article{dvanhorn:damiani-toplas03,
    author = {Damiani, Ferruccio},
    citeulike-article-id = {5395131},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/778559.778560},
    date-added = {2009-08-07 21:29:26},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {401--451},
    priority = {2},
    title = {Rank 2 intersection types for local definitions and conditional expressions},
    volume = {25},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/778559.778560},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/778559.778560},
    year = {2003}
}



@article{dvanhorn:damiani-fi07,
    author = {Damiani, Ferruccio},
    citeulike-article-id = {5395130},
    date-added = {2009-08-07 21:29:26},
    journal = {Fundam. Inf.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {451--488},
    priority = {2},
    title = {Rank 2 Intersection for Recursive Definitions},
    volume = {77},
    x-address = {Amsterdam, The Netherlands, The Netherlands},
    x-publisher = {IOS Press},
    year = {2007}
}



@inproceedings{dvanhorn:damiani-prost-types96,
    author = {Damiani, Ferruccio and Prost, Fr\'{e}d\'{e}ric},
    booktitle = {TYPES '96: Selected papers from the International Workshop on Types for Proofs and Programs},
    citeulike-article-id = {5395129},
    date-added = {2009-08-07 21:29:26},
    keywords = {file-import-09-08-07},
    pages = {66--87},
    priority = {2},
    title = {Detecting and Removing Dead-Code using Rank 2 Intersection},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1998}
}



@article{dvanhorn:vanbakel-tcs92,
    author = {van Bakel, Steffen},
    citeulike-article-id = {5395128},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(92)90297-S},
    date-added = {2009-08-07 21:29:26},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {135--163},
    priority = {2},
    title = {Complete restrictions of the intersection type discipline},
    volume = {102},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/0304-3975(92)90297-S},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(92)90297-S},
    year = {1992}
}



@article{dvanhorn:zwick-alg06,
    author = {Zwick, Uri},
    citeulike-article-id = {5395127},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1007/s00453-005-1199-1},
    date-added = {2009-08-07 21:29:26},
    journal = {Algorithmica},
    keywords = {file-import-09-08-07},
    number = {2},
    pages = {181--192},
    priority = {2},
    title = {A Slightly Improved Sub-Cubic Algorithm for the All Pairs Shortest Paths Problem with Real Edge Lengths},
    volume = {46},
    x-address = {Secaucus, NJ, USA},
    x-doi = {http://dx.doi.org/10.1007/s00453-005-1199-1},
    x-publisher = {Springer-Verlag New York, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1007/s00453-005-1199-1},
    year = {2006}
}



@inproceedings{dvanhorn:chan-stoc07,
    author = {Chan, Timothy M.},
    booktitle = {STOC '07: Proceedings of the thirty-ninth annual ACM symposium on Theory of computing},
    citeulike-article-id = {5395126},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1250790.1250877},
    date-added = {2009-08-07 21:29:26},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, USA},
    pages = {590--598},
    priority = {2},
    title = {More algorithms for all-pairs shortest paths in weighted graphs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1250790.1250877},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1250790.1250877},
    year = {2007}
}



@article{dvanhorn:vassilevska-ipl09,
    author = {Vassilevska, Virginia},
    citeulike-article-id = {5395125},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/j.ipl.2008.10.014},
    date-added = {2009-08-07 21:29:26},
    journal = {Inf. Process. Lett.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {254--257},
    priority = {2},
    title = {Efficient algorithms for clique problems},
    volume = {109},
    x-address = {Amsterdam, The Netherlands, The Netherlands},
    x-doi = {http://dx.doi.org/10.1016/j.ipl.2008.10.014},
    x-publisher = {Elsevier North-Holland, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/j.ipl.2008.10.014},
    year = {2009}
}



@techreport{dvanhorn:basch-etal-95,
    author = {Basch, Julien and Khanna, Sanjeev and Motwani, Rajeev},
    citeulike-article-id = {5395124},
    date-added = {2009-08-07 21:29:25},
    institution = {Stanford University},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {On diameter verification and boolean matrix multiplication},
    x-address = {Stanford, CA, USA},
    year = {1995}
}



@article{dvanhorn:rytter-ic85,
    author = {Rytter, Wojciech},
    citeulike-article-id = {5395123},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/S0019-9958(85)80024-3},
    date-added = {2009-08-07 21:29:25},
    journal = {Inf. Control},
    keywords = {file-import-09-08-07},
    number = {1-3},
    pages = {12--22},
    priority = {2},
    title = {Fast recognition of pushdown automaton and context-free languages},
    volume = {67},
    x-address = {San Diego, CA, USA},
    x-doi = {http://dx.doi.org/10.1016/S0019-9958(85)80024-3},
    x-publisher = {Academic Press Professional, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/S0019-9958(85)80024-3},
    year = {1985}
}



@article{dvanhorn:aho-hopcroft-ullman-ic68,
    author = {Aho, Alfred V. and Hopcroft, John E. and Ullmana, Jeffrey D.},
    citeulike-article-id = {5395122},
    date-added = {2009-08-07 21:29:25},
    journal = {Information and Control},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {186--206},
    priority = {2},
    title = {Time and Tape Complexity of Pushdown Automaton Languages},
    volume = {13},
    year = {1968}
}



@misc{dvanhorn:neal-89,
    author = {Neal, Radford},
    citeulike-article-id = {5395121},
    comment = {Unpublished manuscript. \url{ftp://ftp.cs.utoronto.ca/pub/radford/taxc.ps}},
    date-added = {2009-08-07 21:29:25},
    keywords = {file-import-09-08-07},
    month = {December},
    priority = {2},
    title = {The computational complexity of taxonomic inference},
    year = {1989}
}



@book{dvanhorn:martin-97,
    author = {Martin, John C.},
    citeulike-article-id = {5395120},
    date-added = {2009-08-07 21:29:25},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Introduction to Languages and the Theory of Computation},
    x-publisher = {McGraw-Hill Higher Education},
    year = {1997}
}



@inproceedings{dvanhorn:lee-etal-popl01,
    author = {Lee, Chin S. and Jones, Neil D. and Ben Amram, Amir M.},
    booktitle = {POPL '01: Proceedings of the 28th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395119},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/360204.360210},
    date-added = {2009-08-07 21:29:25},
    keywords = {file-import-09-08-07},
    location = {London, United Kingdom},
    pages = {81--92},
    priority = {2},
    title = {The size-change principle for program termination},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/360204.360210},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/360204.360210},
    year = {2001}
}



@article{dvanhorn:palsberg-wand-jfp03,
    author = {Palsberg, Jens and Wand, Mitchell},
    citeulike-article-id = {5395118},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796802004513},
    date-added = {2009-08-07 21:29:25},
    journal = {J. Funct. Program.},
    keywords = {file-import-09-08-07},
    number = {5},
    pages = {905--923},
    priority = {2},
    title = {{CPS} transformation of flow information},
    volume = {13},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0956796802004513},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796802004513},
    year = {2003}
}



@inproceedings{dvanhorn:wand-williamson-esop02,
    author = {Wand, Mitchell and Williamson, Galen B.},
    booktitle = {ESOP '02: Proceedings of the 11th European Symposium on Programming Languages and Systems},
    citeulike-article-id = {5395117},
    date-added = {2009-08-07 21:29:25},
    keywords = {file-import-09-08-07},
    pages = {213--227},
    priority = {2},
    title = {A Modular, Extensible Proof Method for Small-Step Flow Analyses},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {2002}
}



@article{dvanhorn:meunier-etal-hosc05,
    author = {Meunier, Philippe and Findler, Robert B. and Steckler, Paul and Wand, Mitchell},
    citeulike-article-id = {5395116},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1007/s10990-005-4876-5},
    date-added = {2009-08-07 21:29:25},
    journal = {Higher Order Symbol. Comput.},
    keywords = {file-import-09-08-07},
    number = {3-4},
    pages = {245--269},
    priority = {2},
    title = {Selectors Make Set-Based Analysis Too Hard},
    volume = {18},
    x-address = {Hingham, MA, USA},
    x-doi = {http://dx.doi.org/10.1007/s10990-005-4876-5},
    x-publisher = {Kluwer Academic Publishers},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1007/s10990-005-4876-5},
    year = {2005}
}



@article{dvanhorn:montenyohl-wand-scp91,
    author = {Montenyohl, Margaret and Wand, Mitchell},
    citeulike-article-id = {5395115},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0167-6423(91)90021-O},
    date-added = {2009-08-07 21:29:25},
    journal = {Sci. Comput. Program.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {1--18},
    priority = {2},
    title = {Correctness of static flow analysis in continuation semantics},
    volume = {16},
    x-address = {Amsterdam, The Netherlands, The Netherlands},
    x-doi = {http://dx.doi.org/10.1016/0167-6423(91)90021-O},
    x-publisher = {Elsevier North-Holland, Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0167-6423(91)90021-O},
    year = {1991}
}



@article{dvanhorn:steckler-wand-toplas97,
    author = {Steckler, Paul A. and Wand, Mitchell},
    citeulike-article-id = {5395114},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/239912.239915},
    date-added = {2009-08-07 21:29:25},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {48--86},
    priority = {2},
    title = {Lightweight closure conversion},
    volume = {19},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/239912.239915},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/239912.239915},
    year = {1997}
}



@misc{dvanhorn:wand-02,
    author = {Wand, Mitchell},
    citeulike-article-id = {5395113},
    comment = {Unpublished manuscript. \url{ftp://ftp.ccs.neu.edu/pub/people/wand/papers/order-sensitive-cfa.ps}},
    date-added = {2009-08-07 21:29:25},
    keywords = {file-import-09-08-07},
    month = {July},
    priority = {2},
    title = {Analyses that distinguish different evaluation orders, or, unsoundness results in control-flow analysis},
    year = {2002}
}



@inproceedings{dvanhorn:popl08,
    citeulike-article-id = {5395112},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 2008},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, USA},
    priority = {2},
    title = {Proceedings of the 35th annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {2008}
}



@inproceedings{dvanhorn:popl98,
    citeulike-article-id = {5395111},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1998},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, United States},
    priority = {2},
    title = {Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1998}
}



@inproceedings{dvanhorn:popl97,
    citeulike-article-id = {5395110},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1997},
    keywords = {file-import-09-08-07},
    location = {Paris, France},
    priority = {2},
    title = {Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1997}
}



@inproceedings{dvanhorn:popl95,
    citeulike-article-id = {5395109},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1995},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    priority = {2},
    title = {Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1995}
}



@inproceedings{dvanhorn:popl93,
    citeulike-article-id = {5395108},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1993},
    keywords = {file-import-09-08-07},
    location = {Charleston, South Carolina, United States},
    priority = {2},
    title = {Proceedings of the 20th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1993}
}



@inproceedings{dvanhorn:popl91,
    citeulike-article-id = {5395107},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1991},
    keywords = {file-import-09-08-07},
    location = {Orlando, Florida, United States},
    priority = {2},
    title = {Proceedings of the 18th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1991}
}



@inproceedings{dvanhorn:popl90,
    citeulike-article-id = {5395106},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1990},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    priority = {2},
    title = {Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1990}
}



@inproceedings{dvanhorn:hoang-mitchell-popl95,
    author = {Hoang, My and Mitchell, John C.},
    booktitle = {POPL '95: Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395105},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/199448.199481},
    date-added = {2009-08-07 21:29:25},
    key = {POPL 1995},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {176--185},
    priority = {2},
    title = {Lower bounds on type inference with subtypes},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/199448.199481},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/199448.199481},
    year = {1995}
}



@article{dvanhorn:ben-amram-etal-toplas07,
    author = {Ben Amram, Amir M. and Lee, Chin S.},
    citeulike-article-id = {5395104},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1180475.1180480},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {5},
    priority = {2},
    title = {Program termination analysis in polynomial time},
    volume = {29},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1180475.1180480},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1180475.1180480},
    year = {2007}
}



@inproceedings{dvanhorn:icfp97,
    citeulike-article-id = {5395103},
    date-added = {2009-08-07 21:29:24},
    editor = {Berman, A. Michael},
    keywords = {file-import-09-08-07},
    location = {Amsterdam, The Netherlands},
    priority = {2},
    title = {ICFP '97: Proceedings of the second ACM SIGPLAN international conference on Functional programming},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {1997}
}



@inproceedings{dvanhorn:tobin-hochstadt-felleisen-popl08,
    author = {Hochstadt, Sam T. and Felleisen, Matthias},
    booktitle = {POPL '08: Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395102},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1328438.1328486},
    date-added = {2009-08-07 21:29:24},
    key = {POPL 2008},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, USA},
    pages = {395--406},
    priority = {2},
    title = {The design and implementation of {T}yped {S}cheme},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1328438.1328486},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1328438.1328486},
    year = {2008}
}



@article{dvanhorn:damian-danvy-jfp03,
    author = {Damian, Daniel and Danvy, Olivier},
    citeulike-article-id = {5395101},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796803004702},
    date-added = {2009-08-07 21:29:24},
    journal = {J. Funct. Program.},
    keywords = {file-import-09-08-07},
    number = {5},
    pages = {925--933},
    priority = {2},
    title = {{CPS} transformation of flow information, {P}art {II}: administrative reductions},
    volume = {13},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0956796803004702},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796803004702},
    year = {2003}
}

@article{dvanhorn:grove-chambers-toplas01,
    author = {Grove, David and Chambers, Craig},
    citeulike-article-id = {5395099},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/506315.506316},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {6},
    pages = {685--746},
    priority = {2},
    title = {A framework for call graph construction algorithms},
    volume = {23},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/506315.506316},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/506315.506316},
    year = {2001}
}



@article{dvanhorn:milanova-etal-tosem05,
    author = {Milanova, Ana and Rountev, Atanas and Ryder, Barbara G.},
    citeulike-article-id = {5395098},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1044834.1044835},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Trans. Softw. Eng. Methodol.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {1--41},
    priority = {2},
    title = {Parameterized object sensitivity for points-to analysis for {J}ava},
    volume = {14},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1044834.1044835},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1044834.1044835},
    year = {2005}
}



@article{dvanhorn:rinetzky-etal-toplas08,
    author = {Rinetzky, N. and Ramalingam, G. and Sagiv, M. and Yahav, E.},
    citeulike-article-id = {5395097},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1353445.1353447},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {1--28},
    priority = {2},
    title = {On the complexity of partially-flow-sensitive alias analysis},
    volume = {30},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1353445.1353447},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1353445.1353447},
    year = {2008}
}



@inproceedings{dvanhorn:wilson-lam-pldi95,
    author = {Wilson, Robert P. and Lam, Monica S.},
    booktitle = {PLDI '95: Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation},
    citeulike-article-id = {5395095},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/207110.207111},
    date-added = {2009-08-07 21:29:24},
    keywords = {file-import-09-08-07},
    location = {La Jolla, California, United States},
    pages = {1--12},
    priority = {2},
    title = {Efficient context-sensitive pointer analysis for {C} programs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/207110.207111},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/207110.207111},
    year = {1995}
}



@phdthesis{dvanhorn:landi-phd92,
    author = {Landi, William},
    citeulike-article-id = {5395094},
    date-added = {2009-08-07 21:29:24},
    keywords = {file-import-09-08-07},
    priority = {2},
    school = {Rutgers University},
    title = {Interprocedural Aliasing in the Presence of Pointers},
    year = {1992}
}



@inproceedings{dvanhorn:choi-etal-popl93,
    author = {Choi, Jong D. and Burke, Michael and Carini, Paul},
    booktitle = {POPL '93: Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395093},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/158511.158639},
    date-added = {2009-08-07 21:29:24},
    key = {POPL 1993},
    keywords = {file-import-09-08-07},
    location = {Charleston, South Carolina, United States},
    pages = {232--245},
    priority = {2},
    title = {Efficient flow-sensitive interprocedural computation of pointer-induced aliases and side effects},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/158511.158639},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/158511.158639},
    year = {1993}
}



@article{dvanhorn:ramalingam-toplas94,
    author = {Ramalingam, G.},
    citeulike-article-id = {5395092},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/186025.186041},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {5},
    pages = {1467--1471},
    priority = {2},
    title = {The undecidability of aliasing},
    volume = {16},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/186025.186041},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/186025.186041},
    year = {1994}
}



@inproceedings{dvanhorn:chakaravarthy-popl03,
    author = {Chakaravarthy, Venkatesan T.},
    booktitle = {POPL '03: Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395091},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/604131.604142},
    date-added = {2009-08-07 21:29:24},
    keywords = {file-import-09-08-07},
    location = {New Orleans, Louisiana, USA},
    pages = {115--125},
    priority = {2},
    title = {New results on the computability and complexity of points--to analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/604131.604142},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/604131.604142},
    year = {2003}
}



@inproceedings{dvanhorn:meyers-popl81,
    author = {Myers, Eugene M.},
    booktitle = {POPL '81: Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395090},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/567532.567556},
    date-added = {2009-08-07 21:29:24},
    keywords = {file-import-09-08-07},
    location = {Williamsburg, Virginia},
    pages = {219--230},
    priority = {2},
    title = {A precise inter-procedural data flow algorithm},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/567532.567556},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/567532.567556},
    year = {1981}
}



@article{dvanhorn:landi-loplas92,
    author = {Landi, William},
    citeulike-article-id = {5395089},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/161494.161501},
    date-added = {2009-08-07 21:29:24},
    journal = {ACM Lett. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {323--337},
    priority = {2},
    title = {Undecidability of static analysis},
    volume = {1},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/161494.161501},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/161494.161501},
    year = {1992}
}



@inproceedings{dvanhorn:defouw-etal-popl98,
    author = {Defouw, Greg and Grove, David and Chambers, Craig},
    booktitle = {POPL '98: Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395088},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268965},
    date-added = {2009-08-07 21:29:23},
    key = {POPL 1998},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, United States},
    pages = {222--236},
    priority = {2},
    title = {Fast interprocedural class analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/268946.268965},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268965},
    year = {1998}
}



@article{dvanhorn:chaterjee-etal-tse01,
    author = {Chatterjee, Ramkrishna and Ryder, Barbara G. and Landi, William A.},
    citeulike-article-id = {5395087},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1109/32.926173},
    date-added = {2009-08-07 21:29:23},
    journal = {IEEE Trans. Softw. Eng.},
    keywords = {file-import-09-08-07},
    number = {6},
    pages = {481--512},
    priority = {2},
    title = {Complexity of Points-To Analysis of {J}ava in the Presence of Exceptions},
    volume = {27},
    x-address = {Piscataway, NJ, USA},
    x-doi = {http://dx.doi.org/10.1109/32.926173},
    x-publisher = {IEEE Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1109/32.926173},
    year = {2001}
}



@article{dvanhorn:jones-bohr-lmcs08,
    author = {Jones, Neil D. and Bohr, Nina},
    citeulike-article-id = {5395086},
    date-added = {2009-08-07 21:29:23},
    journal = {Logical Methods in Computer Science},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {1--39},
    priority = {2},
    title = {Call-by-value Termination in the Untyped \$\\lambda\$-calculus},
    volume = {4},
    year = {2008}
}



@article{dvanhorn:mcallester-jacm02,
    author = {Mcallester, David},
    citeulike-article-id = {5395085},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/581771.581774},
    date-added = {2009-08-07 21:29:23},
    journal = {J. ACM},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {512--537},
    priority = {2},
    title = {On the complexity analysis of static analyses},
    volume = {49},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/581771.581774},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/581771.581774},
    year = {2002}
}



@techreport{dvanhorn:midtgaard-vanhorn-tr09,
    author = {Midtgaard, Jan and {Horn}, David {.}},
    citeulike-article-id = {5395084},
    date-added = {2009-08-07 21:29:23},
    institution = {Roskilde University, Denmark},
    keywords = {file-import-09-08-07},
    month = {May},
    number = {125},
    priority = {2},
    title = {Subcubic Control Flow Analysis Algorithms},
    year = {2009}
}



@inproceedings{dvanhorn:landi-ryder-popl91,
    author = {Landi, William and Ryder, Barbara G.},
    booktitle = {POPL '91: Proceedings of the 18th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395083},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/99583.99599},
    date-added = {2009-08-07 21:29:23},
    key = {POPL 1991},
    keywords = {file-import-09-08-07},
    location = {Orlando, Florida, United States},
    pages = {93--103},
    priority = {2},
    title = {Pointer-induced aliasing: a problem taxonomy},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/99583.99599},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/99583.99599},
    year = {1991}
}

@book{dvanhorn:pldi-best04,
    citeulike-article-id = {5395081},
    date-added = {2009-08-07 21:29:23},
    editor = {Mckinley, Kathryn S.},
    keywords = {file-import-09-08-07},
    number = {4},
    priority = {2},
    title = {SIGPLAN Not., Special Issue: 20 Years of PLDI (1979 - 1999): A Selection},
    volume = {39},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {2004}
}



@inproceedings{dvanhorn:henglein-fplca91,
    author = {Henglein, Fritz},
    booktitle = {Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture},
    citeulike-article-id = {5395079},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    pages = {448--472},
    priority = {2},
    title = {Efficient Type Inference for Higher-Order Binding-Time Analysis},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1991}
}







@inproceedings{dvanhorn:steensgaard-popl96,
    author = {Steensgaard, Bjarne},
    booktitle = {POPL '96: Proceedings of the 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5395077},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/237721.237727},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    location = {St. Petersburg Beach, Florida, United States},
    pages = {32--41},
    priority = {2},
    title = {Points-to analysis in almost linear time},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/237721.237727},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/237721.237727},
    year = {1996}
}

@inproceedings{dvanhorn:landi-ryder-pldi92,
    author = {Landi, William and Ryder, Barbara G.},
    booktitle = {PLDI '92: Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation},
    citeulike-article-id = {5395075},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/143095.143137},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {235--248},
    priority = {2},
    title = {A safe approximate algorithm for interprocedural aliasing},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/143095.143137},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/143095.143137},
    year = {1992}
}



@inproceedings{dvanhorn:muth-debray-popl00,
    author = {Muth, Robert and Debray, Saumya},
    booktitle = {POPL '00: Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395074},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/325694.325704},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    location = {Boston, MA, USA},
    pages = {67--80},
    priority = {2},
    title = {On the complexity of flow-sensitive dataflow analyses},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/325694.325704},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/325694.325704},
    year = {2000}
}



@inproceedings{dvanhorn:ullman-allen-sfcs86,
    author = {Ullman, Jeffrey D. and {Gelder}, Allen {.}},
    booktitle = {SFCS '86: Proceedings of the 27th Annual Symposium on Foundations of Computer Science (sfcs 1986)},
    citeulike-article-id = {5395073},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1109/SFCS.1986.40},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    pages = {438--454},
    priority = {2},
    title = {Parallel complexity of logical query programs},
    x-address = {Washington, DC, USA},
    x-doi = {http://dx.doi.org/10.1109/SFCS.1986.40},
    x-publisher = {IEEE Computer Society},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1109/SFCS.1986.40},
    year = {1986}
}



@inproceedings{dvanhorn:tiuryn-mfcs90,
    author = {Tiuryn, Jerzy},
    booktitle = {MFCS '90: Proceedings on Mathematical foundations of computer science 1990},
    citeulike-article-id = {5395072},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    location = {Banska\\'{} Bystrica, Czechoslovakia},
    pages = {105--120},
    priority = {2},
    title = {Type inference problems: a survey},
    x-address = {New York, NY, USA},
    x-publisher = {Springer-Verlag New York, Inc.},
    year = {1990}
}



@article{dvanhorn:curry-dialectica69,
    author = {Curry, Haskell B.},
    citeulike-article-id = {5395071},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1111/j.1746-8361.1969.tb01183.x},
    date-added = {2009-08-07 21:29:23},
    journal = {Dialectica},
    keywords = {file-import-09-08-07},
    number = {2},
    pages = {83--92},
    priority = {2},
    title = {Modified basic functionality in combinatory logic},
    volume = {23},
    x-doi = {http://dx.doi.org/10.1111/j.1746-8361.1969.tb01183.x},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1111/j.1746-8361.1969.tb01183.x},
    year = {1969}
}



@inproceedings{dvanhorn:kfoury-etal-icfp99,
    author = {Kfoury, Assaf J. and Mairson, Harry G. and Turbak, Franklyn A. and Wells, J. B.},
    booktitle = {ICFP '99: Proceedings of the fourth ACM SIGPLAN international conference on Functional programming},
    citeulike-article-id = {5395070},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/317636.317788},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    location = {Paris, France},
    pages = {90--101},
    priority = {2},
    title = {Relating typability and expressiveness in finite-rank intersection type systems (extended abstract)},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/317636.317788},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/317636.317788},
    year = {1999}
}



@article{dvanhorn:hindley-tcs89,
    author = {Hindley, J. Roger},
    citeulike-article-id = {5395069},
    date-added = {2009-08-07 21:29:23},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    pages = {97--105},
    priority = {2},
    title = {{BCK}-combinators and linear \$\\lambda\$-terms have types},
    volume = {64},
    year = {1989}
}



@inproceedings{dvanhorn:hirokawa-tacs91,
    author = {Hirokawa, Sachio},
    booktitle = {TACS '91: Proceedings of the International Conference on Theoretical Aspects of Computer Software},
    citeulike-article-id = {5395068},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    pages = {633--650},
    priority = {2},
    title = {Principal Type-Schemes of {BCI}-Lambda-Terms},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1991}
}



@inproceedings{dvanhorn:kanellakis-etal-robinson,
    author = {Kanellakis, Paris C. and Mairson, Harry G. and Mitchell, John C.},
    booktitle = {Computational Logic: Essays in Honor of Alan Robinson},
    citeulike-article-id = {5395067},
    date-added = {2009-08-07 21:29:23},
    keywords = {file-import-09-08-07},
    pages = {444--478},
    priority = {2},
    title = {Unification and {ML}-Type Reconstruction},
    x-publisher = {MIT Press},
    year = {1991}
}



@inproceedings{dvanhorn:barendregt-volb,
    author = {Barendregt, Henk P.},
    citeulike-article-id = {5395066},
    date-added = {2009-08-07 21:29:22},
    editor = {van Leeuwen, J.},
    keywords = {file-import-09-08-07},
    pages = {321--363},
    priority = {2},
    title = {Functional programming and lambda calculus},
    x-address = {Cambridge, MA, USA},
    x-publisher = {MIT Press},
    year = {1990}
}



@book{dvanhorn:volb,
    citeulike-article-id = {5395065},
    date-added = {2009-08-07 21:29:22},
    editor = {van Leeuwen, J.},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Handbook of Theoretical Computer Science (Vol. B): Formal Models and Semantics},
    x-address = {Cambridge, MA, USA},
    x-publisher = {MIT Press},
    year = {1990}
}



@inproceedings{dvanhorn:mitchell-volb,
    author = {Mitchell, John C.},
    citeulike-article-id = {5395064},
    date-added = {2009-08-07 21:29:22},
    editor = {van Leeuwen, J.},
    keywords = {file-import-09-08-07},
    pages = {365--458},
    priority = {2},
    title = {Type systems for programming languages},
    x-address = {Cambridge, MA, USA},
    x-publisher = {MIT Press},
    year = {1990}
}



@book{dvanhorn:garey-johnson,
    author = {Garey, Michael R. and Johnson, David S.},
    citeulike-article-id = {5395063},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Computers and Intractability: A Guide to the Theory of {NP}-Completeness},
    x-address = {New York, NY, USA},
    x-publisher = {W. H. Freeman \& Co.},
    year = {1979}
}



@book{dvanhorn:paulson,
    author = {Paulson, Lawrence C.},
    citeulike-article-id = {5395062},
    date-added = {2009-08-07 21:29:22},
    edition = {Second},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {ML for the Working Programmer},
    x-publisher = {Cambridge University Press},
    year = {1996}
}



@inproceedings{dvanhorn:jagannathan-etal-popl98,
    author = {Jagannathan, Suresh and Thiemann, Peter and Weeks, Stephen and Wright, Andrew},
    booktitle = {POPL '98: Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395061},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268973},
    date-added = {2009-08-07 21:29:22},
    key = {POPL 1998},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, United States},
    pages = {329--341},
    priority = {2},
    title = {Single and loving it: must-alias analysis for higher-order languages},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/268946.268973},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268973},
    year = {1998}
}



@techreport{dvanhorn:cardone-hindley-06,
    author = {Cardone, Felice and Hindley, J. Roger},
    citeulike-article-id = {5395060},
    comment = {To appear in {\em Handbook of the History of Logic, Volume 5}, D. M. Gabbay and J. Woods, editors.},
    date-added = {2009-08-07 21:29:22},
    institution = {Swansea University Mathematics Department Research Report},
    keywords = {file-import-09-08-07},
    number = {MRRS-05-06},
    priority = {2},
    title = {History of Lambda-calculus and Combinatory Logic},
    year = {2006}
}



@article{dvanhorn:hindley-ams69,
    author = {Hindley, J. Roger},
    citeulike-article-id = {5395059},
    date-added = {2009-08-07 21:29:22},
    journal = {Transactions of the American Mathematical Society},
    keywords = {file-import-09-08-07},
    month = {December},
    pages = {29--60},
    priority = {2},
    title = {The Principal Type-Scheme of an Object in Combinatory Logic},
    year = {1969}
}



@book{dvanhorn:jones97,
    author = {Jones, Neil D.},
    citeulike-article-id = {5395058},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Computability and Complexity: From a Programming Perspective},
    x-address = {Cambridge, MA, USA},
    x-publisher = {MIT Press},
    year = {1997}
}



@inproceedings{dvanhorn:kanellakis-mitchell-popl89,
    author = {Kanellakis, P. C. and Mitchell, J. C.},
    booktitle = {POPL '89: Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395057},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/75277.75286},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    location = {Austin, Texas, United States},
    pages = {105--115},
    priority = {2},
    title = {Polymorphic unification and {ML} typing},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/75277.75286},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/75277.75286},
    year = {1989}
}



@article{dvanhorn:melski-reps00,
    author = {Melski, David and Reps, Thomas},
    citeulike-article-id = {5395056},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/S0304-3975(00)00049-9},
    date-added = {2009-08-07 21:29:22},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    number = {1-2},
    pages = {29--98},
    priority = {2},
    title = {Interconvertibility of a class of set constraints and context-free-language reachability},
    volume = {248},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/S0304-3975(00)00049-9},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/S0304-3975(00)00049-9},
    year = {2000}
}



@article{dvanhorn:urzyczyn-mscs97,
    author = {Urzyczyn, Pawe{l}},
    citeulike-article-id = {5395055},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129597002302},
    date-added = {2009-08-07 21:29:22},
    journal = {Mathematical. Structures in Comp. Sci.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {329--358},
    priority = {2},
    title = {Type reconstruction in {F\$\_\\omega\$}},
    volume = {7},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0960129597002302},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129597002302},
    year = {1997}
}



@inproceedings{dvanhorn:reynolds-pcp74,
    author = {Reynolds, John C.},
    booktitle = {Programming Symposium, Proceedings Colloque sur la Programmation},
    citeulike-article-id = {5395054},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    pages = {408--423},
    priority = {2},
    title = {Towards a theory of type structure},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1974}
}



@inproceedings{dvanhorn:boehm-sfcs85,
    author = {Boehm, Hans J.},
    booktitle = {SFCS '85: Proceedings of the 26th Annual Symposium on Foundations of Computer Science (sfcs 1985)},
    citeulike-article-id = {5395053},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1109/SFCS.1985.44},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    pages = {339--345},
    priority = {2},
    title = {Partial polymorphic type inference is undecidable},
    x-address = {Washington, DC, USA},
    x-doi = {http://dx.doi.org/10.1109/SFCS.1985.44},
    x-publisher = {IEEE Computer Society},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1109/SFCS.1985.44},
    year = {1985}
}



@article{dvanhorn:wand-fi87,
    author = {Wand, Mitchell},
    citeulike-article-id = {5395052},
    date-added = {2009-08-07 21:29:22},
    journal = {Fundam. Inform.},
    keywords = {file-import-09-08-07},
    pages = {115--122},
    priority = {2},
    title = {A simple algorithm and proof for type inference.},
    volume = {10},
    year = {1987}
}



@article{dvanhorn:pfenning-fi93,
    author = {Pfenning, Frank},
    citeulike-article-id = {5395051},
    date-added = {2009-08-07 21:29:22},
    journal = {Fundam. Inf.},
    keywords = {file-import-09-08-07},
    number = {1-2},
    pages = {185--199},
    priority = {2},
    title = {On the undecidability of partial polymorphic type reconstruction},
    volume = {19},
    x-address = {Amsterdam, The Netherlands, The Netherlands},
    x-publisher = {IOS Press},
    year = {1993}
}



@inproceedings{dvanhorn:leivant-popl83,
    author = {Leivant, Daniel},
    booktitle = {POPL '83: Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
    citeulike-article-id = {5395050},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/567067.567077},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    location = {Austin, Texas},
    pages = {88--98},
    priority = {2},
    title = {Polymorphic type inference},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/567067.567077},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/567067.567077},
    year = {1983}
}



@inbook{dvanhorn:herbrand,
    author = {Herbrand, Jacques},
    citeulike-article-id = {5395049},
    comment = {Chapter 5 of Herbrand's PhD, {\it Recherches sur la th\'{e}orie de la de\'{e}monstration}},
    date-added = {2009-08-07 21:29:22},
    editor = {{Heijenoort}, Jean {.}},
    keywords = {file-import-09-08-07},
    pages = {525--581},
    priority = {2},
    title = {Investigations in proof theory: The properties of true propositions},
    x-publisher = {Harvard University Press},
    year = {1930}
}



@book{dvanhorn:frege-to-godel,
    citeulike-article-id = {5395048},
    date-added = {2009-08-07 21:29:22},
    editor = {{Heijenoort}, Jean {.}},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {From Frege to G\"{o}del: A Source Book in Mathematical Logic, 1879--1931},
    x-publisher = {Harvard University Press},
    year = {1967}
}



@article{dvanhorn:robinson-jacm65,
    author = {Robinson, J. Alan},
    citeulike-article-id = {5395047},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/321250.321253},
    date-added = {2009-08-07 21:29:22},
    journal = {J. ACM},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {23--41},
    priority = {2},
    title = {A Machine-Oriented Logic Based on the Resolution Principle},
    volume = {12},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/321250.321253},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/321250.321253},
    year = {1965}
}



@book{dvanhorn:muchnick-jones-81,
    citeulike-article-id = {5395046},
    date-added = {2009-08-07 21:29:22},
    editor = {Muchnick, Steven S. and Jones, Neil D.},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Program Flow Analysis: Theory and Applications},
    x-publisher = {Prentice Hall},
    year = {1981}
}



@inproceedings{dvanhorn:jones-muchnick-pfa81,
    author = {Jones, Neil D. and Muchnick, Steven S.},
    chapter = {12},
    citeulike-article-id = {5395045},
    date-added = {2009-08-07 21:29:22},
    editor = {Muchnick, Steven S. and Jones, Neil D.},
    keywords = {file-import-09-08-07},
    pages = {380--393},
    priority = {2},
    title = {Complexity of flow analysis, inductive assertion synthesis, and a language due to {Dijkstra}},
    x-publisher = {Prentice Hall},
    year = {1981}
}



@inproceedings{dvanhorn:jones-muchnick-popl79,
    author = {Jones, Neil D. and Muchnick, Steven S.},
    booktitle = {POPL '79: Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
    citeulike-article-id = {5395044},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/567752.567776},
    date-added = {2009-08-07 21:29:22},
    keywords = {file-import-09-08-07},
    location = {San Antonio, Texas},
    pages = {244--256},
    priority = {2},
    title = {Flow analysis and optimization of {LISP}-like structures},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/567752.567776},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/567752.567776},
    year = {1979}
}



@inproceedings{dvanhorn:heintze-mcallester-icfp97,
    author = {Heintze, Nevin and Mcallester, David},
    booktitle = {ICFP '97: Proceedings of the second ACM SIGPLAN international conference on Functional programming},
    citeulike-article-id = {5395043},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/258948.258963},
    date-added = {2009-08-07 21:29:22},
    editor = {Berman, A. Michael},
    keywords = {file-import-09-08-07},
    location = {Amsterdam, The Netherlands},
    pages = {150--163},
    priority = {2},
    title = {On the complexity of set-based analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/258948.258963},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/258948.258963},
    year = {1997}
}



@article{dvanhorn:reps-ai96,
    author = {Reps, Thomas W.},
    citeulike-article-id = {5395042},
    citeulike-linkout-0 = {\#},
    date-added = {2009-08-07 21:29:22},
    journal = {Acta Informatica},
    keywords = {file-import-09-08-07},
    number = {8},
    pages = {739--757},
    priority = {2},
    title = {On the Sequential Nature of Interprocedural Program-Analysis Problems},
    volume = {33},
    x-url = {citeseer.ist.psu.edu/reps95sequential.html},
    year = {1996}
}



@article{dvanhorn:dwork-et-al-jlp84,
    author = {Dwork, Cynthia and Kanellakis, Paris C. and Mitchell, John C.},
    citeulike-article-id = {5395041},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0743-1066(84)90022-0},
    date-added = {2009-08-07 21:29:22},
    journal = {J. Log. Program.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {35--50},
    priority = {2},
    title = {On the sequential nature of unification},
    volume = {1},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1016/0743-1066(84)90022-0},
    x-publisher = {Elsevier Science Inc.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0743-1066(84)90022-0},
    year = {1984}
}



@inproceedings{dvanhorn:DBLP:conf/sas/2008,
    booktitle = {SAS},
    citeulike-article-id = {5395040},
    date-added = {2009-08-07 21:29:22},
    editor = {Alpuente, Mar'{i}a and Vidal, Germ{\'{a}}n},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Static Analysis, 15th International Symposium, SAS 2008, Valencia, Spain, July 16-18, 2008. Proceedings},
    volume = {5079},
    x-publisher = {Springer},
    year = {2008}
}



@inproceedings{dvanhorn:comini-etal-sas08,
    author = {Comini, Marco and Damiani, Ferruccio and Vrech, Samuel},
    booktitle = {SAS},
    citeulike-article-id = {5395039},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1007/978-3-540-69166-2\_10},
    date-added = {2009-08-07 21:29:21},
    editor = {Alpuente, Mar'{i}a and Vidal, Germ{\'{a}}n},
    keywords = {file-import-09-08-07},
    pages = {144--158},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {On Polymorphic Recursion, Type Systems, and Abstract Interpretation},
    volume = {5079},
    x-doi = {http://dx.doi.org/10.1007/978-3-540-69166-2\_10},
    x-publisher = {Springer},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1007/978-3-540-69166-2\_10},
    year = {2008}
}



@inproceedings{dvanhorn:midtgaard-jensen-sas-08,
    author = {Midtgaard, Jan and Jensen, Thomas},
    booktitle = {SAS},
    citeulike-article-id = {5395038},
    date-added = {2009-08-07 21:29:21},
    editor = {Alpuente, Mar'{i}a and Vidal, Germ{\'{a}}n},
    keywords = {file-import-09-08-07},
    pages = {347--362},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {A Calculational Approach to Control-Flow Analysis by Abstract Interpretation},
    volume = {5079},
    x-publisher = {Springer},
    year = {2008}
}



@inproceedings{dvanhorn:blanc-levy-klop-05,
    author = {Blanc, Tomasz and L{\'{e}}vy, Jean J. and Maranget, Luc},
    booktitle = {Processes, Terms and Cycles},
    citeulike-article-id = {5395037},
    date-added = {2009-08-07 21:29:21},
    editor = {Middeldorp, Aart and van Oostrom, Vincent and van Raamsdonk, Femke and de Vrijer, Roel C.},
    keywords = {file-import-09-08-07},
    pages = {70--87},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Sharing in the Weak Lambda-Calculus},
    volume = {3838},
    x-publisher = {Springer},
    year = {2005}
}



@inproceedings{dvanhorn:DBLP:conf/birthday/2005klop,
    booktitle = {Processes, Terms and Cycles},
    citeulike-article-id = {5395036},
    date-added = {2009-08-07 21:29:21},
    editor = {Middeldorp, Aart and van Oostrom, Vincent and van Raamsdonk, Femke and de Vrijer, Roel C.},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Processes, Terms and Cycles: Steps on the Road to Infinity, Essays Dedicated to Jan Willem Klop, on the Occasion of His 60th Birthday},
    volume = {3838},
    x-publisher = {Springer},
    year = {2005}
}



@inproceedings{dvanhorn:kuan-macqueen-ml-07,
    author = {Kuan, George and Macqueen, David},
    booktitle = {ML '07: Proceedings of the 2007 workshop on Workshop on ML},
    citeulike-article-id = {5395035},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1292535.1292538},
    date-added = {2009-08-07 21:29:21},
    keywords = {file-import-09-08-07},
    location = {Freiburg, Germany},
    pages = {3--14},
    priority = {2},
    title = {Efficient type inference using ranked type variables},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1292535.1292538},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1292535.1292538},
    year = {2007}
}



@inproceedings{dvanhorn:chaudhuri-popl08,
    author = {Chaudhuri, Swarat},
    booktitle = {POPL '08: Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395034},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1328438.1328460},
    date-added = {2009-08-07 21:29:21},
    key = {POPL 2008},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, USA},
    pages = {159--169},
    priority = {2},
    title = {Subcubic algorithms for recursive state machines},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1328438.1328460},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1328438.1328460},
    year = {2008}
}



@misc{dvanhorn:henglein-unpub90,
    author = {Henglein, Fritz},
    citeulike-article-id = {5395033},
    comment = {Unpublished manuscript},
    date-added = {2009-08-07 21:29:21},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Type Invariant Simulation: A Lower Bound Technique for Type Inference},
    year = {1990}
}



@article{dvanhorn:landin-64,
    author = {Landin, Peter J.},
    citeulike-article-id = {5395032},
    date-added = {2009-08-07 21:29:21},
    journal = {The Computer Journal},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {308--320},
    priority = {2},
    title = {The mechanical evaluation of expressions},
    volume = {6},
    year = {1964}
}



@book{dvanhorn:hankin-lambda,
    author = {Hankin, Chris},
    citeulike-article-id = {5395031},
    date-added = {2009-08-07 21:29:21},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {An Introduction to Lambda Calculi for Computer Scientists},
    x-publisher = {King's College},
    year = {2004}
}



@phdthesis{dvanhorn:might-phd,
    author = {Might, Matthew},
    citeulike-article-id = {5395030},
    comment = {Adviser-Olin G. Shivers},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    priority = {2},
    school = {Georgia Institute of Technology},
    title = {Environment analysis of higher-order languages},
    x-address = {Atlanta, GA, USA},
    year = {2007}
}



@inproceedings{dvanhorn:might-shivers-popl06,
    author = {Might, Matthew and Shivers, Olin},
    booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
    citeulike-article-id = {5395029},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1111037.1111049},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    location = {Charleston, South Carolina, USA},
    pages = {127--140},
    priority = {2},
    title = {Environment analysis via {\$\\Delta\$}{CFA}},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1111037.1111049},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1111037.1111049},
    year = {2006}
}



@article{dvanhorn:cosmo-etal-mscs03,
    author = {Di Cosmo, Roberto and Kesner, Delia and Polonovski, Emmanuel},
    citeulike-article-id = {5395028},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129502003791},
    date-added = {2009-08-07 21:29:20},
    journal = {Mathematical. Structures in Comp. Sci.},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {409--450},
    priority = {2},
    title = {Proof nets and explicit substitutions},
    volume = {13},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0960129502003791},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129502003791},
    year = {2003}
}



@article{dvanhorn:girard-tcs87,
    author = {Girard, Jean Y.},
    citeulike-article-id = {5395027},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(87)90045-4},
    date-added = {2009-08-07 21:29:20},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {1--102},
    priority = {2},
    title = {Linear logic},
    volume = {50},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/0304-3975(87)90045-4},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(87)90045-4},
    year = {1987}
}



@article{dvanhorn:rice,
    author = {Rice, Henry G.},
    citeulike-article-id = {5395026},
    date-added = {2009-08-07 21:29:20},
    journal = {Trans. Amer. Math. Soc.},
    keywords = {file-import-09-08-07},
    pages = {358--366},
    priority = {2},
    title = {Classes of Recursively Enumerable Sets and Their Decision Problems},
    volume = {74},
    year = {1953}
}



@misc{dvanhorn:pllc,
    author = {Felleisen, Matthias and Flatt, Matthew},
    citeulike-article-id = {5395025},
    comment = {Soon to be published manuscript, in development since 1989},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Programming Languages and Lambda Calculi},
    year = {2009}
}



@book{dvanhorn:barendregt,
    author = {Barendregt, Henk P.},
    citeulike-article-id = {5395024},
    date-added = {2009-08-07 21:29:20},
    edition = {revised},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Studies in Logic and the Foundations of Mathematics},
    title = {The Lambda Calculus: Its Syntax and Semantics},
    volume = {103},
    x-publisher = {North-Holland},
    year = {1984}
}



@book{dvanhorn:eopl1,
    author = {Friedman, Daniel P. and Wand, Mitchell and Haynes, Christopher T.},
    citeulike-article-id = {5395023},
    date-added = {2009-08-07 21:29:20},
    edition = {first},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Essentials of Programming Languages},
    x-publisher = {MIT Press},
    year = {1992}
}



@book{dvanhorn:eopl3,
    author = {Friedman, Daniel P. and Wand, Mitchell},
    citeulike-article-id = {5395022},
    date-added = {2009-08-07 21:29:20},
    edition = {third},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Essentials of Programming Languages},
    x-publisher = {MIT Press},
    year = {2008}
}



@article{dvanhorn:reynolds-hosc98,
    author = {Reynolds, John C.},
    citeulike-article-id = {5395021},
    comment = {Originally published in \cite{reynolds-acm72}.},
    date-added = {2009-08-07 21:29:20},
    journal = {Higher-Order and Symbolic Computation},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {363--397},
    priority = {2},
    title = {Definitional Interpreters for Higher-Order Programming Languages},
    volume = {11},
    year = {1998}
}



@inproceedings{dvanhorn:reynolds-acm72,
    author = {Reynolds, John C.},
    booktitle = {ACM '72: Proceedings of the ACM annual conference},
    citeulike-article-id = {5395020},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/800194.805852},
    comment = {Republished in \cite{reynolds-hosc98}.},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    location = {Boston, Massachusetts, United States},
    pages = {717--740},
    priority = {2},
    title = {Definitional interpreters for higher-order programming languages},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/800194.805852},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/800194.805852},
    year = {1972}
}



@book{dvanhorn:harper-sml,
    author = {Harper, Robert},
    citeulike-article-id = {5395019},
    comment = {Published online only: \url{http://www.cs.cmu.edu/\~{}rwh/smlbook/}, Working draft of December 6, 2007.},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Programming in Standard ML},
    year = {2005}
}



@book{dvanhorn:sitaram-tyscheme,
    author = {Sitaram, Dorai},
    citeulike-article-id = {5395018},
    comment = {Published online: \url{http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html}},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Teach Yourself Scheme in Fixnum Days},
    year = {2004}
}



@book{dvanhorn:dybvig-tspl,
    annote = {Introduction and reference manual for ANSI Standard Scheme with numerous short and extended examples and exercises.},
    author = {Dybvig, R. Kent},
    citeulike-article-id = {5395017},
    comment = {Published online: \url{http://www.scheme.com/tspl3/}},
    date-added = {2009-08-07 21:29:20},
    edition = {Third},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {The {Scheme} Programming Language},
    x-publisher = {{MIT} Press},
    year = {2002}
}



@phdthesis{dvanhorn:sampath-phd,
    author = {Sampath, Prahladavaradan},
    citeulike-article-id = {5395016},
    date-added = {2009-08-07 21:29:20},
    keywords = {file-import-09-08-07},
    month = {Jan},
    priority = {2},
    school = {Imperial College, University of London},
    title = {Program Analysis using Game Semantics},
    year = {2000}
}



@article{dvanhorn:hankin-malacaria-cs99,
    author = {Hankin, Chris and Malacaria, Pasquale},
    citeulike-article-id = {5395015},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/333580.333584},
    date-added = {2009-08-07 21:29:20},
    journal = {ACM Comput. Surv.},
    keywords = {file-import-09-08-07},
    number = {3},
    priority = {2},
    title = {Program analysis games},
    volume = {31},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/333580.333584},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/333580.333584},
    year = {1999}
}



@inproceedings{dvanhorn:jones-nielson,
    author = {Jones, Neil D. and Nielson, Flemming},
    citeulike-article-id = {5395014},
    date-added = {2009-08-07 21:29:19},
    editor = {Abramsky, S. and Gabbay, Dov M. and Maibaum, T. S. E.},
    keywords = {file-import-09-08-07},
    pages = {527--636},
    priority = {2},
    title = {Abstract interpretation: a semantics-based tool for program analysis},
    x-address = {Oxford, UK},
    x-publisher = {Oxford University Press},
    year = {1995}
}



@book{dvanhorn:handbook-of-logic,
    citeulike-article-id = {5395013},
    date-added = {2009-08-07 21:29:19},
    editor = {Abramsky, S. and Gabbay, Dov M. and Maibaum, T. S. E.},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Handbook of logic in computer science (vol. 4): semantic modelling},
    x-address = {Oxford, UK},
    x-publisher = {Oxford University Press},
    year = {1995}
}



@inproceedings{dvanhorn:cousot-cousot-popl77,
    author = {Cousot, Patrick and Cousot, Radhia},
    booktitle = {POPL '77: Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
    citeulike-article-id = {5395012},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/512950.512973},
    date-added = {2009-08-07 21:29:19},
    keywords = {file-import-09-08-07},
    location = {Los Angeles, California},
    pages = {238--252},
    priority = {2},
    title = {Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/512950.512973},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/512950.512973},
    year = {1977}
}



@article{dvanhorn:cousot-cousot-jlc92,
    author = {Cousot, Patrick and Cousot, Radhia},
    citeulike-article-id = {5395011},
    date-added = {2009-08-07 21:29:19},
    journal = {Journal of Logic and Computation},
    keywords = {file-import-09-08-07},
    month = {August},
    number = {4},
    pages = {511--547},
    priority = {2},
    title = {Abstract Interpretation Frameworks},
    volume = {2},
    x-publisher = {Oxford University Press, Oxford, UK},
    year = {1992}
}



@book{dvanhorn:curry-fest,
    citeulike-article-id = {5395010},
    date-added = {2009-08-07 21:29:19},
    editor = {Seldin, Jonathan P. and Hindley, J. Roger},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism},
    x-address = {London},
    x-publisher = {Academic Press},
    year = {1980}
}



@inproceedings{dvanhorn:howard,
    author = {Howard, William A.},
    citeulike-article-id = {5395009},
    date-added = {2009-08-07 21:29:19},
    editor = {Seldin, Jonathan P. and Hindley, J. Roger},
    keywords = {file-import-09-08-07},
    pages = {479--490},
    priority = {2},
    title = {The formulae-as-types notion of construction},
    x-address = {London},
    x-publisher = {Academic Press},
    year = {1980}
}



@book{dvanhorn:sorensen-urzyczyn,
    author = {S{o}rensen, Morten H. and Urzyczyn, Pawel},
    citeulike-article-id = {5395008},
    date-added = {2009-08-07 21:29:19},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Studies in Logic and the Foundations of Mathematics},
    title = {Lectures on the Curry-Howard Isomorphism},
    volume = {149},
    x-address = {New York, NY, USA},
    x-publisher = {Elsevier Science Inc.},
    year = {2006}
}



@article{dvanhorn:wells-apal99,
    author = {Wells, J. B.},
    citeulike-article-id = {5395007},
    date-added = {2009-08-07 21:29:19},
    journal = {Annals of Pure and Applied Logic},
    keywords = {file-import-09-08-07},
    pages = {111--156},
    priority = {2},
    title = {Typability and type checking in {S}ystem {F} are equivalent and undecidable},
    volume = {98},
    year = {1999}
}



@book{dvanhorn:Papadimitriou94,
    author = {Papadimitriou, Christos H.},
    citeulike-article-id = {5395006},
    date-added = {2009-08-07 21:29:19},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Computational Complexity},
    x-address = {Reading, MA},
    x-publisher = {Addison-Wesley},
    year = {1994}
}



@inproceedings{dvanhorn:sereni-jones-aplas05,
    author = {Sereni, Damien and Jones, Neil D.},
    booktitle = {Programming Languages and Systems, Third Asian Symposium, APLAS 2005, Tsukuba, Japan, November 2-5, 2005, Proceedings},
    citeulike-article-id = {5395005},
    date-added = {2009-08-07 21:29:19},
    editor = {Yi, Kwangkeun},
    keywords = {file-import-09-08-07},
    pages = {281--297},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Termination Analysis of Higher-Order Functional Programs},
    volume = {3780},
    x-publisher = {Springer},
    year = {2005}
}



@inproceedings{dvanhorn:sereni-icfp07,
    author = {Sereni, Damien},
    booktitle = {ICFP '07: Proceedings of the 12th ACM SIGPLAN International Conference on Functional Programming, Freiburg, Germany, October 1--3, 2007},
    citeulike-article-id = {5395004},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1291151.1291165},
    date-added = {2009-08-07 21:29:19},
    editor = {Hinze, Ralf and Ramsey, Norman},
    key = {ICFP'07},
    keywords = {file-import-09-08-07},
    location = {Freiburg, Germany},
    pages = {71--84},
    priority = {2},
    title = {Termination analysis and call graph construction for higher-order functional programs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1291151.1291165},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1291151.1291165},
    year = {2007}
}



@book{dvanhorn:sicp,
    author = {Abelson, Harold and Sussman, Gerald J.},
    citeulike-article-id = {5395003},
    date-added = {2009-08-07 21:29:19},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Structure and Interpretation of Computer Programs},
    x-address = {Cambridge, MA, USA},
    x-publisher = {MIT Press},
    year = {1996}
}



@inproceedings{dvanhorn:might-shivers-icfp06,
    author = {Might, Matthew and Shivers, Olin},
    booktitle = {Proceedings of the 11th {ACM} {I}nternational {C}onference on {F}unctional {P}rogramming ({ICFP} 2006)},
    citeulike-article-id = {5395002},
    date-added = {2009-08-07 21:29:19},
    keywords = {file-import-09-08-07},
    month = {September},
    pages = {13--25},
    priority = {2},
    title = {Improving Flow Analyses via {\$\\Gamma\$CFA}: Abstract Garbage Collection and Counting},
    x-address = {Portland, Oregon},
    year = {2006}
}



@inbook{dvanhorn:hankin-games,
    author = {Hankin, Chris and Nagarajan, Rajagopal and Sampath, Prahladavaradan},
    chapter = {Flow analysis: games and nets},
    citeulike-article-id = {5395001},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    pages = {135--156},
    priority = {2},
    title = {The essence of computation: complexity, analysis, transformation},
    x-address = {New York, NY, USA},
    x-publisher = {Springer-Verlag New York, Inc.},
    year = {2002}
}



@article{dvanhorn:mossin-njc98,
    author = {Mossin, Christian},
    citeulike-article-id = {5395000},
    date-added = {2009-08-07 21:29:18},
    journal = {Nordic J. of Computing},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {214--234},
    priority = {2},
    title = {Higher-order value flow graphs},
    volume = {5},
    x-address = {Finland},
    x-publisher = {Publishing Association Nordic Journal of Computing},
    year = {1998}
}



@phdthesis{dvanhorn:neergaard-phd,
    author = {Peter {{Mo Ller} Neergaard}},
    citeulike-article-id = {5394999},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    month = {October},
    priority = {2},
    school = {Brandeis University},
    title = {Complexity Aspects of Programming Language Design: From Logspace to Elementary Time via Proofnets and Intersection Types},
    x-address = {Waltham, Massachusetts},
    year = {2004}
}



@article{dvanhorn:ashley-dybvig-toplas98,
    author = {Ashley, J. Michael and Dybvig, R. Kent},
    citeulike-article-id = {5394998},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/291891.291898},
    date-added = {2009-08-07 21:29:18},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {845--868},
    priority = {2},
    title = {A practical and flexible flow analysis for higher-order languages},
    volume = {20},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/291891.291898},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/291891.291898},
    year = {1998}
}



@inproceedings{dvanhorn:burn-hankin-abramsky,
    author = {Burn, G. L. and Hankin, C. L. and Abramsky, S.},
    booktitle = {Programs as data objects},
    citeulike-article-id = {5394997},
    date-added = {2009-08-07 21:29:18},
    editor = {Ganzinger, H. and Jones, N.},
    keywords = {file-import-09-08-07},
    location = {Copenhagen, Denmark},
    pages = {42--62},
    priority = {2},
    title = {The theory of strictness analysis for higher order functions},
    x-address = {New York, NY, USA},
    x-publisher = {Springer-Verlag},
    year = {1985}
}



@article{dvanhorn:gmsv,
    author = {Gaifman, Haim and Mairson, Harry and Sagiv, Yehoshua and Vardi, Moshe Y.},
    citeulike-article-id = {5394996},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/174130.174142},
    date-added = {2009-08-07 21:29:18},
    journal = {J. ACM},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {683--713},
    priority = {2},
    title = {Undecidable optimization problems for database logic programs},
    volume = {40},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/174130.174142},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/174130.174142},
    year = {1993}
}



@article{dvanhorn:hkmv,
    author = {Hillebrand, Gerd G. and Kanellakis, Paris C. and Mairson, Harry G. and Vardi, Moshe Y.},
    citeulike-article-id = {5394995},
    date-added = {2009-08-07 21:29:18},
    journal = {J. Logic Program.},
    keywords = {file-import-09-08-07},
    number = {2},
    pages = {163--190},
    priority = {2},
    title = {Undecidable Boundedness Problems for Datalog Programs},
    volume = {25},
    year = {1995}
}



@inproceedings{dvanhorn:schubert-tcla01,
    author = {Schubert, Aleksy},
    booktitle = {Typed Lambda Calculi and Applications, 5th International Conference, TLCA 2001, Krakow, Poland, May 2-5, 2001, Proceedings},
    citeulike-article-id = {5394994},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    pages = {400--414},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {The Complexity of beta-Reduction in Low Orders.},
    volume = {2044},
    x-publisher = {Springer},
    year = {2001}
}



@techreport{dvanhorn:midtgaard-07,
    author = {Midtgaard, Jan},
    citeulike-article-id = {5394993},
    comment = {To appear in revised form in ACM Computing Surveys.},
    date-added = {2009-08-07 21:29:18},
    institution = {DAIMI, Department of Computer Science, University of Aarhus},
    keywords = {file-import-09-08-07},
    month = {December},
    number = {BRICS RS-07-18},
    priority = {2},
    title = {Control-flow analysis of functional programs},
    type = {Technical Report},
    x-address = {Aarhus, Denmark},
    year = {2007}
}



@phdthesis{dvanhorn:kam-76,
    author = {Kam, John B.},
    citeulike-article-id = {5394992},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    priority = {2},
    school = {Princeton University},
    title = {Monotone data flow analysis frameworks: a formal theory of global computer program optimization.},
    x-address = {Princeton, NJ, USA},
    year = {1976}
}



@article{dvanhorn:kam-ullman-76,
    author = {Kam, John B. and Ullman, Jeffrey D.},
    citeulike-article-id = {5394991},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/321921.321938},
    date-added = {2009-08-07 21:29:18},
    journal = {J. ACM},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {158--171},
    priority = {2},
    title = {Global Data Flow Analysis and Iterative Algorithms},
    volume = {23},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/321921.321938},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/321921.321938},
    year = {1976}
}



@book{dvanhorn:hecht,
    author = {Hecht, Matthew S.},
    citeulike-article-id = {5394990},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Flow Analysis of Computer Programs},
    x-address = {New York, NY, USA},
    x-publisher = {Elsevier Science Inc.},
    year = {1977}
}



@book{dvanhorn:mackay,
    author = {Mackay, David J. C.},
    citeulike-article-id = {5394989},
    date-added = {2009-08-07 21:29:18},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Information Theory, Inference \& Learning Algorithms},
    x-address = {New York, NY, USA},
    x-publisher = {Cambridge University Press},
    year = {2002}
}



@article{dvanhorn:shannon,
    author = {Shannon, Claude E.},
    citeulike-article-id = {5394988},
    date-added = {2009-08-07 21:29:18},
    journal = {Bell System Technical Journal},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {A mathematical theory of communication},
    volume = {27},
    year = {1948}
}



@techreport{dvanhorn:henglein92d,
    author = {Henglein, Fritz},
    citeulike-article-id = {5394987},
    comment = {DIKU Semantics Report D-193},
    date-added = {2009-08-07 21:29:17},
    keywords = {file-import-09-08-07},
    month = {March},
    priority = {2},
    title = {Simple Closure Analysis},
    year = {1992}
}



@inproceedings{dvanhorn:lafont-ll95,
    author = {Lafont, Yves},
    booktitle = {Proceedings of the workshop on Advances in linear logic},
    citeulike-article-id = {5394986},
    date-added = {2009-08-07 21:29:17},
    keywords = {file-import-09-08-07},
    pages = {225--247},
    priority = {2},
    title = {From proof-nets to interaction nets},
    x-address = {New York, NY, USA},
    x-publisher = {Cambridge University Press},
    year = {1995}
}



@inproceedings{dvanhorn:mossin-sas97,
    author = {Mossin, Christian},
    booktitle = {SAS '97: Proceedings of the 4th International Symposium on Static Analysis},
    citeulike-article-id = {5394985},
    date-added = {2009-08-07 21:29:17},
    keywords = {file-import-09-08-07},
    pages = {250--264},
    priority = {2},
    title = {Exact Flow Analysis},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1997}
}



@book{dvanhorn:jones-et-al-93,
    author = {Jones, Neil D. and Gomard, Carsten K. and Sestoft, Peter},
    citeulike-article-id = {5394984},
    date-added = {2009-08-07 21:29:17},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Partial evaluation and automatic program generation},
    x-address = {Upper Saddle River, NJ, USA},
    x-publisher = {Prentice-Hall, Inc.},
    year = {1993}
}



@article{dvanhorn:danvy-et-al-toplas96,
    author = {Danvy, Olivier and Karoline Malmkjae and Palsberg, Jens},
    citeulike-article-id = {5394983},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/236114.236119},
    date-added = {2009-08-07 21:29:17},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {6},
    pages = {730--751},
    priority = {2},
    title = {Eta-expansion does The Trick},
    volume = {18},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/236114.236119},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/236114.236119},
    year = {1996}
}



@article{dvanhorn:banerjee-jensen-mscs03,
    author = {Banerjee, Anindya and Jensen, Thomas},
    citeulike-article-id = {5394982},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129502003845},
    date-added = {2009-08-07 21:29:17},
    journal = {Mathematical. Structures in Comp. Sci.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {87--124},
    priority = {2},
    title = {Modular control-flow analysis with rank 2 intersection types},
    volume = {13},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0960129502003845},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0960129502003845},
    year = {2003}
}



@inproceedings{dvanhorn:DBLP:conf/ictcs/MairsonT03,
    author = {Mairson, Harry G. and Terui, Kazushige},
    booktitle = {Theoretical Computer Science, 8th Italian Conference, ICTCS 2003, Bertinoro, Italy, October 13-15, 2003, Proceedings},
    citeulike-article-id = {5394981},
    date-added = {2009-08-07 21:29:16},
    editor = {Blundo, Carlo and Laneve, Cosimo},
    keywords = {file-import-09-08-07},
    pages = {23--36},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {On the Computational Complexity of Cut-Elimination in Linear Logic},
    volume = {2841},
    x-publisher = {Springer},
    year = {2003}
}



@inproceedings{dvanhorn:danvy-filinksi-lfp90,
    author = {Danvy, Olivier and Filinski, Andrzej},
    booktitle = {LFP '90: Proceedings of the 1990 ACM conference on LISP and Functional Programming},
    citeulike-article-id = {5394980},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/91556.91622},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    location = {Nice, France},
    pages = {151--160},
    priority = {2},
    title = {Abstracting control},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/91556.91622},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/91556.91622},
    year = {1990}
}



@inproceedings{dvanhorn:parigot-lpar92,
    author = {Parigot, Michel},
    booktitle = {Logic Programming and Automated Reasoning,International Conference LPAR'92, St. Petersburg, Russia, July 15-20, 1992, Proceedings},
    citeulike-article-id = {5394979},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    pages = {190--201},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {\$\\lambda\\mu\$-Calculus: An Algorithmic Interpretation of Classical Natural Deduction},
    volume = {624},
    x-publisher = {Springer},
    year = {1992}
}



@inproceedings{dvanhorn:filinski-ctcs89,
    author = {Filinski, Andrzej},
    booktitle = {Category Theory and Computer Science},
    citeulike-article-id = {5394978},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    pages = {224--249},
    priority = {2},
    title = {Declarative Continuations: an Investigation of Duality in Programming Language Semantics},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1989}
}



@inproceedings{dvanhorn:lafont-proofs-and-types,
    author = {Lafont, Yves},
    citeulike-article-id = {5394977},
    comment = {Reprinted with corrections 1990},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    pages = {149--160},
    priority = {2},
    title = {What is Linear Logic?},
    x-address = {New York, NY, USA},
    x-publisher = {Cambridge University Press},
    year = {1989}
}



@book{dvanhorn:girard-proofs-and-types,
    author = {Girard, Jean Y. and Taylor, Paul and Lafont, Yves},
    citeulike-article-id = {5394976},
    comment = {Reprinted with corrections 1990},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Proofs and types},
    x-address = {New York, NY, USA},
    x-publisher = {Cambridge University Press},
    year = {1989}
}



@article{dvanhorn:asperti-laneve-tcs95,
    author = {Asperti, Andrea and Laneve, Cosimo},
    citeulike-article-id = {5394975},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(94)00279-7},
    date-added = {2009-08-07 21:29:16},
    journal = {Theor. Comput. Sci.},
    keywords = {file-import-09-08-07},
    number = {2},
    pages = {277--297},
    priority = {2},
    title = {Paths, computations and labels in the \$\\lambda\$-calculus},
    volume = {142},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/0304-3975(94)00279-7},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(94)00279-7},
    year = {1995}
}



@phdthesis{dvanhorn:Mossin:97:FlowAnalysis,
    author = {Mossin, Christian},
    citeulike-article-id = {5394974},
    date-added = {2009-08-07 21:29:16},
    keywords = {analysis, data, file-import-09-08-07, flow, types},
    month = {January},
    priority = {2},
    school = {DIKU, University of Copenhagen},
    title = {Flow Analysis of Typed Higher-Order Programs},
    year = {1997}
}



@misc{dvanhorn:mairson-unpub06,
    author = {Mairson, Harry G.},
    citeulike-article-id = {5394973},
    comment = {Unpublished manuscript},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    priority = {2},
    title = {Axiom-sensitive normalization bounds for multiplicative linear logic},
    year = {2006}
}



@inproceedings{dvanhorn:mairson-popl90,
    author = {Mairson, Harry G.},
    booktitle = {POPL '90: Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394972},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96748},
    date-added = {2009-08-07 21:29:16},
    key = {POPL 1990},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {382--401},
    priority = {2},
    title = {Deciding {ML} typability is complete for deterministic exponential time},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/96709.96748},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96748},
    year = {1990}
}



@inproceedings{dvanhorn:girard-goi89,
    author = {Girard, Jean Y.},
    booktitle = {Logic Colloquium '88},
    citeulike-article-id = {5394971},
    date-added = {2009-08-07 21:29:16},
    editor = {Bonotto, C.},
    keywords = {file-import-09-08-07},
    pages = {221--260},
    priority = {2},
    title = {Geometry of interaction {I}: Interpretation of {S}ystem {F}},
    x-publisher = {North Holland},
    year = {1989}
}



@inproceedings{dvanhorn:mairson-icfp03,
    author = {Mairson, Harry G.},
    booktitle = {ICFP '03: Proceedings of the eighth ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5394970},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/944705.944717},
    comment = {Invited talk},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    location = {Uppsala, Sweden},
    pages = {125},
    priority = {2},
    title = {From {H}ilbert space to {D}ilbert space: context semantics as a language for games and flow analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/944705.944717},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/944705.944717},
    year = {2003}
}



@inproceedings{dvanhorn:banerjee-icfp97,
    author = {Banerjee, Anindya},
    booktitle = {ICFP '97: Proceedings of the second ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5394969},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/258948.258951},
    date-added = {2009-08-07 21:29:16},
    editor = {Berman, A. Michael},
    keywords = {file-import-09-08-07},
    location = {Amsterdam, The Netherlands},
    pages = {1--10},
    priority = {2},
    title = {A modular, polyvariant and type-based closure analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/258948.258951},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/258948.258951},
    year = {1997}
}



@inproceedings{dvanhorn:faxen-lomaps97,
    author = {Fax\'{e}n, Karl F.},
    booktitle = {Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages},
    citeulike-article-id = {5394968},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    pages = {260--278},
    priority = {2},
    title = {Polyvariance, Polymorphism and Flow Analysis},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1997}
}



@inproceedings{dvanhorn:faxen-sas95,
    author = {Fax{\'{e}}n, Karl F.},
    booktitle = {SAS},
    citeulike-article-id = {5394967},
    date-added = {2009-08-07 21:29:16},
    editor = {Mycroft, Alan},
    keywords = {file-import-09-08-07},
    pages = {136--153},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Optimizing Lazy Functional Programs Using Flow Inference},
    volume = {983},
    x-publisher = {Springer},
    year = {1995}
}



@inproceedings{dvanhorn:tang-jouvelot-tacs94,
    author = {Tang, Yan M. and Jouvelot, Pierre},
    booktitle = {TACS '94: Proceedings of the International Conference on Theoretical Aspects of Computer Software},
    citeulike-article-id = {5394966},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    pages = {224--243},
    priority = {2},
    title = {Separate Abstract Interpretation for Control-Flow Analysis},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1994}
}



@inproceedings{dvanhorn:sestoft-fpca89,
    author = {Sestoft, Peter},
    booktitle = {FPCA '89: Proceedings of the fourth International Conference on Functional Programming Languages and Computer Architecture},
    citeulike-article-id = {5394965},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/99370.99374},
    date-added = {2009-08-07 21:29:16},
    keywords = {file-import-09-08-07},
    location = {Imperial College, London, United Kingdom},
    pages = {39--53},
    priority = {2},
    title = {Replacing function parameters by global variables},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/99370.99374},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/99370.99374},
    year = {1989}
}



@mastersthesis{dvanhorn:sestoft-ms,
    author = {Sestoft, Peter},
    citeulike-article-id = {5394964},
    comment = {Master's thesis no.\~{}254},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    month = {Oct},
    priority = {2},
    school = {DIKU},
    title = {Replacing function parameters by global variables},
    x-address = {University of Copenhagen, Denmark},
    year = {1988}
}



@inproceedings{dvanhorn:heintze-lfp94,
    author = {Heintze, Nevin},
    booktitle = {LFP '94: Proceedings of the 1994 ACM Conference on LISP and Functional Programming},
    citeulike-article-id = {5394963},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/182409.182495},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    location = {Orlando, Florida, United States},
    pages = {306--317},
    priority = {2},
    title = {Set-based analysis of {ML} programs},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/182409.182495},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/182409.182495},
    year = {1994}
}



@inproceedings{dvanhorn:nielson-nielson-popl97,
    author = {Nielson, Flemming and Nielson, Hanne R.},
    booktitle = {POPL '97: Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394962},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/263699.263745},
    date-added = {2009-08-07 21:29:15},
    key = {POPL 1997},
    keywords = {file-import-09-08-07},
    location = {Paris, France},
    pages = {332--345},
    priority = {2},
    title = {Infinitary control flow analysis: a collecting semantics for closure analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/263699.263745},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/263699.263745},
    year = {1997}
}



@article{dvanhorn:palsberg-pavlopoulou-jfp01,
    author = {Palsberg, Jens and Pavlopoulou, Christina},
    citeulike-article-id = {5394961},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S095679680100394X},
    date-added = {2009-08-07 21:29:15},
    journal = {J. Funct. Program.},
    keywords = {file-import-09-08-07},
    number = {3},
    pages = {263--317},
    priority = {2},
    title = {From Polyvariant flow information to intersection and union types},
    volume = {11},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S095679680100394X},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S095679680100394X},
    year = {2001}
}



@inproceedings{dvanhorn:DBLP:conf/sas/95,
    citeulike-article-id = {5394960},
    date-added = {2009-08-07 21:29:15},
    editor = {Mycroft, Alan},
    keywords = {file-import-09-08-07},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Static Analysis, Second International Symposium, SAS'95, Glasgow, UK, September 25-27, 1995, Proceedings},
    volume = {983},
    x-publisher = {Springer},
    year = {1995}
}



@inproceedings{dvanhorn:heintze-sas95,
    author = {Heintze, Nevin},
    booktitle = {SAS},
    citeulike-article-id = {5394959},
    date-added = {2009-08-07 21:29:15},
    editor = {Mycroft, Alan},
    keywords = {file-import-09-08-07},
    pages = {189--206},
    priority = {2},
    series = {Lecture Notes in Computer Science},
    title = {Control-Flow Analysis and Type Systems},
    volume = {983},
    x-publisher = {Springer},
    year = {1995}
}



@article{dvanhorn:palsberg-okeefe-toplas95,
    author = {Palsberg, Jens and O'Keefe, Patrick},
    citeulike-article-id = {5394958},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/210184.210187},
    date-added = {2009-08-07 21:29:15},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {576--599},
    priority = {2},
    title = {A type system equivalent to flow analysis},
    volume = {17},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/210184.210187},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/210184.210187},
    year = {1995}
}



@article{dvanhorn:wright-jagannathan-toplas98,
    author = {Wright, Andrew K. and Jagannathan, Suresh},
    citeulike-article-id = {5394957},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/271510.271523},
    date-added = {2009-08-07 21:29:15},
    issn = {0164-0925},
    journal = {ACM Trans. Program. Lang. Syst.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {166--207},
    priority = {2},
    title = {Polymorphic splitting: an effective polyvariant flow analysis},
    volume = {20},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/271510.271523},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/271510.271523},
    year = {1998}
}



@inproceedings{dvanhorn:griffin-popl90,
    author = {Griffin, Timothy G.},
    booktitle = {POPL '90: Proceedings of the 17th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394956},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96714},
    date-added = {2009-08-07 21:29:15},
    key = {POPL 1990},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {47--58},
    priority = {2},
    title = {A formulae-as-type notion of control},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/96709.96714},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/96709.96714},
    year = {1990}
}



@misc{dvanhorn:terui-ll2002,
    author = {Terui, Kazushige},
    citeulike-article-id = {5394955},
    comment = {Invited talk at LL2002 (LICS2002 affiliated workshop), Copenhagen},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    month = {July},
    priority = {2},
    title = {On the complexity of Cut-Elimination in Linear Logic},
    year = {2002}
}



@inproceedings{dvanhorn:jones81,
    author = {Jones, Neil D.},
    booktitle = {Proceedings of the 8th Colloquium on Automata, Languages and Programming},
    citeulike-article-id = {5394954},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    pages = {114--128},
    priority = {2},
    title = {Flow Analysis of Lambda Expressions (Preliminary Version)},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {1981}
}



@article{dvanhorn:palsberg-toplas95,
    author = {Palsberg, Jens},
    citeulike-article-id = {5394953},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/200994.201001},
    date-added = {2009-08-07 21:29:15},
    journal = {ACM Trans.\\ Program.\\ Lang.\\ Syst.},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {47--62},
    priority = {2},
    title = {Closure analysis in constraint form},
    volume = {17},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/200994.201001},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/200994.201001},
    year = {1995}
}



@inproceedings{dvanhorn:heintze-mcallester-pldi97,
    author = {Heintze, Nevin and Mcallester, David},
    booktitle = {PLDI '97: Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation},
    citeulike-article-id = {5394952},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/258915.258939},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    location = {Las Vegas, Nevada, United States},
    pages = {261--272},
    priority = {2},
    title = {Linear-time subtransitive control flow analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/258915.258939},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/258915.258939},
    year = {1997}
}



@inproceedings{dvanhorn:heintze-mcallester-lics97,
    author = {Heintze, Nevin and Mcallester, David},
    booktitle = {LICS '97: Proceedings of the 12th Annual IEEE Symposium on Logic in Computer Science},
    citeulike-article-id = {5394951},
    date-added = {2009-08-07 21:29:15},
    keywords = {file-import-09-08-07},
    pages = {342},
    priority = {2},
    title = {On the Cubic Bottleneck in Subtyping and Flow Analysis},
    x-address = {Washington, DC, USA},
    x-publisher = {IEEE Computer Society},
    year = {1997}
}



@article{dvanhorn:ladner-75,
    author = {Ladner, Richard E.},
    citeulike-article-id = {5394950},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/990518.990519},
    date-added = {2009-08-07 21:29:14},
    journal = {SIGACT News},
    keywords = {file-import-09-08-07},
    number = {1},
    pages = {18--20},
    priority = {2},
    title = {The circuit value problem is log space complete for \${P}\$},
    volume = {7},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/990518.990519},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/990518.990519},
    year = {1975}
}



@inproceedings{dvanhorn:mairson-fsttcs02,
    author = {Mairson, Harry G.},
    booktitle = {FST TCS '02: Proceedings of the 22nd Conference Kanpur on Foundations of Software Technology and Theoretical Computer Science},
    citeulike-article-id = {5394949},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    pages = {2--17},
    priority = {2},
    title = {From {H}ilbert Spaces to {D}ilbert Spaces: {C}ontext Semantics Made Simple},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {2002}
}



@article{dvanhorn:mairson-jfp04,
    author = {Mairson, Harry G.},
    citeulike-article-id = {5394947},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796804005131},
    date-added = {2009-08-07 21:29:14},
    journal = {J. Functional Program.},
    keywords = {file-import-09-08-07},
    number = {6},
    pages = {623--633},
    priority = {2},
    title = {Linear lambda calculus and {PTIME}-completeness},
    volume = {14},
    x-address = {New York, NY, USA},
    x-doi = {http://dx.doi.org/10.1017/S0956796804005131},
    x-publisher = {Cambridge University Press},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1017/S0956796804005131},
    year = {2004}
}



@inproceedings{dvanhorn:henglein-mairson-popl91,
    author = {Henglein, Fritz and Mairson, Harry G.},
    booktitle = {POPL '91: Proceedings of the 18th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394946},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/99583.99602},
    date-added = {2009-08-07 21:29:14},
    key = {POPL 1991},
    keywords = {file-import-09-08-07},
    location = {Orlando, Florida, United States},
    pages = {119--130},
    priority = {2},
    title = {The complexity of type inference for higher-order lambda calculi},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/99583.99602},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/99583.99602},
    year = {1991}
}



@inproceedings{dvanhorn:neergaard-mairson-icfp04,
    author = {Peter {{Mo Ller} Neergaard} and Mairson, Harry G.},
    booktitle = {ICFP '04: Proceedings of the ninth ACM SIGPLAN International Conference on Functional Programming},
    citeulike-article-id = {5394945},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1016850.1016871},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    location = {Snow Bird, UT, USA},
    pages = {138--149},
    priority = {2},
    title = {Types, potency, and idempotency: why nonlinearity and amnesia make a type system work},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1016850.1016871},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1016850.1016871},
    year = {2004}
}



@inproceedings{dvanhorn:jagannathan-weeks-popl95,
    author = {Jagannathan, Suresh and Weeks, Stephen},
    booktitle = {POPL '95: Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394944},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/199448.199536},
    date-added = {2009-08-07 21:29:14},
    key = {POPL 1995},
    keywords = {file-import-09-08-07},
    location = {San Francisco, California, United States},
    pages = {393--407},
    priority = {2},
    title = {A unified treatment of flow analysis in higher-order languages},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/199448.199536},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/199448.199536},
    year = {1995}
}



@inproceedings{dvanhorn:lawall-mairson-esop00,
    author = {Lawall, Julia L. and Mairson, Harry G.},
    booktitle = {ESOP '00: Proceedings of the 9th European Symposium on Programming Languages and Systems},
    citeulike-article-id = {5394943},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    pages = {245--259},
    priority = {2},
    title = {Sharing Continuations: Proofnets for Languages with Explicit Control},
    x-address = {London, UK},
    x-publisher = {Springer-Verlag},
    year = {2000}
}



@inproceedings{dvanhorn:shivers-sigplan04,
    author = {Shivers, Olin},
    booktitle = {Best of PLDI 1988},
    citeulike-article-id = {5394942},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/989393.989421},
    date-added = {2009-08-07 21:29:14},
    editor = {McKinley, Kathryn S.},
    keywords = {file-import-09-08-07},
    number = {4},
    pages = {257--269},
    priority = {2},
    title = {Higher-order control-flow analysis in retrospect: lessons learned, lessons abandoned},
    volume = {39},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/989393.989421},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/989393.989421},
    year = {2004}
}



@phdthesis{dvanhorn:shivers-phd,
    author = {Shivers, Olin},
    citeulike-article-id = {5394941},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    priority = {2},
    school = {Carnegie Mellon University},
    title = {Control-flow analysis of higher-order languages},
    x-address = {Pittsburgh, PA, USA},
    x-publisher = {Carnegie Mellon University},
    year = {1991}
}



@inproceedings{dvanhorn:shivers-88,
    author = {Shivers, Olin},
    booktitle = {PLDI '88: Proceedings of the ACM SIGPLAN 1988 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {5394940},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/53990.54007},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    location = {Atlanta, Georgia, United States},
    pages = {164--174},
    priority = {2},
    title = {Control flow analysis in {S}cheme},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/53990.54007},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/53990.54007},
    year = {1988}
}



@inproceedings{dvanhorn:levy-80,
    author = {L\'{e}vy, Jean J.},
    citeulike-article-id = {5394939},
    date-added = {2009-08-07 21:29:14},
    editor = {Seldin, Jonathan P. and Hindley, J. Roger},
    keywords = {file-import-09-08-07},
    pages = {159--191},
    priority = {2},
    title = {Optimal reductions in the lambda-calculus},
    x-address = {London},
    x-publisher = {Academic Press},
    year = {1980}
}



@phdthesis{dvanhorn:levy-phd,
    author = {L\'{e}vy, Jean J.},
    citeulike-article-id = {5394938},
    comment = {th\'{e}se d'Etat},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    month = {January},
    priority = {2},
    school = {Paris 7},
    title = {R\'{e}ductions correctes et optimales dans le lambda-calcul},
    year = {1978}
}



@inproceedings{dvanhorn:gonthier-abadi-levy-popl92,
    author = {Gonthier, Georges and Abadi, Mart\'{i}n and L\'{e}vy, Jean J.},
    booktitle = {POPL '92: Proceedings of the 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    citeulike-article-id = {5394937},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/143165.143172},
    date-added = {2009-08-07 21:29:14},
    keywords = {file-import-09-08-07},
    location = {Albuquerque, New Mexico, United States},
    pages = {15--26},
    priority = {2},
    title = {The geometry of optimal lambda reduction},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/143165.143172},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/143165.143172},
    year = {1992}
}



@article{dvanhorn:mairson92,
    author = {Mairson, Harry G.},
    citeulike-article-id = {5394936},
    citeulike-linkout-0 = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(92)90020-G},
    date-added = {2009-08-07 21:29:14},
    journal = {Theoretical Computer Science},
    keywords = {file-import-09-08-07},
    number = {2},
    pages = {387--394},
    priority = {2},
    title = {A simple proof of a theorem of {Statman}},
    volume = {103},
    x-address = {Essex, UK},
    x-doi = {http://dx.doi.org/10.1016/0304-3975(92)90020-G},
    x-publisher = {Elsevier Science Publishers Ltd.},
    x-url = {http://dx.doi.org/http://dx.doi.org/10.1016/0304-3975(92)90020-G},
    year = {1992}
}



@inproceedings{dvanhorn:asperti-mairson,
    author = {Asperti, Andrea and Mairson, Harry G.},
    booktitle = {POPL '98: Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, San Diego, CA, USA, January 19--21, 1998},
    citeulike-article-id = {5394935},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268971},
    date-added = {2009-08-07 21:29:14},
    editor = {Macqueen, David B. and Cardelli, Luca},
    key = {POPL 1998},
    keywords = {file-import-09-08-07},
    location = {San Diego, California, United States},
    pages = {303--315},
    priority = {2},
    title = {Parallel beta reduction is not elementary recursive},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/268946.268971},
    x-publisher = {ACM Press},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/268946.268971},
    year = {1998}
}



@article{dvanhorn:statman79,
    author = {Statman, Richard},
    citeulike-article-id = {5394934},
    date-added = {2009-08-07 21:29:14},
    journal = {Theor.\\ Comput.\\ Sci.},
    keywords = {file-import-09-08-07},
    pages = {73--81},
    priority = {2},
    title = {The typed \$\\lambda\$-calculus is not elementary recursive},
    volume = {9},
    year = {1979}
}



@inproceedings{dvanhorn:icfp07,
    citeulike-article-id = {5394932},
    date-added = {2009-08-07 21:29:13},
    key = {ICFP'07},
    keywords = {file-import-09-08-07},
    location = {Freiburg, Germany},
    priority = {2},
    title = {Proceedings of the 2007 ACM SIGPLAN International Conference on Functional Programming, Freiburg, Germany, October 1--3},
    x-address = {New York, NY, USA},
    x-publisher = {ACM},
    year = {2007}
}



@inproceedings{dvanhorn:vanhorn-mairson-icfp07,
    author = {{Horn}, David {.} and Mairson, Harry G.},
    citeulike-article-id = {5394930},
    citeulike-linkout-0 = {http://dx.doi.org/http://doi.acm.org/10.1145/1291151.1291166},
    date-added = {2009-08-07 21:29:13},
    key = {ICFP'07},
    keywords = {file-import-09-08-07},
    location = {Freiburg, Germany},
    pages = {85--96},
    priority = {2},
    title = {Relating complexity and precision in control flow analysis},
    x-address = {New York, NY, USA},
    x-doi = {http://doi.acm.org/10.1145/1291151.1291166},
    x-publisher = {ACM},
    x-url = {http://dx.doi.org/http://doi.acm.org/10.1145/1291151.1291166},
    year = {2007}
}

@article{Logozzo:2005:AIO:1705553.1706098,
 author = {Logozzo, Francesco and Cortesi, Agostino},
 title = {Abstract Interpretation and Object-oriented Programming: Quo Vadis?},
 journal = {Electron. Notes Theor. Comput. Sci.},
 volume = {131},
 month = {May},
 year = {2005},
 issn = {1571-0661},
 pages = {75--84},
 numpages = {10},
 url = {http://dx.doi.org/10.1016/j.entcs.2005.01.024},
 doi = {http://dx.doi.org/10.1016/j.entcs.2005.01.024},
 acmid = {1706098},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Abstract interpretation, Object-oriented programming, static analysis},
}

@inproceedings{Agesen:1995:CPA:646153.679533,
 author = {Agesen, Ole},
 title = {The Cartesian Product Algorithm: Simple and Precise Type Inference Of Parametric Polymorphism},
 booktitle = {Proceedings of the 9th European Conference on Object-Oriented Programming},
 year = {1995},
 isbn = {3-540-60160-0},
 pages = {2--26},
 numpages = {25},
 url = {http://portal.acm.org/citation.cfm?id=646153.679533},
 acmid = {679533},
 publisher = {Springer-Verlag},
 address = {London, UK},
}

@inproceedings{Plevyak:1994:PCT:191080.191130,
 author = {Plevyak, John and Chien, Andrew A.},
 title = {Precise concrete type inference for object-oriented languages},
 booktitle = {Proceedings of the ninth annual conference on Object-oriented programming systems, language, and applications},
 series = {OOPSLA '94},
 year = {1994},
 isbn = {0-89791-688-3},
 location = {Portland, Oregon, United States},
 pages = {324--340},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/191080.191130},
 doi = {http://doi.acm.org/10.1145/191080.191130},
 acmid = {191130},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Cousot:1977:AIU:512950.512973,
 author = {Cousot, Patrick and Cousot, Radhia},
 title = {Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints},
 booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
 series = {POPL '77},
 year = {1977},
 location = {Los Angeles, California},
 pages = {238--252},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/512950.512973},
 doi = {http://doi.acm.org/10.1145/512950.512973},
 acmid = {512973},
 publisher = {ACM},
 address = {New York, NY, USA},
}




@inproceedings{1390664,
  author = {Raymond P.L. Buse and Westley R. Weimer},
  title = {Automatic documentation inference for exceptions},
  booktitle = {ISSTA '08: Proceedings of the 2008 International
                  Symposium on Software Testing and Analysis},
  year = {2008},
  isbn = {978-1-60558-050-0},
  pages = {273--282},
  location = {Seattle, WA, USA},
  doi = {http://doi.acm.org/10.1145/1390630.1390664},
  publisher = {ACM},
  address = {New York, NY, USA},
 }

@article{379269,
 author = {Ramkrishna Chatterjee and Barbara G. Ryder and William A. Landi},
 title = {Complexity of Points-To Analysis of {Java} in the Presence of Exceptions},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {27},
 number = {6},
 year = {2001},
 issn = {0098-5589},
 pages = {481--512},
 doi = {http://dx.doi.org/10.1109/32.926173},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 }

@article{316171,
 author = {Jong-Deok Choi and David Grove and Michael Hind and Vivek Sarkar},
 title = {Efficient and precise modeling of exceptions for the
                  analysis of {Java} programs},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {24},
 number = {5},
 year = {1999},
 issn = {0163-5948},
 pages = {21--31},
 doi = {http://doi.acm.org/10.1145/381788.316171},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{231399,
 author = {Steven Dawson and C. R. Ramakrishnan and David S. Warren},
 title = {Practical program analysis using general purpose logic
                  programming systems - a case study},
 booktitle = {PLDI '96: Proceedings of the ACM SIGPLAN 1996 conference
                  on Programming Language Design and Implementation},
 year = {1996},
 isbn = {0-89791-795-2},
 pages = {117--126},
 location = {Philadelphia, Pennsylvania, United States},
 doi = {http://doi.acm.org/10.1145/231379.231399},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{1069768,
 author = {Chen Fu and Ana Milanova and Barbara Gershon Ryder and David G. Wonnacott},
 title = {Robustness Testing of {Java} Server Applications},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {31},
 number = {4},
 year = {2005},
 issn = {0098-5589},
 pages = {292--311},
 doi = {http://dx.doi.org/10.1109/TSE.2005.51},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@inproceedings{1007516,
 author = {Chen Fu and Barbara G. Ryder and Ana Milanova and David Wonnacott},
 title = {Testing of java web services for robustness},
 booktitle = {ISSTA '04: Proceedings of the 2004 ACM SIGSOFT
                  International Symposium on Software Testing and
                  Analysis},
 year = {2004},
 isbn = {1-58113-820-2},
 pages = {23--34},
 location = {Boston, Massachusetts, USA},
 doi = {http://doi.acm.org/10.1145/1007512.1007516},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{1005491,
  author = {Jang-Wu Jo and Byeong-Mo Chang and Kwangkeun Yi and Kwang-Moo Choe},
  title = {An uncaught exception analysis for {Java}},
  journal = {J. Syst. Softw.},
  volume = {72},
  number = {1},
  year = {2004},
  issn = {0164-1212},
  pages = {59--69},
  doi = {http://dx.doi.org/10.1016/S0164-1212(03)00057-8},
  publisher = {Elsevier Science Inc.},
  address = {New York, NY, USA},
}

@techreport{jorgensen03,
  author = {John Jorgensen},
  title = {Improving the precision and correctness of exception analysis in {Soot}},
  number = {2003-3},
  month = sep,
  year = 2004,
  institution = {McGill University}
}


@inproceedings{996861,
 author = {Ond\v{r}ej Lhot\'{a}k and Laurie Hendren},
 title = {Jedd: a {BDD}-based relational extension of {Java}},
 booktitle = {PLDI '04: Proceedings of the ACM SIGPLAN 2004 conference
                  on Programming Language Design and Implementation},
 year = {2004},
 isbn = {1-58113-807-5},
 pages = {158--169},
 location = {Washington DC, USA},
 doi = {http://doi.acm.org/10.1145/996841.996861},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@phdthesis{ whaleyphd,
  author = {John Whaley},
  title = {Context-Sensitive Pointer Analysis using Binary Decision
                  Diagrams},
  school = {Stanford University},
  month = mar,
  year = 2007,
}

@PhdThesis{Lhotak:2006:PAU,
  author =       {Ond\v{r}ej Lhot\'ak},
  title =        {Program Analysis using Binary Decision Diagrams},
  school =       {McGill University},
  year =         2006,
  month =        jan,
}

@article{352832,
  author = {Saurabh Sinha and Mary Jean Harrold},
  title = {Analysis and Testing of Programs with Exception Handling Constructs},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {26},
  number = {9},
  year = {2000},
  issn = {0098-5589},
  pages = {849--871},
  doi = {http://dx.doi.org/10.1109/32.877846},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
}

@inproceedings{1254758,
 author = {Ju Qian and Baowen Xu},
 title = {Thread-Sensitive Pointer Analysis for Inter-Thread Dataflow
                  Detection},
 booktitle = {FTDCS '07: Proc. of the 11th IEEE Int. Workshop on
                  Future Trends of Distributed Computing Systems},
 year = {2007},
 isbn = {0-7695-2810-4},
 pages = {157--163},
 doi = {http://dx.doi.org/10.1109/FTDCS.2007.34},
 publisher = {IEEE Computer Society},
}

@article{941569,
  author = {Martin P. Robillard and Gail C. Murphy},
  title = {Static analysis to support the evolution of exception
                  structure in object-oriented systems},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {12},
  number = {2},
  year = {2003},
  issn = {1049-331X},
  pages = {191--221},
  doi = {http://doi.acm.org/10.1145/941566.941569},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{872353,
  author = {S. Ryu and K. Yi},
  title = {Exception Analysis for Multithreaded {Java} Programs},
  booktitle = {APAQS '01: Proceedings of the Second Asia-Pacific
                  Conference on Quality Software},
  year = {2001},
  isbn = {0-7695-1287-9},
  pages = {23},
  publisher = {IEEE Computer Society},
  address = {Washington, DC, USA},
}

@article{349230,
 author = {Xavier Leroy and Fran\c{c}ois Pessaux},
 title = {Type-based analysis of uncaught exceptions},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {22},
 number = {2},
 year = {2000},
 issn = {0164-0925},
 pages = {340--377},
 doi = {http://doi.acm.org/10.1145/349214.349230},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@misc{www:wala,
  title = {{T.J.} {W}atson Libraries for Analysis ({WALA})},
  author = {Stephen J. Fink},
  howpublished = {\url{http://wala.sourceforge.net}},
}

@inproceedings{717966,
 author = {Yi,, Kwangkeun and Ryu,, Sukyoung},
 title = {Towards a Cost-Effective Estimation of Uncaught Exceptions in {SML} Programs},
 booktitle = {SAS '97: Proceedings of the 4th International Symposium on Static Analysis},
 year = {1997},
 isbn = {3-540-63468-1},
 pages = {98--113},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }



@inproceedings{lhot.hend03,
  author = {Ond\v{r}ej Lhot\'ak and Laurie Hendren},
  title = {Scaling {Java} Points-to Analysis Using {Spark}},
  booktitle = {Compiler Construction, 12th International Conference},
  pages = {153--169},
  month = apr,
  year = 2003,
  editor = {G. Hedin},
  volume = {2622},
  series = {LNCS},
  address = {Warsaw, Poland},
  publisher = {Springer},
}
 

@inproceedings{1251540,
 author = {Ana Milanova},
 title = {Light context-sensitive points-to analysis for {Java}},
 booktitle = {PASTE '07: Proc. of the 7th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
 year = {2007},
 isbn = {978-1-59593-595-3},
 pages = {25--30},
 location = {San Diego, California, USA},
 doi = {http://doi.acm.org/10.1145/1251535.1251540},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@inproceedings{1390658,
 author = {Guoqing Xu and Atanas Rountev},
 title = {Merging equivalent contexts for scalable heap-cloning-based context-sensitive points-to analysis},
 booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
 year = {2008},
 isbn = {978-1-60558-050-0},
 pages = {225--236},
 location = {Seattle, WA, USA},
 doi = {http://doi.acm.org/10.1145/1390630.1390658},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{231399,
 author = {Steven Dawson and C. R. Ramakrishnan and David S. Warren},
 title = {Practical program analysis using general purpose logic programming systems---a case study},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {1996},
 isbn = {0-89791-795-2},
 pages = {117--126},
 location = {Philadelphia, Pennsylvania, United States},
 doi = {http://doi.acm.org/10.1145/231379.231399},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{1069785,
 author = {Diptikalyan Saha and C. R. Ramakrishnan},
 title = {Incremental and demand-driven points-to analysis using logic programming},
 booktitle = {PPDP '05: Proc. of the 7th ACM SIGPLAN int. conf. on Principles and practice of declarative programming},
 year = {2005},
 isbn = {1-59593-090-6},
 pages = {117--128},
 location = {Lisbon, Portugal},
 doi = {http://doi.acm.org/10.1145/1069774.1069785},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{1134027,
 author = {Manu Sridharan and Rastislav Bod\'{\i}k},
 title = {Refinement-based context-sensitive points-to analysis for {J}ava},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {2006},
 isbn = {1-59593-320-4},
 pages = {387--400},
 location = {Ottawa, Ontario, Canada},
 doi = {http://doi.acm.org/10.1145/1133981.1134027},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@inproceedings{1094817,
 author = {Manu Sridharan and Denis Gopan and Lexin Shan and Rastislav Bod\'{\i}k},
 title = {Demand-driven points-to analysis for {J}ava},
 booktitle = {Conf. on Object Oriented Programming, Systems,
                  Languages, and Applications ({OOPSLA})},
 year = {2005},
 isbn = {1-59593-031-0},
 pages = {59--76},
 location = {San Diego, CA, USA},
 doi = {http://doi.acm.org/10.1145/1094811.1094817},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{folding,
 author = {Saumya Kanti Debray},
 title = {Unfold/fold transformations and loop optimization of logic programs},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {1988},
 isbn = {0-89791-269-1},
 pages = {297--307},
 location = {Atlanta, Georgia, United States},
 doi = {http://doi.acm.org/10.1145/53990.54020},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{996861,
 author = {Ond\v{r}ej Lhot\'{a}k and Laurie Hendren},
 title = {Jedd: a BDD-based relational extension of {J}ava},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {2004},
 isbn = {1-58113-807-5},
 pages = {158--169},
 location = {Washington DC, USA},
 doi = {http://doi.acm.org/10.1145/996841.996861},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{DBLP:conf/pldi/BerndlLQHU03,
  author    = {Marc Berndl and
               Ondrej Lhot{\'a}k and
               Feng Qian and
               Laurie J. Hendren and
               Navindra Umanee},
  title     = {Points-to analysis using {BDD}s},
  booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
  year      = {2003},
  pages     = {103-114},
  ee        = {http://doi.acm.org/10.1145/781131.781144},
  crossref  = {DBLP:conf/pldi/2003},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/pldi/2003,
  title     = {Proc. of the ACM SIGPLAN 2003 Conf. on Programming
               Language Design and Implementation 2003, San Diego, California,
               USA, June 9-11, 2003},
  booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
  publisher = {ACM},
  year      = {2003},
  isbn      = {1-58113-662-5},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@phdthesis{ whaleyphd,
  author = "John Whaley",
  title = "Context-Sensitive Pointer Analysis using Binary Decision Diagrams",
  school = "Stanford University",
  month = mar,
  year = 2007,
}

@PhdThesis{Lhotak:2006:PAU,
  author =       "Ond\v{r}ej Lhot\'ak",
  title =        "Program Analysis using Binary Decision Diagrams",
  school =       "McGill University",
  year =         "2006",
  month =        jan,
}

@inproceedings{1273923,
 author = {William C. Benton and Charles N. Fischer},
 title = {Interactive, scalable, declarative program analysis: from prototype to implementation},
 booktitle = {PPDP '07: Proc. of the 9th ACM SIGPLAN int. conf. on Principles and practice of declarative programming},
 year = {2007},
 isbn = {978-1-59593-769-8},
 pages = {13--24},
 location = {Wroclaw, Poland},
 doi = {http://doi.acm.org/10.1145/1273920.1273923},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{727424,
 author = {Thomas W. Reps},
 title = {Solving Demand Versions of Interprocedural Analysis Problems},
 booktitle = {Int. Conf. on Compiler Construction ({CC})},
 year = {1994},
 isbn = {3-540-57877-3},
 pages = {389--403},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@inproceedings{170066,
 author = {Ashish Gupta and Inderpal Singh Mumick and V. S. Subrahmanian},
 title = {Maintaining views incrementally},
 booktitle = {SIGMOD '93: Proc. of the 1993 ACM SIGMOD int. conf. on Management of data},
 year = {1993},
 isbn = {0-89791-592-5},
 pages = {157--166},
 location = {Washington, D.C., United States},
 doi = {http://doi.acm.org/10.1145/170035.170066},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{378802,
 author = {Nevin Heintze and Olivier Tardieu},
 title = {Demand-driven pointer analysis},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {2001},
 isbn = {1-58113-414-2},
 pages = {24--34},
 location = {Snowbird, Utah, United States},
 doi = {http://doi.acm.org/10.1145/378795.378802},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{lhot.hend03,
  author = "Ond\v{r}ej Lhot\'ak and Laurie Hendren",
  title = "Scaling {Java} Points-to Analysis Using {Spark}",
  booktitle =    {Compiler Construction, 12th Int. Conf.},
  pages =        {153--169},
  month =        {April},
  year =         {2003},
  editor =       {G. Hedin},
  volume =       {2622},
  series =       {LNCS},
  address =      {Warsaw, Poland},
  publisher = {Springer},
}

@article{1250766,
 author = {Chris Lattner and Andrew Lenharth and Vikram Adve},
 title = {Making context-sensitive points-to analysis with heap cloning practical for the real world},
 journal = {SIGPLAN Not.},
 volume = {42},
 number = {6},
 year = {2007},
 issn = {0362-1340},
 pages = {278--289},
 doi = {http://doi.acm.org/10.1145/1273442.1250766},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@inproceedings{996836,
 author = {Erik M. Nystrom and Hong-Seok Kim and Wen-mei W. Hwu},
 title = {Importance of heap specialization in pointer analysis},
 booktitle = {PASTE '04: Proc. of the 5th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering},
 year = {2004},
 isbn = {1-58113-910-1},
 pages = {43--48},
 location = {Washington DC, USA},
 doi = {http://doi.acm.org/10.1145/996821.996836},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{NaikAikenWhaley2006,
  author = {Mayur Naik and Alex Aiken and John Whaley},
  title = {Effective static race detection for {J}ava},
  booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
  year = {2006},
  pages = {308--319},
  location = {Ottawa, Ontario, Canada}
}


@misc{www:wala,
  title = {{T.J.} {W}atson Libraries for Analysis ({WALA})},
  author = {Stephen J. Fink},
  howpublished = {\url{http://wala.sourceforge.net}},
}

@article{1377494,
 author = {Lhot\'{a}k,, Ond\v{r}ej and Hendren,, Laurie},
 title = {Relations as an abstraction for {BDD}-based program analysis},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {30},
 number = {4},
 year = {2008},
 issn = {0164-0925},
 pages = {1--63},
 doi = {http://doi.acm.org/10.1145/1377492.1377494},
 publisher = {ACM},
 address = {New York, NY, USA},
 }



@inproceedings{Shivers:1988:CFA,
    address = {New York, NY, USA},
    author = {Shivers, Olin},
    booktitle = {Proceedings of the ACM SIGPLAN 1988 Conference on Programming Language Design and Implementation},
    citeulike-article-id = {1354},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=54007},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/53990.54007},
    date-added = {2009-06-20 04:08:28},
    doi = {10.1145/53990.54007},
    isbn = {0-89791-269-1},
    keywords = {cfa, continuation-passing-style, control-flow-analysis, cps, static-analysis},
    location = {Atlanta, Georgia, United States},
    month = {July},
    number = {7},
    pages = {164--174},
    priority = {0},
    publisher = {ACM},
    title = {Control flow analysis in {Scheme}},
    url = {http://dx.doi.org/10.1145/53990.54007},
    volume = {23},
    year = {1988}
}

@inproceedings{1146254,
 author = {Fink, Stephen and Yahav, Eran and Dor, Nurit and Ramalingam, G. and Geay, Emmanuel},
 title = {Effective typestate verification in the presence of aliasing},
 booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
 year = {2006},
 isbn = {1-59593-263-1},
 pages = {133--144},
 location = {Portland, Maine, USA},
 doi = {http://doi.acm.org/10.1145/1146238.1146254},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{DBLP:conf/paste/LiangPH05,
  author    = {Donglin Liang and
               Maikel Pennings and
               Mary Jean Harrold},
  title     = {Evaluating the impact of context-sensitivity on {A}ndersen's
               algorithm for {J}ava programs},
  booktitle = {PASTE},
  year      = {2005},
  pages     = {6-12},
  ee        = {http://doi.acm.org/10.1145/1108792.1108797},
  crossref  = {DBLP:conf/paste/2005},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/paste/2005,
  editor    = {Michael D. Ernst and
               Thomas P. Jensen},
  title     = {Proceedings of the 2005 ACM SIGPLAN-SIGSOFT Workshop on
               Program Analysis For Software Tools and Engineering, PASTE'05,
               Lisbon, Portugal, September 5-6, 2005},
  publisher = {ACM},
  year      = {2005},
  isbn      = {1-59593-239-9},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@InProceedings{Sundaresan:2000:PVM,
  author =       "Vijay Sundaresan and Laurie Hendren and Chrislain Razafimahefa and Raja Vall\'{e}e-Rai and Patrick Lam and Etienne Gagnon and Charles Godin",
  title =        "Practical virtual method call resolution for {Java}",
  booktitle =    "Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications",
  year =         "2000",
  ISBN =         "1-58113-200-X",
  pages =        "264--280",
  location =     "Minneapolis, Minnesota, United States",
  doi =          "http://doi.acm.org/10.1145/353171.353189",
  publisher =    "ACM Press",
}

@InProceedings{Tip:2000:SPB,
  author =       "Frank Tip and Jens Palsberg",
  title =        "Scalable propagation-based call graph construction algorithms",
  booktitle =    "Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications",
  year =         "2000",
  ISBN =         "1-58113-200-X",
  pages =        "281--293",
  location =     "Minneapolis, Minnesota, United States",
  doi =          "http://doi.acm.org/10.1145/353171.353190",
  publisher =    "ACM Press",
}

@inproceedings{typed-cfa,
  author = {John Reppy},
  title = {Type-sensitive control-flow analysis},
  booktitle = {Proceedings of the 2006 ACM SIGPLAN Workshop on {ML}},
  year = 2006,
  month = sep,
  pages = {74--83},
  pdf = {2006/ml-typed-cfa.pdf},
  abstract = {
    Higher-order typed languages, such as ML, provide strong
    support for data and type abstraction.  While such abstraction
    is often viewed as costing performance, there are situations
    where it may provide opportunities for more aggressive program
    optimization. Specifically, we can exploit the fact that type
    abstraction guarantees representation independence, which allows
    the compiler to specialize data representations.  This paper
    describes a first step in supporting such optimizations; namely
    a control-flow analysis that uses the program's type information
    to compute more precise results.  We present our algorithm as an
    extension of Serrano's version of 0-CFA and we show that it
    respects types.  We also discuss applications of the analysis with
    examples of optimizations enabled by the analysis that would not
    be possible normal CFA.
  },
  topic = {implementation,sml}
}

@inproceedings{lhotak-callgraph12,
author={Karim Ali and Ond\v{r}ej Lhot\'{a}k},
title={Application-Only Call Graph Construction},
year={2012},
isbn={978-3-642-31056-0},
booktitle = {European Conf. on Object-Oriented Programming ({ECOOP})},
volume={7313},
series={Lecture Notes in Computer Science},
editor={Noble, James},
doi={10.1007/978-3-642-31057-7_30},
url={http://dx.doi.org/10.1007/978-3-642-31057-7_30},
publisher={Springer Berlin Heidelberg},
pages={688-712}
}

@inproceedings{Liang:2011:SAR:1993498.1993567,
 author = {Liang, Percy and Naik, Mayur},
 title = {Scaling abstraction refinement via pruning},
   booktitle = "Conf. on Programming Language Design and Implementation ({PLDI})",
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {590--601},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993567},
 doi = {10.1145/1993498.1993567},
 acmid = {1993567},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstraction refinement, concurrency, heap abstraction, pruning, slicing, static analysis},
} 

@InProceedings{Lhotak:2011:PAE,
  author =       "Ond\v{r}ej Lhot\'{a}k and Kwok-Chiang Andrew Chung",
  title =        "Points-to analysis with efficient strong updates",
  booktitle = "{S}ymposium on {P}rinciples of {P}rogramming {L}anguages ({POPL})",
  year =         "2011",
  pages =        "3--16",
  publisher =    "ACM",
  address =      "New York, NY, USA",
}

@inproceedings{Fahndrich:1998:POC:277650.277667,
 author = {F\"{a}hndrich, Manuel and Foster, Jeffrey S. and Su, Zhendong and Aiken, Alexander},
 title = {Partial online cycle elimination in inclusion constraint graphs},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {1998},
 isbn = {0-89791-987-4},
 location = {Montreal, Quebec, Canada},
 pages = {85--96},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/277650.277667},
 doi = {10.1145/277650.277667},
 acmid = {277667},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Nasre:2012:ESC:2258996.2259013,
 author = {Nasre, Rupesh},
 title = {Exploiting the structure of the constraint graph for efficient points-to analysis},
 booktitle = {Proceedings of the 2012 International Symposium on Memory Management ({ISMM})},
 year = {2012},
 isbn = {978-1-4503-1350-6},
 location = {Beijing, China},
 pages = {121--132},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2258996.2259013},
 doi = {10.1145/2258996.2259013},
 acmid = {2259013},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {constraint graph, context-sensitivity, dominators, points-to analysis},
} 


@inproceedings{Tripp:2009:TET:1542476.1542486,
 author = {Tripp, Omer and Pistoia, Marco and Fink, Stephen J. and Sridharan, Manu and Weisman, Omri},
 title = {TAJ: effective taint analysis of web applications},
 booktitle = "Conf. on Programming Language Design and Implementation (PLDI)",
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {87--97},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1542476.1542486},
 doi = {10.1145/1542476.1542486},
 acmid = {1542486},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {java, program analysis, security, slicing, static analysis, taint analysis, web application},
} 

@inproceedings{1007516,
 author = {Chen Fu and Barbara G. Ryder and Ana Milanova and David Wonnacott},
 title = {Testing of java web services for robustness},
 booktitle = {ISSTA '04: Proceedings of the 2004 ACM SIGSOFT
                  International Symposium on Software Testing and
                  Analysis},
 year = {2004},
 isbn = {1-58113-820-2},
 pages = {23--34},
 location = {Boston, Massachusetts, USA},
 doi = {http://doi.acm.org/10.1145/1007512.1007516},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{Furr:2009:PST:1640089.1640110,
 author = {Furr, Michael and An, Jong-hoon (David) and Foster, Jeffrey S.},
 title = {Profile-guided Static Typing for Dynamic Scripting Languages},
 booktitle = {Proceedings of the 24th ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '09},
 year = {2009},
 isbn = {978-1-60558-766-0},
 location = {Orlando, Florida, USA},
 pages = {283--300},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/1640089.1640110},
 doi = {10.1145/1640089.1640110},
 acmid = {1640110},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {RIL, profile guided anlaysis, ruby, scripting languages},
} 


@inproceedings{Bodden:2011:TRA:1985793.1985827,
 author = {Bodden, Eric and Sewe, Andreas and Sinschek, Jan and Oueslati, Hela and Mezini, Mira},
 title = {Taming Reflection: Aiding Static Analysis in the Presence of Reflection and Custom Class Loaders},
 booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
 series = {ICSE '11},
 year = {2011},
 isbn = {978-1-4503-0445-0},
 location = {Waikiki, Honolulu, HI, USA},
 pages = {241--250},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1985793.1985827},
 doi = {10.1145/1985793.1985827},
 acmid = {1985827},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dynamic class loaders, dynamic class loading, native code, reflection, static analysis, tracing},
} 

@misc{soundiness13,
    author = {Ben Livshits and Manu Sridharan and Yannis Smaragdakis and Ond\v{r}ej Lhot\'{a}k},
    month = {June},
    title = {In Defense of Unsoundness},
    year = {2013},
    howpublished = {\emph{PLDI FIT 2013 presentation}, \url{http://www.soundiness.org/}}
}

@misc{www:wala-reflection,
  title = {{WALA} {U}ser{G}uide: {P}ointer{A}nalysis},
  author = {Stephen J. Fink and others},
  howpublished = {\url{http://wala.sourceforge.net/wiki/index.php/UserGuide:PointerAnalysis}},
}

@inproceedings{DBLP:conf/ecoop/AliL13,
  author    = {Karim Ali and
               Ondrej Lhot{\'a}k},
  title     = {Averroes: Whole-Program Analysis without the Whole Program},
  booktitle = {ECOOP},
  year      = {2013},
  pages     = {378-400},
  ee        = {http://dx.doi.org/10.1007/978-3-642-39038-8_16},
  crossref  = {DBLP:conf/ecoop/2013},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@proceedings{DBLP:conf/ecoop/2013,
  editor    = {Giuseppe Castagna},
  title     = {ECOOP 2013 - Object-Oriented Programming - 27th European
               Conference, Montpellier, France, July 1-5, 2013. Proceedings},
  booktitle = {ECOOP},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {7920},
  year      = {2013},
  isbn      = {978-3-642-39037-1},
  ee        = {http://dx.doi.org/10.1007/978-3-642-39038-8},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
